;; DO NOT EDIT: File is generated by AWS-SDK/GENERATOR.

(common-lisp:defpackage #:aws-sdk/services/cognito-idp/api
  (:use)
  (:nicknames #:aws/cognito-idp)
  (:import-from #:aws-sdk/generator/shape)
  (:import-from #:aws-sdk/generator/operation)
  (:import-from #:aws-sdk/api)
  (:import-from #:aws-sdk/request)
  (:import-from #:aws-sdk/error))
(common-lisp:in-package #:aws-sdk/services/cognito-idp/api)
(common-lisp:progn
 (common-lisp:defclass cognito-idp-request (aws-sdk/request:request)
                       common-lisp:nil
                       (:default-initargs :service "cognito-idp"))
 (common-lisp:export 'cognito-idp-request))
(common-lisp:progn
 (common-lisp:define-condition cognito-idp-error
     (aws-sdk/error:aws-error)
     common-lisp:nil)
 (common-lisp:export 'cognito-idp-error))
(common-lisp:defvar *error-map*
  '(("AliasExistsException" . alias-exists-exception)
    ("CodeDeliveryFailureException" . code-delivery-failure-exception)
    ("CodeMismatchException" . code-mismatch-exception)
    ("ConcurrentModificationException" . concurrent-modification-exception)
    ("DuplicateProviderException" . duplicate-provider-exception)
    ("ExpiredCodeException" . expired-code-exception)
    ("GroupExistsException" . group-exists-exception)
    ("InternalErrorException" . internal-error-exception)
    ("InvalidEmailRoleAccessPolicyException"
     . invalid-email-role-access-policy-exception)
    ("InvalidLambdaResponseException" . invalid-lambda-response-exception)
    ("InvalidOAuthFlowException" . invalid-oauth-flow-exception)
    ("InvalidParameterException" . invalid-parameter-exception)
    ("InvalidPasswordException" . invalid-password-exception)
    ("InvalidSmsRoleAccessPolicyException"
     . invalid-sms-role-access-policy-exception)
    ("InvalidSmsRoleTrustRelationshipException"
     . invalid-sms-role-trust-relationship-exception)
    ("InvalidUserPoolConfigurationException"
     . invalid-user-pool-configuration-exception)
    ("LimitExceededException" . limit-exceeded-exception)
    ("MFAMethodNotFoundException" . mfamethod-not-found-exception)
    ("NotAuthorizedException" . not-authorized-exception)
    ("PasswordResetRequiredException" . password-reset-required-exception)
    ("PreconditionNotMetException" . precondition-not-met-exception)
    ("ResourceNotFoundException" . resource-not-found-exception)
    ("ScopeDoesNotExistException" . scope-does-not-exist-exception)
    ("TooManyFailedAttemptsException" . too-many-failed-attempts-exception)
    ("TooManyRequestsException" . too-many-requests-exception)
    ("UnexpectedLambdaException" . unexpected-lambda-exception)
    ("UnsupportedIdentityProviderException"
     . unsupported-identity-provider-exception)
    ("UnsupportedUserStateException" . unsupported-user-state-exception)
    ("UserImportInProgressException" . user-import-in-progress-exception)
    ("UserLambdaValidationException" . user-lambda-validation-exception)
    ("UserNotConfirmedException" . user-not-confirmed-exception)
    ("UserNotFoundException" . user-not-found-exception)
    ("UserPoolTaggingException" . user-pool-tagging-exception)
    ("UsernameExistsException" . username-exists-exception)))
(common-lisp:deftype awsaccount-id-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (add-custom-attributes-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-add-custom-attributes-request-"))
   (user-pool-id (common-lisp:error ":user-pool-id is required") :type
    (common-lisp:or user-pool-id-type common-lisp:null))
   (custom-attributes (common-lisp:error ":custom-attributes is required")
    :type (common-lisp:or custom-attributes-list-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'add-custom-attributes-request
                    'make-add-custom-attributes-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          add-custom-attributes-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          add-custom-attributes-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'user-pool-id))
      (common-lisp:list
       (common-lisp:cons "UserPoolId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'custom-attributes))
      (common-lisp:list
       (common-lisp:cons "CustomAttributes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          add-custom-attributes-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (add-custom-attributes-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-add-custom-attributes-response-")))
 (common-lisp:export
  (common-lisp:list 'add-custom-attributes-response
                    'make-add-custom-attributes-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          add-custom-attributes-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          add-custom-attributes-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          add-custom-attributes-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (admin-add-user-to-group-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-admin-add-user-to-group-request-"))
   (user-pool-id (common-lisp:error ":user-pool-id is required") :type
    (common-lisp:or user-pool-id-type common-lisp:null))
   (username (common-lisp:error ":username is required") :type
    (common-lisp:or username-type common-lisp:null))
   (group-name (common-lisp:error ":group-name is required") :type
    (common-lisp:or group-name-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'admin-add-user-to-group-request
                    'make-admin-add-user-to-group-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          admin-add-user-to-group-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          admin-add-user-to-group-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'user-pool-id))
      (common-lisp:list
       (common-lisp:cons "UserPoolId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'username))
      (common-lisp:list
       (common-lisp:cons "Username"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'group-name))
      (common-lisp:list
       (common-lisp:cons "GroupName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          admin-add-user-to-group-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (admin-confirm-sign-up-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-admin-confirm-sign-up-request-"))
   (user-pool-id (common-lisp:error ":user-pool-id is required") :type
    (common-lisp:or user-pool-id-type common-lisp:null))
   (username (common-lisp:error ":username is required") :type
    (common-lisp:or username-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'admin-confirm-sign-up-request
                    'make-admin-confirm-sign-up-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          admin-confirm-sign-up-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          admin-confirm-sign-up-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'user-pool-id))
      (common-lisp:list
       (common-lisp:cons "UserPoolId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'username))
      (common-lisp:list
       (common-lisp:cons "Username"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          admin-confirm-sign-up-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (admin-confirm-sign-up-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-admin-confirm-sign-up-response-")))
 (common-lisp:export
  (common-lisp:list 'admin-confirm-sign-up-response
                    'make-admin-confirm-sign-up-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          admin-confirm-sign-up-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          admin-confirm-sign-up-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          admin-confirm-sign-up-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (admin-create-user-config-type (:copier common-lisp:nil)
      (:conc-name "struct-shape-admin-create-user-config-type-"))
   (allow-admin-create-user-only common-lisp:nil :type
    (common-lisp:or boolean-type common-lisp:null))
   (unused-account-validity-days common-lisp:nil :type
    (common-lisp:or admin-create-user-unused-account-validity-days-type
                    common-lisp:null))
   (invite-message-template common-lisp:nil :type
    (common-lisp:or message-template-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'admin-create-user-config-type
                    'make-admin-create-user-config-type))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          admin-create-user-config-type))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          admin-create-user-config-type))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'allow-admin-create-user-only))
      (common-lisp:list
       (common-lisp:cons "AllowAdminCreateUserOnly"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'unused-account-validity-days))
      (common-lisp:list
       (common-lisp:cons "UnusedAccountValidityDays"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'invite-message-template))
      (common-lisp:list
       (common-lisp:cons "InviteMessageTemplate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          admin-create-user-config-type))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (admin-create-user-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-admin-create-user-request-"))
   (user-pool-id (common-lisp:error ":user-pool-id is required") :type
    (common-lisp:or user-pool-id-type common-lisp:null))
   (username (common-lisp:error ":username is required") :type
    (common-lisp:or username-type common-lisp:null))
   (user-attributes common-lisp:nil :type
    (common-lisp:or attribute-list-type common-lisp:null))
   (validation-data common-lisp:nil :type
    (common-lisp:or attribute-list-type common-lisp:null))
   (temporary-password common-lisp:nil :type
    (common-lisp:or password-type common-lisp:null))
   (force-alias-creation common-lisp:nil :type
    (common-lisp:or force-alias-creation common-lisp:null))
   (message-action common-lisp:nil :type
    (common-lisp:or message-action-type common-lisp:null))
   (desired-delivery-mediums common-lisp:nil :type
    (common-lisp:or delivery-medium-list-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'admin-create-user-request
                    'make-admin-create-user-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          admin-create-user-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          admin-create-user-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'user-pool-id))
      (common-lisp:list
       (common-lisp:cons "UserPoolId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'username))
      (common-lisp:list
       (common-lisp:cons "Username"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'user-attributes))
      (common-lisp:list
       (common-lisp:cons "UserAttributes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'validation-data))
      (common-lisp:list
       (common-lisp:cons "ValidationData"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'temporary-password))
      (common-lisp:list
       (common-lisp:cons "TemporaryPassword"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'force-alias-creation))
      (common-lisp:list
       (common-lisp:cons "ForceAliasCreation"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'message-action))
      (common-lisp:list
       (common-lisp:cons "MessageAction"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'desired-delivery-mediums))
      (common-lisp:list
       (common-lisp:cons "DesiredDeliveryMediums"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          admin-create-user-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (admin-create-user-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-admin-create-user-response-"))
   (user common-lisp:nil :type (common-lisp:or user-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'admin-create-user-response
                    'make-admin-create-user-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          admin-create-user-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          admin-create-user-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'user))
      (common-lisp:list
       (common-lisp:cons "User"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          admin-create-user-response))
   common-lisp:nil))
(common-lisp:deftype admin-create-user-unused-account-validity-days-type ()
  'common-lisp:integer)
(common-lisp:progn
 (common-lisp:defstruct
     (admin-delete-user-attributes-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-admin-delete-user-attributes-request-"))
   (user-pool-id (common-lisp:error ":user-pool-id is required") :type
    (common-lisp:or user-pool-id-type common-lisp:null))
   (username (common-lisp:error ":username is required") :type
    (common-lisp:or username-type common-lisp:null))
   (user-attribute-names
    (common-lisp:error ":user-attribute-names is required") :type
    (common-lisp:or attribute-name-list-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'admin-delete-user-attributes-request
                    'make-admin-delete-user-attributes-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          admin-delete-user-attributes-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          admin-delete-user-attributes-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'user-pool-id))
      (common-lisp:list
       (common-lisp:cons "UserPoolId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'username))
      (common-lisp:list
       (common-lisp:cons "Username"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'user-attribute-names))
      (common-lisp:list
       (common-lisp:cons "UserAttributeNames"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          admin-delete-user-attributes-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (admin-delete-user-attributes-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-admin-delete-user-attributes-response-")))
 (common-lisp:export
  (common-lisp:list 'admin-delete-user-attributes-response
                    'make-admin-delete-user-attributes-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          admin-delete-user-attributes-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          admin-delete-user-attributes-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          admin-delete-user-attributes-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (admin-delete-user-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-admin-delete-user-request-"))
   (user-pool-id (common-lisp:error ":user-pool-id is required") :type
    (common-lisp:or user-pool-id-type common-lisp:null))
   (username (common-lisp:error ":username is required") :type
    (common-lisp:or username-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'admin-delete-user-request
                    'make-admin-delete-user-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          admin-delete-user-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          admin-delete-user-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'user-pool-id))
      (common-lisp:list
       (common-lisp:cons "UserPoolId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'username))
      (common-lisp:list
       (common-lisp:cons "Username"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          admin-delete-user-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (admin-disable-provider-for-user-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-admin-disable-provider-for-user-request-"))
   (user-pool-id (common-lisp:error ":user-pool-id is required") :type
    (common-lisp:or string-type common-lisp:null))
   (user (common-lisp:error ":user is required") :type
    (common-lisp:or provider-user-identifier-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'admin-disable-provider-for-user-request
                    'make-admin-disable-provider-for-user-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          admin-disable-provider-for-user-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          admin-disable-provider-for-user-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'user-pool-id))
      (common-lisp:list
       (common-lisp:cons "UserPoolId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'user))
      (common-lisp:list
       (common-lisp:cons "User"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          admin-disable-provider-for-user-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (admin-disable-provider-for-user-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-admin-disable-provider-for-user-response-")))
 (common-lisp:export
  (common-lisp:list 'admin-disable-provider-for-user-response
                    'make-admin-disable-provider-for-user-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          admin-disable-provider-for-user-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          admin-disable-provider-for-user-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          admin-disable-provider-for-user-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (admin-disable-user-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-admin-disable-user-request-"))
   (user-pool-id (common-lisp:error ":user-pool-id is required") :type
    (common-lisp:or user-pool-id-type common-lisp:null))
   (username (common-lisp:error ":username is required") :type
    (common-lisp:or username-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'admin-disable-user-request
                    'make-admin-disable-user-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          admin-disable-user-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          admin-disable-user-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'user-pool-id))
      (common-lisp:list
       (common-lisp:cons "UserPoolId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'username))
      (common-lisp:list
       (common-lisp:cons "Username"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          admin-disable-user-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (admin-disable-user-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-admin-disable-user-response-")))
 (common-lisp:export
  (common-lisp:list 'admin-disable-user-response
                    'make-admin-disable-user-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          admin-disable-user-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          admin-disable-user-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          admin-disable-user-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (admin-enable-user-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-admin-enable-user-request-"))
   (user-pool-id (common-lisp:error ":user-pool-id is required") :type
    (common-lisp:or user-pool-id-type common-lisp:null))
   (username (common-lisp:error ":username is required") :type
    (common-lisp:or username-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'admin-enable-user-request
                    'make-admin-enable-user-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          admin-enable-user-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          admin-enable-user-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'user-pool-id))
      (common-lisp:list
       (common-lisp:cons "UserPoolId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'username))
      (common-lisp:list
       (common-lisp:cons "Username"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          admin-enable-user-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (admin-enable-user-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-admin-enable-user-response-")))
 (common-lisp:export
  (common-lisp:list 'admin-enable-user-response
                    'make-admin-enable-user-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          admin-enable-user-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          admin-enable-user-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          admin-enable-user-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (admin-forget-device-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-admin-forget-device-request-"))
   (user-pool-id (common-lisp:error ":user-pool-id is required") :type
    (common-lisp:or user-pool-id-type common-lisp:null))
   (username (common-lisp:error ":username is required") :type
    (common-lisp:or username-type common-lisp:null))
   (device-key (common-lisp:error ":device-key is required") :type
    (common-lisp:or device-key-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'admin-forget-device-request
                    'make-admin-forget-device-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          admin-forget-device-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          admin-forget-device-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'user-pool-id))
      (common-lisp:list
       (common-lisp:cons "UserPoolId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'username))
      (common-lisp:list
       (common-lisp:cons "Username"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'device-key))
      (common-lisp:list
       (common-lisp:cons "DeviceKey"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          admin-forget-device-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (admin-get-device-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-admin-get-device-request-"))
   (device-key (common-lisp:error ":device-key is required") :type
    (common-lisp:or device-key-type common-lisp:null))
   (user-pool-id (common-lisp:error ":user-pool-id is required") :type
    (common-lisp:or user-pool-id-type common-lisp:null))
   (username (common-lisp:error ":username is required") :type
    (common-lisp:or username-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'admin-get-device-request 'make-admin-get-device-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          admin-get-device-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          admin-get-device-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'device-key))
      (common-lisp:list
       (common-lisp:cons "DeviceKey"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'user-pool-id))
      (common-lisp:list
       (common-lisp:cons "UserPoolId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'username))
      (common-lisp:list
       (common-lisp:cons "Username"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          admin-get-device-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (admin-get-device-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-admin-get-device-response-"))
   (device (common-lisp:error ":device is required") :type
    (common-lisp:or device-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'admin-get-device-response
                    'make-admin-get-device-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          admin-get-device-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          admin-get-device-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'device))
      (common-lisp:list
       (common-lisp:cons "Device"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          admin-get-device-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (admin-get-user-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-admin-get-user-request-"))
   (user-pool-id (common-lisp:error ":user-pool-id is required") :type
    (common-lisp:or user-pool-id-type common-lisp:null))
   (username (common-lisp:error ":username is required") :type
    (common-lisp:or username-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'admin-get-user-request 'make-admin-get-user-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          admin-get-user-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          admin-get-user-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'user-pool-id))
      (common-lisp:list
       (common-lisp:cons "UserPoolId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'username))
      (common-lisp:list
       (common-lisp:cons "Username"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          admin-get-user-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (admin-get-user-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-admin-get-user-response-"))
   (username (common-lisp:error ":username is required") :type
    (common-lisp:or username-type common-lisp:null))
   (user-attributes common-lisp:nil :type
    (common-lisp:or attribute-list-type common-lisp:null))
   (user-create-date common-lisp:nil :type
    (common-lisp:or date-type common-lisp:null))
   (user-last-modified-date common-lisp:nil :type
    (common-lisp:or date-type common-lisp:null))
   (enabled common-lisp:nil :type
    (common-lisp:or boolean-type common-lisp:null))
   (user-status common-lisp:nil :type
    (common-lisp:or user-status-type common-lisp:null))
   (mfaoptions common-lisp:nil :type
    (common-lisp:or mfaoption-list-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'admin-get-user-response 'make-admin-get-user-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          admin-get-user-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          admin-get-user-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'username))
      (common-lisp:list
       (common-lisp:cons "Username"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'user-attributes))
      (common-lisp:list
       (common-lisp:cons "UserAttributes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'user-create-date))
      (common-lisp:list
       (common-lisp:cons "UserCreateDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'user-last-modified-date))
      (common-lisp:list
       (common-lisp:cons "UserLastModifiedDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'enabled))
      (common-lisp:list
       (common-lisp:cons "Enabled"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'user-status))
      (common-lisp:list
       (common-lisp:cons "UserStatus"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'mfaoptions))
      (common-lisp:list
       (common-lisp:cons "MFAOptions"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          admin-get-user-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (admin-initiate-auth-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-admin-initiate-auth-request-"))
   (user-pool-id (common-lisp:error ":user-pool-id is required") :type
    (common-lisp:or user-pool-id-type common-lisp:null))
   (client-id (common-lisp:error ":client-id is required") :type
    (common-lisp:or client-id-type common-lisp:null))
   (auth-flow (common-lisp:error ":auth-flow is required") :type
    (common-lisp:or auth-flow-type common-lisp:null))
   (auth-parameters common-lisp:nil :type
    (common-lisp:or auth-parameters-type common-lisp:null))
   (client-metadata common-lisp:nil :type
    (common-lisp:or client-metadata-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'admin-initiate-auth-request
                    'make-admin-initiate-auth-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          admin-initiate-auth-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          admin-initiate-auth-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'user-pool-id))
      (common-lisp:list
       (common-lisp:cons "UserPoolId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'client-id))
      (common-lisp:list
       (common-lisp:cons "ClientId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'auth-flow))
      (common-lisp:list
       (common-lisp:cons "AuthFlow"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'auth-parameters))
      (common-lisp:list
       (common-lisp:cons "AuthParameters"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'client-metadata))
      (common-lisp:list
       (common-lisp:cons "ClientMetadata"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          admin-initiate-auth-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (admin-initiate-auth-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-admin-initiate-auth-response-"))
   (challenge-name common-lisp:nil :type
    (common-lisp:or challenge-name-type common-lisp:null))
   (session common-lisp:nil :type
    (common-lisp:or session-type common-lisp:null))
   (challenge-parameters common-lisp:nil :type
    (common-lisp:or challenge-parameters-type common-lisp:null))
   (authentication-result common-lisp:nil :type
    (common-lisp:or authentication-result-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'admin-initiate-auth-response
                    'make-admin-initiate-auth-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          admin-initiate-auth-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          admin-initiate-auth-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'challenge-name))
      (common-lisp:list
       (common-lisp:cons "ChallengeName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'session))
      (common-lisp:list
       (common-lisp:cons "Session"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'challenge-parameters))
      (common-lisp:list
       (common-lisp:cons "ChallengeParameters"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'authentication-result))
      (common-lisp:list
       (common-lisp:cons "AuthenticationResult"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          admin-initiate-auth-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (admin-link-provider-for-user-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-admin-link-provider-for-user-request-"))
   (user-pool-id (common-lisp:error ":user-pool-id is required") :type
    (common-lisp:or string-type common-lisp:null))
   (destination-user (common-lisp:error ":destination-user is required") :type
    (common-lisp:or provider-user-identifier-type common-lisp:null))
   (source-user (common-lisp:error ":source-user is required") :type
    (common-lisp:or provider-user-identifier-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'admin-link-provider-for-user-request
                    'make-admin-link-provider-for-user-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          admin-link-provider-for-user-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          admin-link-provider-for-user-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'user-pool-id))
      (common-lisp:list
       (common-lisp:cons "UserPoolId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'destination-user))
      (common-lisp:list
       (common-lisp:cons "DestinationUser"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'source-user))
      (common-lisp:list
       (common-lisp:cons "SourceUser"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          admin-link-provider-for-user-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (admin-link-provider-for-user-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-admin-link-provider-for-user-response-")))
 (common-lisp:export
  (common-lisp:list 'admin-link-provider-for-user-response
                    'make-admin-link-provider-for-user-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          admin-link-provider-for-user-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          admin-link-provider-for-user-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          admin-link-provider-for-user-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (admin-list-devices-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-admin-list-devices-request-"))
   (user-pool-id (common-lisp:error ":user-pool-id is required") :type
    (common-lisp:or user-pool-id-type common-lisp:null))
   (username (common-lisp:error ":username is required") :type
    (common-lisp:or username-type common-lisp:null))
   (limit common-lisp:nil :type
    (common-lisp:or query-limit-type common-lisp:null))
   (pagination-token common-lisp:nil :type
    (common-lisp:or search-pagination-token-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'admin-list-devices-request
                    'make-admin-list-devices-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          admin-list-devices-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          admin-list-devices-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'user-pool-id))
      (common-lisp:list
       (common-lisp:cons "UserPoolId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'username))
      (common-lisp:list
       (common-lisp:cons "Username"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'limit))
      (common-lisp:list
       (common-lisp:cons "Limit"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'pagination-token))
      (common-lisp:list
       (common-lisp:cons "PaginationToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          admin-list-devices-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (admin-list-devices-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-admin-list-devices-response-"))
   (devices common-lisp:nil :type
    (common-lisp:or device-list-type common-lisp:null))
   (pagination-token common-lisp:nil :type
    (common-lisp:or search-pagination-token-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'admin-list-devices-response
                    'make-admin-list-devices-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          admin-list-devices-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          admin-list-devices-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'devices))
      (common-lisp:list
       (common-lisp:cons "Devices"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'pagination-token))
      (common-lisp:list
       (common-lisp:cons "PaginationToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          admin-list-devices-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (admin-list-groups-for-user-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-admin-list-groups-for-user-request-"))
   (username (common-lisp:error ":username is required") :type
    (common-lisp:or username-type common-lisp:null))
   (user-pool-id (common-lisp:error ":user-pool-id is required") :type
    (common-lisp:or user-pool-id-type common-lisp:null))
   (limit common-lisp:nil :type
    (common-lisp:or query-limit-type common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or pagination-key common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'admin-list-groups-for-user-request
                    'make-admin-list-groups-for-user-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          admin-list-groups-for-user-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          admin-list-groups-for-user-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'username))
      (common-lisp:list
       (common-lisp:cons "Username"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'user-pool-id))
      (common-lisp:list
       (common-lisp:cons "UserPoolId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'limit))
      (common-lisp:list
       (common-lisp:cons "Limit"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          admin-list-groups-for-user-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (admin-list-groups-for-user-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-admin-list-groups-for-user-response-"))
   (groups common-lisp:nil :type
    (common-lisp:or group-list-type common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or pagination-key common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'admin-list-groups-for-user-response
                    'make-admin-list-groups-for-user-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          admin-list-groups-for-user-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          admin-list-groups-for-user-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'groups))
      (common-lisp:list
       (common-lisp:cons "Groups"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          admin-list-groups-for-user-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (admin-remove-user-from-group-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-admin-remove-user-from-group-request-"))
   (user-pool-id (common-lisp:error ":user-pool-id is required") :type
    (common-lisp:or user-pool-id-type common-lisp:null))
   (username (common-lisp:error ":username is required") :type
    (common-lisp:or username-type common-lisp:null))
   (group-name (common-lisp:error ":group-name is required") :type
    (common-lisp:or group-name-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'admin-remove-user-from-group-request
                    'make-admin-remove-user-from-group-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          admin-remove-user-from-group-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          admin-remove-user-from-group-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'user-pool-id))
      (common-lisp:list
       (common-lisp:cons "UserPoolId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'username))
      (common-lisp:list
       (common-lisp:cons "Username"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'group-name))
      (common-lisp:list
       (common-lisp:cons "GroupName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          admin-remove-user-from-group-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (admin-reset-user-password-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-admin-reset-user-password-request-"))
   (user-pool-id (common-lisp:error ":user-pool-id is required") :type
    (common-lisp:or user-pool-id-type common-lisp:null))
   (username (common-lisp:error ":username is required") :type
    (common-lisp:or username-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'admin-reset-user-password-request
                    'make-admin-reset-user-password-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          admin-reset-user-password-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          admin-reset-user-password-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'user-pool-id))
      (common-lisp:list
       (common-lisp:cons "UserPoolId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'username))
      (common-lisp:list
       (common-lisp:cons "Username"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          admin-reset-user-password-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (admin-reset-user-password-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-admin-reset-user-password-response-")))
 (common-lisp:export
  (common-lisp:list 'admin-reset-user-password-response
                    'make-admin-reset-user-password-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          admin-reset-user-password-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          admin-reset-user-password-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          admin-reset-user-password-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (admin-respond-to-auth-challenge-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-admin-respond-to-auth-challenge-request-"))
   (user-pool-id (common-lisp:error ":user-pool-id is required") :type
    (common-lisp:or user-pool-id-type common-lisp:null))
   (client-id (common-lisp:error ":client-id is required") :type
    (common-lisp:or client-id-type common-lisp:null))
   (challenge-name (common-lisp:error ":challenge-name is required") :type
    (common-lisp:or challenge-name-type common-lisp:null))
   (challenge-responses common-lisp:nil :type
    (common-lisp:or challenge-responses-type common-lisp:null))
   (session common-lisp:nil :type
    (common-lisp:or session-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'admin-respond-to-auth-challenge-request
                    'make-admin-respond-to-auth-challenge-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          admin-respond-to-auth-challenge-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          admin-respond-to-auth-challenge-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'user-pool-id))
      (common-lisp:list
       (common-lisp:cons "UserPoolId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'client-id))
      (common-lisp:list
       (common-lisp:cons "ClientId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'challenge-name))
      (common-lisp:list
       (common-lisp:cons "ChallengeName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'challenge-responses))
      (common-lisp:list
       (common-lisp:cons "ChallengeResponses"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'session))
      (common-lisp:list
       (common-lisp:cons "Session"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          admin-respond-to-auth-challenge-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (admin-respond-to-auth-challenge-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-admin-respond-to-auth-challenge-response-"))
   (challenge-name common-lisp:nil :type
    (common-lisp:or challenge-name-type common-lisp:null))
   (session common-lisp:nil :type
    (common-lisp:or session-type common-lisp:null))
   (challenge-parameters common-lisp:nil :type
    (common-lisp:or challenge-parameters-type common-lisp:null))
   (authentication-result common-lisp:nil :type
    (common-lisp:or authentication-result-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'admin-respond-to-auth-challenge-response
                    'make-admin-respond-to-auth-challenge-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          admin-respond-to-auth-challenge-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          admin-respond-to-auth-challenge-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'challenge-name))
      (common-lisp:list
       (common-lisp:cons "ChallengeName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'session))
      (common-lisp:list
       (common-lisp:cons "Session"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'challenge-parameters))
      (common-lisp:list
       (common-lisp:cons "ChallengeParameters"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'authentication-result))
      (common-lisp:list
       (common-lisp:cons "AuthenticationResult"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          admin-respond-to-auth-challenge-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (admin-set-user-settings-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-admin-set-user-settings-request-"))
   (user-pool-id (common-lisp:error ":user-pool-id is required") :type
    (common-lisp:or user-pool-id-type common-lisp:null))
   (username (common-lisp:error ":username is required") :type
    (common-lisp:or username-type common-lisp:null))
   (mfaoptions (common-lisp:error ":mfaoptions is required") :type
    (common-lisp:or mfaoption-list-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'admin-set-user-settings-request
                    'make-admin-set-user-settings-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          admin-set-user-settings-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          admin-set-user-settings-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'user-pool-id))
      (common-lisp:list
       (common-lisp:cons "UserPoolId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'username))
      (common-lisp:list
       (common-lisp:cons "Username"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'mfaoptions))
      (common-lisp:list
       (common-lisp:cons "MFAOptions"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          admin-set-user-settings-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (admin-set-user-settings-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-admin-set-user-settings-response-")))
 (common-lisp:export
  (common-lisp:list 'admin-set-user-settings-response
                    'make-admin-set-user-settings-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          admin-set-user-settings-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          admin-set-user-settings-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          admin-set-user-settings-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (admin-update-device-status-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-admin-update-device-status-request-"))
   (user-pool-id (common-lisp:error ":user-pool-id is required") :type
    (common-lisp:or user-pool-id-type common-lisp:null))
   (username (common-lisp:error ":username is required") :type
    (common-lisp:or username-type common-lisp:null))
   (device-key (common-lisp:error ":device-key is required") :type
    (common-lisp:or device-key-type common-lisp:null))
   (device-remembered-status common-lisp:nil :type
    (common-lisp:or device-remembered-status-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'admin-update-device-status-request
                    'make-admin-update-device-status-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          admin-update-device-status-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          admin-update-device-status-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'user-pool-id))
      (common-lisp:list
       (common-lisp:cons "UserPoolId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'username))
      (common-lisp:list
       (common-lisp:cons "Username"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'device-key))
      (common-lisp:list
       (common-lisp:cons "DeviceKey"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'device-remembered-status))
      (common-lisp:list
       (common-lisp:cons "DeviceRememberedStatus"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          admin-update-device-status-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (admin-update-device-status-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-admin-update-device-status-response-")))
 (common-lisp:export
  (common-lisp:list 'admin-update-device-status-response
                    'make-admin-update-device-status-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          admin-update-device-status-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          admin-update-device-status-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          admin-update-device-status-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (admin-update-user-attributes-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-admin-update-user-attributes-request-"))
   (user-pool-id (common-lisp:error ":user-pool-id is required") :type
    (common-lisp:or user-pool-id-type common-lisp:null))
   (username (common-lisp:error ":username is required") :type
    (common-lisp:or username-type common-lisp:null))
   (user-attributes (common-lisp:error ":user-attributes is required") :type
    (common-lisp:or attribute-list-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'admin-update-user-attributes-request
                    'make-admin-update-user-attributes-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          admin-update-user-attributes-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          admin-update-user-attributes-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'user-pool-id))
      (common-lisp:list
       (common-lisp:cons "UserPoolId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'username))
      (common-lisp:list
       (common-lisp:cons "Username"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'user-attributes))
      (common-lisp:list
       (common-lisp:cons "UserAttributes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          admin-update-user-attributes-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (admin-update-user-attributes-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-admin-update-user-attributes-response-")))
 (common-lisp:export
  (common-lisp:list 'admin-update-user-attributes-response
                    'make-admin-update-user-attributes-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          admin-update-user-attributes-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          admin-update-user-attributes-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          admin-update-user-attributes-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (admin-user-global-sign-out-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-admin-user-global-sign-out-request-"))
   (user-pool-id (common-lisp:error ":user-pool-id is required") :type
    (common-lisp:or user-pool-id-type common-lisp:null))
   (username (common-lisp:error ":username is required") :type
    (common-lisp:or username-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'admin-user-global-sign-out-request
                    'make-admin-user-global-sign-out-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          admin-user-global-sign-out-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          admin-user-global-sign-out-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'user-pool-id))
      (common-lisp:list
       (common-lisp:cons "UserPoolId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'username))
      (common-lisp:list
       (common-lisp:cons "Username"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          admin-user-global-sign-out-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (admin-user-global-sign-out-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-admin-user-global-sign-out-response-")))
 (common-lisp:export
  (common-lisp:list 'admin-user-global-sign-out-response
                    'make-admin-user-global-sign-out-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          admin-user-global-sign-out-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          admin-user-global-sign-out-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          admin-user-global-sign-out-response))
   common-lisp:nil))
(common-lisp:deftype alias-attribute-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype alias-attributes-list-type ()
   '(trivial-types:proper-list alias-attribute-type))
 (common-lisp:defun |make-alias-attributes-list-type|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list alias-attribute-type))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:define-condition alias-exists-exception
     (cognito-idp-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       alias-exists-exception-message)))
 (common-lisp:export
  (common-lisp:list 'alias-exists-exception 'alias-exists-exception-message)))
(common-lisp:deftype arn-type () 'common-lisp:string)
(common-lisp:deftype attribute-data-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype attribute-list-type ()
   '(trivial-types:proper-list attribute-type))
 (common-lisp:defun |make-attribute-list-type|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list attribute-type))
   aws-sdk/generator/shape::members))
(common-lisp:deftype attribute-mapping-key-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype attribute-mapping-type () 'common-lisp:hash-table)
 (common-lisp:defun |make-attribute-mapping-type|
                    (aws-sdk/generator/shape::key-values)
   (common-lisp:etypecase aws-sdk/generator/shape::key-values
     (common-lisp:hash-table aws-sdk/generator/shape::key-values)
     (common-lisp:list
      (alexandria:alist-hash-table aws-sdk/generator/shape::key-values)))))
(common-lisp:progn
 (common-lisp:deftype attribute-name-list-type ()
   '(trivial-types:proper-list attribute-name-type))
 (common-lisp:defun |make-attribute-name-list-type|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list attribute-name-type))
   aws-sdk/generator/shape::members))
(common-lisp:deftype attribute-name-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (attribute-type (:copier common-lisp:nil)
      (:conc-name "struct-shape-attribute-type-"))
   (name (common-lisp:error ":name is required") :type
    (common-lisp:or attribute-name-type common-lisp:null))
   (value common-lisp:nil :type
    (common-lisp:or attribute-value-type common-lisp:null)))
 (common-lisp:export (common-lisp:list 'attribute-type 'make-attribute-type))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input attribute-type))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input attribute-type))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'value))
      (common-lisp:list
       (common-lisp:cons "Value"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input attribute-type))
   common-lisp:nil))
(common-lisp:deftype attribute-value-type () 'common-lisp:string)
(common-lisp:deftype auth-flow-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype auth-parameters-type () 'common-lisp:hash-table)
 (common-lisp:defun |make-auth-parameters-type|
                    (aws-sdk/generator/shape::key-values)
   (common-lisp:etypecase aws-sdk/generator/shape::key-values
     (common-lisp:hash-table aws-sdk/generator/shape::key-values)
     (common-lisp:list
      (alexandria:alist-hash-table aws-sdk/generator/shape::key-values)))))
(common-lisp:progn
 (common-lisp:defstruct
     (authentication-result-type (:copier common-lisp:nil)
      (:conc-name "struct-shape-authentication-result-type-"))
   (access-token common-lisp:nil :type
    (common-lisp:or token-model-type common-lisp:null))
   (expires-in common-lisp:nil :type
    (common-lisp:or integer-type common-lisp:null))
   (token-type common-lisp:nil :type
    (common-lisp:or string-type common-lisp:null))
   (refresh-token common-lisp:nil :type
    (common-lisp:or token-model-type common-lisp:null))
   (id-token common-lisp:nil :type
    (common-lisp:or token-model-type common-lisp:null))
   (new-device-metadata common-lisp:nil :type
    (common-lisp:or new-device-metadata-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'authentication-result-type
                    'make-authentication-result-type))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          authentication-result-type))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          authentication-result-type))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'access-token))
      (common-lisp:list
       (common-lisp:cons "AccessToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'expires-in))
      (common-lisp:list
       (common-lisp:cons "ExpiresIn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'token-type))
      (common-lisp:list
       (common-lisp:cons "TokenType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'refresh-token))
      (common-lisp:list
       (common-lisp:cons "RefreshToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id-token))
      (common-lisp:list
       (common-lisp:cons "IdToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'new-device-metadata))
      (common-lisp:list
       (common-lisp:cons "NewDeviceMetadata"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          authentication-result-type))
   common-lisp:nil))
(common-lisp:deftype boolean-type () 'common-lisp:boolean)
(common-lisp:deftype csstype () 'common-lisp:string)
(common-lisp:deftype cssversion-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype callback-urls-list-type ()
   '(trivial-types:proper-list redirect-url-type))
 (common-lisp:defun |make-callback-urls-list-type|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list redirect-url-type))
   aws-sdk/generator/shape::members))
(common-lisp:deftype challenge-name-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype challenge-parameters-type () 'common-lisp:hash-table)
 (common-lisp:defun |make-challenge-parameters-type|
                    (aws-sdk/generator/shape::key-values)
   (common-lisp:etypecase aws-sdk/generator/shape::key-values
     (common-lisp:hash-table aws-sdk/generator/shape::key-values)
     (common-lisp:list
      (alexandria:alist-hash-table aws-sdk/generator/shape::key-values)))))
(common-lisp:progn
 (common-lisp:deftype challenge-responses-type () 'common-lisp:hash-table)
 (common-lisp:defun |make-challenge-responses-type|
                    (aws-sdk/generator/shape::key-values)
   (common-lisp:etypecase aws-sdk/generator/shape::key-values
     (common-lisp:hash-table aws-sdk/generator/shape::key-values)
     (common-lisp:list
      (alexandria:alist-hash-table aws-sdk/generator/shape::key-values)))))
(common-lisp:progn
 (common-lisp:defstruct
     (change-password-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-change-password-request-"))
   (previous-password (common-lisp:error ":previous-password is required")
    :type (common-lisp:or password-type common-lisp:null))
   (proposed-password (common-lisp:error ":proposed-password is required")
    :type (common-lisp:or password-type common-lisp:null))
   (access-token (common-lisp:error ":access-token is required") :type
    (common-lisp:or token-model-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'change-password-request 'make-change-password-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          change-password-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          change-password-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'previous-password))
      (common-lisp:list
       (common-lisp:cons "PreviousPassword"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'proposed-password))
      (common-lisp:list
       (common-lisp:cons "ProposedPassword"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'access-token))
      (common-lisp:list
       (common-lisp:cons "AccessToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          change-password-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (change-password-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-change-password-response-")))
 (common-lisp:export
  (common-lisp:list 'change-password-response 'make-change-password-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          change-password-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          change-password-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          change-password-response))
   common-lisp:nil))
(common-lisp:deftype client-id-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype client-metadata-type () 'common-lisp:hash-table)
 (common-lisp:defun |make-client-metadata-type|
                    (aws-sdk/generator/shape::key-values)
   (common-lisp:etypecase aws-sdk/generator/shape::key-values
     (common-lisp:hash-table aws-sdk/generator/shape::key-values)
     (common-lisp:list
      (alexandria:alist-hash-table aws-sdk/generator/shape::key-values)))))
(common-lisp:deftype client-name-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype client-permission-list-type ()
   '(trivial-types:proper-list client-permission-type))
 (common-lisp:defun |make-client-permission-list-type|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list client-permission-type))
   aws-sdk/generator/shape::members))
(common-lisp:deftype client-permission-type () 'common-lisp:string)
(common-lisp:deftype client-secret-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype code-delivery-details-list-type ()
   '(trivial-types:proper-list code-delivery-details-type))
 (common-lisp:defun |make-code-delivery-details-list-type|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            code-delivery-details-type))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (code-delivery-details-type (:copier common-lisp:nil)
      (:conc-name "struct-shape-code-delivery-details-type-"))
   (destination common-lisp:nil :type
    (common-lisp:or string-type common-lisp:null))
   (delivery-medium common-lisp:nil :type
    (common-lisp:or delivery-medium-type common-lisp:null))
   (attribute-name common-lisp:nil :type
    (common-lisp:or attribute-name-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'code-delivery-details-type
                    'make-code-delivery-details-type))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          code-delivery-details-type))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          code-delivery-details-type))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'destination))
      (common-lisp:list
       (common-lisp:cons "Destination"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'delivery-medium))
      (common-lisp:list
       (common-lisp:cons "DeliveryMedium"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'attribute-name))
      (common-lisp:list
       (common-lisp:cons "AttributeName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          code-delivery-details-type))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:define-condition code-delivery-failure-exception
     (cognito-idp-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       code-delivery-failure-exception-message)))
 (common-lisp:export
  (common-lisp:list 'code-delivery-failure-exception
                    'code-delivery-failure-exception-message)))
(common-lisp:progn
 (common-lisp:define-condition code-mismatch-exception
     (cognito-idp-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       code-mismatch-exception-message)))
 (common-lisp:export
  (common-lisp:list 'code-mismatch-exception 'code-mismatch-exception-message)))
(common-lisp:deftype completion-message-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:define-condition concurrent-modification-exception
     (cognito-idp-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       concurrent-modification-exception-message)))
 (common-lisp:export
  (common-lisp:list 'concurrent-modification-exception
                    'concurrent-modification-exception-message)))
(common-lisp:progn
 (common-lisp:defstruct
     (confirm-device-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-confirm-device-request-"))
   (access-token (common-lisp:error ":access-token is required") :type
    (common-lisp:or token-model-type common-lisp:null))
   (device-key (common-lisp:error ":device-key is required") :type
    (common-lisp:or device-key-type common-lisp:null))
   (device-secret-verifier-config common-lisp:nil :type
    (common-lisp:or device-secret-verifier-config-type common-lisp:null))
   (device-name common-lisp:nil :type
    (common-lisp:or device-name-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'confirm-device-request 'make-confirm-device-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          confirm-device-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          confirm-device-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'access-token))
      (common-lisp:list
       (common-lisp:cons "AccessToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'device-key))
      (common-lisp:list
       (common-lisp:cons "DeviceKey"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'device-secret-verifier-config))
      (common-lisp:list
       (common-lisp:cons "DeviceSecretVerifierConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'device-name))
      (common-lisp:list
       (common-lisp:cons "DeviceName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          confirm-device-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (confirm-device-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-confirm-device-response-"))
   (user-confirmation-necessary common-lisp:nil :type
    (common-lisp:or boolean-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'confirm-device-response 'make-confirm-device-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          confirm-device-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          confirm-device-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'user-confirmation-necessary))
      (common-lisp:list
       (common-lisp:cons "UserConfirmationNecessary"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          confirm-device-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (confirm-forgot-password-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-confirm-forgot-password-request-"))
   (client-id (common-lisp:error ":client-id is required") :type
    (common-lisp:or client-id-type common-lisp:null))
   (secret-hash common-lisp:nil :type
    (common-lisp:or secret-hash-type common-lisp:null))
   (username (common-lisp:error ":username is required") :type
    (common-lisp:or username-type common-lisp:null))
   (confirmation-code (common-lisp:error ":confirmation-code is required")
    :type (common-lisp:or confirmation-code-type common-lisp:null))
   (password (common-lisp:error ":password is required") :type
    (common-lisp:or password-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'confirm-forgot-password-request
                    'make-confirm-forgot-password-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          confirm-forgot-password-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          confirm-forgot-password-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'client-id))
      (common-lisp:list
       (common-lisp:cons "ClientId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'secret-hash))
      (common-lisp:list
       (common-lisp:cons "SecretHash"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'username))
      (common-lisp:list
       (common-lisp:cons "Username"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'confirmation-code))
      (common-lisp:list
       (common-lisp:cons "ConfirmationCode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'password))
      (common-lisp:list
       (common-lisp:cons "Password"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          confirm-forgot-password-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (confirm-forgot-password-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-confirm-forgot-password-response-")))
 (common-lisp:export
  (common-lisp:list 'confirm-forgot-password-response
                    'make-confirm-forgot-password-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          confirm-forgot-password-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          confirm-forgot-password-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          confirm-forgot-password-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (confirm-sign-up-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-confirm-sign-up-request-"))
   (client-id (common-lisp:error ":client-id is required") :type
    (common-lisp:or client-id-type common-lisp:null))
   (secret-hash common-lisp:nil :type
    (common-lisp:or secret-hash-type common-lisp:null))
   (username (common-lisp:error ":username is required") :type
    (common-lisp:or username-type common-lisp:null))
   (confirmation-code (common-lisp:error ":confirmation-code is required")
    :type (common-lisp:or confirmation-code-type common-lisp:null))
   (force-alias-creation common-lisp:nil :type
    (common-lisp:or force-alias-creation common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'confirm-sign-up-request 'make-confirm-sign-up-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          confirm-sign-up-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          confirm-sign-up-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'client-id))
      (common-lisp:list
       (common-lisp:cons "ClientId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'secret-hash))
      (common-lisp:list
       (common-lisp:cons "SecretHash"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'username))
      (common-lisp:list
       (common-lisp:cons "Username"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'confirmation-code))
      (common-lisp:list
       (common-lisp:cons "ConfirmationCode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'force-alias-creation))
      (common-lisp:list
       (common-lisp:cons "ForceAliasCreation"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          confirm-sign-up-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (confirm-sign-up-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-confirm-sign-up-response-")))
 (common-lisp:export
  (common-lisp:list 'confirm-sign-up-response 'make-confirm-sign-up-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          confirm-sign-up-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          confirm-sign-up-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          confirm-sign-up-response))
   common-lisp:nil))
(common-lisp:deftype confirmation-code-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (create-group-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-group-request-"))
   (group-name (common-lisp:error ":group-name is required") :type
    (common-lisp:or group-name-type common-lisp:null))
   (user-pool-id (common-lisp:error ":user-pool-id is required") :type
    (common-lisp:or user-pool-id-type common-lisp:null))
   (description common-lisp:nil :type
    (common-lisp:or description-type common-lisp:null))
   (role-arn common-lisp:nil :type (common-lisp:or arn-type common-lisp:null))
   (precedence common-lisp:nil :type
    (common-lisp:or precedence-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-group-request 'make-create-group-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input create-group-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input create-group-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'group-name))
      (common-lisp:list
       (common-lisp:cons "GroupName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'user-pool-id))
      (common-lisp:list
       (common-lisp:cons "UserPoolId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'role-arn))
      (common-lisp:list
       (common-lisp:cons "RoleArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'precedence))
      (common-lisp:list
       (common-lisp:cons "Precedence"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input create-group-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-group-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-group-response-"))
   (group common-lisp:nil :type (common-lisp:or group-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-group-response 'make-create-group-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-group-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-group-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'group))
      (common-lisp:list
       (common-lisp:cons "Group"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-group-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-identity-provider-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-identity-provider-request-"))
   (user-pool-id (common-lisp:error ":user-pool-id is required") :type
    (common-lisp:or user-pool-id-type common-lisp:null))
   (provider-name (common-lisp:error ":provider-name is required") :type
    (common-lisp:or provider-name-type-v1 common-lisp:null))
   (provider-type (common-lisp:error ":provider-type is required") :type
    (common-lisp:or identity-provider-type-type common-lisp:null))
   (provider-details (common-lisp:error ":provider-details is required") :type
    (common-lisp:or provider-details-type common-lisp:null))
   (attribute-mapping common-lisp:nil :type
    (common-lisp:or attribute-mapping-type common-lisp:null))
   (idp-identifiers common-lisp:nil :type
    (common-lisp:or idp-identifiers-list-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-identity-provider-request
                    'make-create-identity-provider-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-identity-provider-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-identity-provider-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'user-pool-id))
      (common-lisp:list
       (common-lisp:cons "UserPoolId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'provider-name))
      (common-lisp:list
       (common-lisp:cons "ProviderName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'provider-type))
      (common-lisp:list
       (common-lisp:cons "ProviderType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'provider-details))
      (common-lisp:list
       (common-lisp:cons "ProviderDetails"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'attribute-mapping))
      (common-lisp:list
       (common-lisp:cons "AttributeMapping"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'idp-identifiers))
      (common-lisp:list
       (common-lisp:cons "IdpIdentifiers"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-identity-provider-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-identity-provider-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-identity-provider-response-"))
   (identity-provider (common-lisp:error ":identity-provider is required")
    :type (common-lisp:or identity-provider-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-identity-provider-response
                    'make-create-identity-provider-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-identity-provider-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-identity-provider-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'identity-provider))
      (common-lisp:list
       (common-lisp:cons "IdentityProvider"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-identity-provider-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-resource-server-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-resource-server-request-"))
   (user-pool-id (common-lisp:error ":user-pool-id is required") :type
    (common-lisp:or user-pool-id-type common-lisp:null))
   (identifier (common-lisp:error ":identifier is required") :type
    (common-lisp:or resource-server-identifier-type common-lisp:null))
   (name (common-lisp:error ":name is required") :type
    (common-lisp:or resource-server-name-type common-lisp:null))
   (scopes common-lisp:nil :type
    (common-lisp:or resource-server-scope-list-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-resource-server-request
                    'make-create-resource-server-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-resource-server-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-resource-server-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'user-pool-id))
      (common-lisp:list
       (common-lisp:cons "UserPoolId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'identifier))
      (common-lisp:list
       (common-lisp:cons "Identifier"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'scopes))
      (common-lisp:list
       (common-lisp:cons "Scopes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-resource-server-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-resource-server-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-resource-server-response-"))
   (resource-server (common-lisp:error ":resource-server is required") :type
    (common-lisp:or resource-server-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-resource-server-response
                    'make-create-resource-server-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-resource-server-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-resource-server-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-server))
      (common-lisp:list
       (common-lisp:cons "ResourceServer"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-resource-server-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-user-import-job-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-user-import-job-request-"))
   (job-name (common-lisp:error ":job-name is required") :type
    (common-lisp:or user-import-job-name-type common-lisp:null))
   (user-pool-id (common-lisp:error ":user-pool-id is required") :type
    (common-lisp:or user-pool-id-type common-lisp:null))
   (cloud-watch-logs-role-arn
    (common-lisp:error ":cloud-watch-logs-role-arn is required") :type
    (common-lisp:or arn-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-user-import-job-request
                    'make-create-user-import-job-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-user-import-job-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-user-import-job-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-name))
      (common-lisp:list
       (common-lisp:cons "JobName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'user-pool-id))
      (common-lisp:list
       (common-lisp:cons "UserPoolId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'cloud-watch-logs-role-arn))
      (common-lisp:list
       (common-lisp:cons "CloudWatchLogsRoleArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-user-import-job-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-user-import-job-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-user-import-job-response-"))
   (user-import-job common-lisp:nil :type
    (common-lisp:or user-import-job-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-user-import-job-response
                    'make-create-user-import-job-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-user-import-job-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-user-import-job-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'user-import-job))
      (common-lisp:list
       (common-lisp:cons "UserImportJob"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-user-import-job-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-user-pool-client-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-user-pool-client-request-"))
   (user-pool-id (common-lisp:error ":user-pool-id is required") :type
    (common-lisp:or user-pool-id-type common-lisp:null))
   (client-name (common-lisp:error ":client-name is required") :type
    (common-lisp:or client-name-type common-lisp:null))
   (generate-secret common-lisp:nil :type
    (common-lisp:or generate-secret common-lisp:null))
   (refresh-token-validity common-lisp:nil :type
    (common-lisp:or refresh-token-validity-type common-lisp:null))
   (read-attributes common-lisp:nil :type
    (common-lisp:or client-permission-list-type common-lisp:null))
   (write-attributes common-lisp:nil :type
    (common-lisp:or client-permission-list-type common-lisp:null))
   (explicit-auth-flows common-lisp:nil :type
    (common-lisp:or explicit-auth-flows-list-type common-lisp:null))
   (supported-identity-providers common-lisp:nil :type
    (common-lisp:or supported-identity-providers-list-type common-lisp:null))
   (callback-urls common-lisp:nil :type
    (common-lisp:or callback-urls-list-type common-lisp:null))
   (logout-urls common-lisp:nil :type
    (common-lisp:or logout-urls-list-type common-lisp:null))
   (default-redirect-uri common-lisp:nil :type
    (common-lisp:or redirect-url-type common-lisp:null))
   (allowed-oauth-flows common-lisp:nil :type
    (common-lisp:or oauth-flows-type common-lisp:null))
   (allowed-oauth-scopes common-lisp:nil :type
    (common-lisp:or scope-list-type common-lisp:null))
   (allowed-oauth-flows-user-pool-client common-lisp:nil :type
    (common-lisp:or boolean-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-user-pool-client-request
                    'make-create-user-pool-client-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-user-pool-client-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-user-pool-client-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'user-pool-id))
      (common-lisp:list
       (common-lisp:cons "UserPoolId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'client-name))
      (common-lisp:list
       (common-lisp:cons "ClientName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'generate-secret))
      (common-lisp:list
       (common-lisp:cons "GenerateSecret"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'refresh-token-validity))
      (common-lisp:list
       (common-lisp:cons "RefreshTokenValidity"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'read-attributes))
      (common-lisp:list
       (common-lisp:cons "ReadAttributes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'write-attributes))
      (common-lisp:list
       (common-lisp:cons "WriteAttributes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'explicit-auth-flows))
      (common-lisp:list
       (common-lisp:cons "ExplicitAuthFlows"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'supported-identity-providers))
      (common-lisp:list
       (common-lisp:cons "SupportedIdentityProviders"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'callback-urls))
      (common-lisp:list
       (common-lisp:cons "CallbackURLs"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'logout-urls))
      (common-lisp:list
       (common-lisp:cons "LogoutURLs"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'default-redirect-uri))
      (common-lisp:list
       (common-lisp:cons "DefaultRedirectURI"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'allowed-oauth-flows))
      (common-lisp:list
       (common-lisp:cons "AllowedOAuthFlows"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'allowed-oauth-scopes))
      (common-lisp:list
       (common-lisp:cons "AllowedOAuthScopes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'allowed-oauth-flows-user-pool-client))
      (common-lisp:list
       (common-lisp:cons "AllowedOAuthFlowsUserPoolClient"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-user-pool-client-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-user-pool-client-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-user-pool-client-response-"))
   (user-pool-client common-lisp:nil :type
    (common-lisp:or user-pool-client-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-user-pool-client-response
                    'make-create-user-pool-client-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-user-pool-client-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-user-pool-client-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'user-pool-client))
      (common-lisp:list
       (common-lisp:cons "UserPoolClient"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-user-pool-client-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-user-pool-domain-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-user-pool-domain-request-"))
   (domain (common-lisp:error ":domain is required") :type
    (common-lisp:or domain-type common-lisp:null))
   (user-pool-id (common-lisp:error ":user-pool-id is required") :type
    (common-lisp:or user-pool-id-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-user-pool-domain-request
                    'make-create-user-pool-domain-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-user-pool-domain-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-user-pool-domain-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'domain))
      (common-lisp:list
       (common-lisp:cons "Domain"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'user-pool-id))
      (common-lisp:list
       (common-lisp:cons "UserPoolId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-user-pool-domain-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-user-pool-domain-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-user-pool-domain-response-")))
 (common-lisp:export
  (common-lisp:list 'create-user-pool-domain-response
                    'make-create-user-pool-domain-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-user-pool-domain-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-user-pool-domain-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-user-pool-domain-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-user-pool-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-user-pool-request-"))
   (pool-name (common-lisp:error ":pool-name is required") :type
    (common-lisp:or user-pool-name-type common-lisp:null))
   (policies common-lisp:nil :type
    (common-lisp:or user-pool-policy-type common-lisp:null))
   (lambda-config common-lisp:nil :type
    (common-lisp:or lambda-config-type common-lisp:null))
   (auto-verified-attributes common-lisp:nil :type
    (common-lisp:or verified-attributes-list-type common-lisp:null))
   (alias-attributes common-lisp:nil :type
    (common-lisp:or alias-attributes-list-type common-lisp:null))
   (username-attributes common-lisp:nil :type
    (common-lisp:or username-attributes-list-type common-lisp:null))
   (sms-verification-message common-lisp:nil :type
    (common-lisp:or sms-verification-message-type common-lisp:null))
   (email-verification-message common-lisp:nil :type
    (common-lisp:or email-verification-message-type common-lisp:null))
   (email-verification-subject common-lisp:nil :type
    (common-lisp:or email-verification-subject-type common-lisp:null))
   (verification-message-template common-lisp:nil :type
    (common-lisp:or verification-message-template-type common-lisp:null))
   (sms-authentication-message common-lisp:nil :type
    (common-lisp:or sms-verification-message-type common-lisp:null))
   (mfa-configuration common-lisp:nil :type
    (common-lisp:or user-pool-mfa-type common-lisp:null))
   (device-configuration common-lisp:nil :type
    (common-lisp:or device-configuration-type common-lisp:null))
   (email-configuration common-lisp:nil :type
    (common-lisp:or email-configuration-type common-lisp:null))
   (sms-configuration common-lisp:nil :type
    (common-lisp:or sms-configuration-type common-lisp:null))
   (user-pool-tags common-lisp:nil :type
    (common-lisp:or user-pool-tags-type common-lisp:null))
   (admin-create-user-config common-lisp:nil :type
    (common-lisp:or admin-create-user-config-type common-lisp:null))
   (schema common-lisp:nil :type
    (common-lisp:or schema-attributes-list-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-user-pool-request 'make-create-user-pool-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-user-pool-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-user-pool-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'pool-name))
      (common-lisp:list
       (common-lisp:cons "PoolName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'policies))
      (common-lisp:list
       (common-lisp:cons "Policies"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'lambda-config))
      (common-lisp:list
       (common-lisp:cons "LambdaConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'auto-verified-attributes))
      (common-lisp:list
       (common-lisp:cons "AutoVerifiedAttributes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'alias-attributes))
      (common-lisp:list
       (common-lisp:cons "AliasAttributes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'username-attributes))
      (common-lisp:list
       (common-lisp:cons "UsernameAttributes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'sms-verification-message))
      (common-lisp:list
       (common-lisp:cons "SmsVerificationMessage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'email-verification-message))
      (common-lisp:list
       (common-lisp:cons "EmailVerificationMessage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'email-verification-subject))
      (common-lisp:list
       (common-lisp:cons "EmailVerificationSubject"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'verification-message-template))
      (common-lisp:list
       (common-lisp:cons "VerificationMessageTemplate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'sms-authentication-message))
      (common-lisp:list
       (common-lisp:cons "SmsAuthenticationMessage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'mfa-configuration))
      (common-lisp:list
       (common-lisp:cons "MfaConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'device-configuration))
      (common-lisp:list
       (common-lisp:cons "DeviceConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'email-configuration))
      (common-lisp:list
       (common-lisp:cons "EmailConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'sms-configuration))
      (common-lisp:list
       (common-lisp:cons "SmsConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'user-pool-tags))
      (common-lisp:list
       (common-lisp:cons "UserPoolTags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'admin-create-user-config))
      (common-lisp:list
       (common-lisp:cons "AdminCreateUserConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'schema))
      (common-lisp:list
       (common-lisp:cons "Schema"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-user-pool-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-user-pool-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-user-pool-response-"))
   (user-pool common-lisp:nil :type
    (common-lisp:or user-pool-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-user-pool-response
                    'make-create-user-pool-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-user-pool-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-user-pool-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'user-pool))
      (common-lisp:list
       (common-lisp:cons "UserPool"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-user-pool-response))
   common-lisp:nil))
(common-lisp:deftype custom-attribute-name-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype custom-attributes-list-type ()
   '(trivial-types:proper-list schema-attribute-type))
 (common-lisp:defun |make-custom-attributes-list-type|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list schema-attribute-type))
   aws-sdk/generator/shape::members))
(common-lisp:deftype date-type () 'common-lisp:string)
(common-lisp:deftype default-email-option-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (delete-group-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-group-request-"))
   (group-name (common-lisp:error ":group-name is required") :type
    (common-lisp:or group-name-type common-lisp:null))
   (user-pool-id (common-lisp:error ":user-pool-id is required") :type
    (common-lisp:or user-pool-id-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-group-request 'make-delete-group-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input delete-group-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input delete-group-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'group-name))
      (common-lisp:list
       (common-lisp:cons "GroupName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'user-pool-id))
      (common-lisp:list
       (common-lisp:cons "UserPoolId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input delete-group-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-identity-provider-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-identity-provider-request-"))
   (user-pool-id (common-lisp:error ":user-pool-id is required") :type
    (common-lisp:or user-pool-id-type common-lisp:null))
   (provider-name (common-lisp:error ":provider-name is required") :type
    (common-lisp:or provider-name-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-identity-provider-request
                    'make-delete-identity-provider-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-identity-provider-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-identity-provider-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'user-pool-id))
      (common-lisp:list
       (common-lisp:cons "UserPoolId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'provider-name))
      (common-lisp:list
       (common-lisp:cons "ProviderName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-identity-provider-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-resource-server-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-resource-server-request-"))
   (user-pool-id (common-lisp:error ":user-pool-id is required") :type
    (common-lisp:or user-pool-id-type common-lisp:null))
   (identifier (common-lisp:error ":identifier is required") :type
    (common-lisp:or resource-server-identifier-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-resource-server-request
                    'make-delete-resource-server-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-resource-server-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-resource-server-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'user-pool-id))
      (common-lisp:list
       (common-lisp:cons "UserPoolId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'identifier))
      (common-lisp:list
       (common-lisp:cons "Identifier"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-resource-server-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-user-attributes-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-user-attributes-request-"))
   (user-attribute-names
    (common-lisp:error ":user-attribute-names is required") :type
    (common-lisp:or attribute-name-list-type common-lisp:null))
   (access-token (common-lisp:error ":access-token is required") :type
    (common-lisp:or token-model-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-user-attributes-request
                    'make-delete-user-attributes-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-user-attributes-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-user-attributes-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'user-attribute-names))
      (common-lisp:list
       (common-lisp:cons "UserAttributeNames"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'access-token))
      (common-lisp:list
       (common-lisp:cons "AccessToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-user-attributes-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-user-attributes-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-user-attributes-response-")))
 (common-lisp:export
  (common-lisp:list 'delete-user-attributes-response
                    'make-delete-user-attributes-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-user-attributes-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-user-attributes-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-user-attributes-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-user-pool-client-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-user-pool-client-request-"))
   (user-pool-id (common-lisp:error ":user-pool-id is required") :type
    (common-lisp:or user-pool-id-type common-lisp:null))
   (client-id (common-lisp:error ":client-id is required") :type
    (common-lisp:or client-id-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-user-pool-client-request
                    'make-delete-user-pool-client-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-user-pool-client-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-user-pool-client-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'user-pool-id))
      (common-lisp:list
       (common-lisp:cons "UserPoolId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'client-id))
      (common-lisp:list
       (common-lisp:cons "ClientId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-user-pool-client-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-user-pool-domain-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-user-pool-domain-request-"))
   (domain (common-lisp:error ":domain is required") :type
    (common-lisp:or domain-type common-lisp:null))
   (user-pool-id (common-lisp:error ":user-pool-id is required") :type
    (common-lisp:or user-pool-id-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-user-pool-domain-request
                    'make-delete-user-pool-domain-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-user-pool-domain-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-user-pool-domain-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'domain))
      (common-lisp:list
       (common-lisp:cons "Domain"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'user-pool-id))
      (common-lisp:list
       (common-lisp:cons "UserPoolId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-user-pool-domain-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-user-pool-domain-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-user-pool-domain-response-")))
 (common-lisp:export
  (common-lisp:list 'delete-user-pool-domain-response
                    'make-delete-user-pool-domain-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-user-pool-domain-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-user-pool-domain-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-user-pool-domain-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-user-pool-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-user-pool-request-"))
   (user-pool-id (common-lisp:error ":user-pool-id is required") :type
    (common-lisp:or user-pool-id-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-user-pool-request 'make-delete-user-pool-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-user-pool-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-user-pool-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'user-pool-id))
      (common-lisp:list
       (common-lisp:cons "UserPoolId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-user-pool-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-user-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-user-request-"))
   (access-token (common-lisp:error ":access-token is required") :type
    (common-lisp:or token-model-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-user-request 'make-delete-user-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input delete-user-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input delete-user-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'access-token))
      (common-lisp:list
       (common-lisp:cons "AccessToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input delete-user-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype delivery-medium-list-type ()
   '(trivial-types:proper-list delivery-medium-type))
 (common-lisp:defun |make-delivery-medium-list-type|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list delivery-medium-type))
   aws-sdk/generator/shape::members))
(common-lisp:deftype delivery-medium-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (describe-identity-provider-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-describe-identity-provider-request-"))
   (user-pool-id (common-lisp:error ":user-pool-id is required") :type
    (common-lisp:or user-pool-id-type common-lisp:null))
   (provider-name (common-lisp:error ":provider-name is required") :type
    (common-lisp:or provider-name-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-identity-provider-request
                    'make-describe-identity-provider-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-identity-provider-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-identity-provider-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'user-pool-id))
      (common-lisp:list
       (common-lisp:cons "UserPoolId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'provider-name))
      (common-lisp:list
       (common-lisp:cons "ProviderName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-identity-provider-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-identity-provider-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-describe-identity-provider-response-"))
   (identity-provider (common-lisp:error ":identity-provider is required")
    :type (common-lisp:or identity-provider-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-identity-provider-response
                    'make-describe-identity-provider-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-identity-provider-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-identity-provider-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'identity-provider))
      (common-lisp:list
       (common-lisp:cons "IdentityProvider"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-identity-provider-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-resource-server-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-describe-resource-server-request-"))
   (user-pool-id (common-lisp:error ":user-pool-id is required") :type
    (common-lisp:or user-pool-id-type common-lisp:null))
   (identifier (common-lisp:error ":identifier is required") :type
    (common-lisp:or resource-server-identifier-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-resource-server-request
                    'make-describe-resource-server-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-resource-server-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-resource-server-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'user-pool-id))
      (common-lisp:list
       (common-lisp:cons "UserPoolId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'identifier))
      (common-lisp:list
       (common-lisp:cons "Identifier"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-resource-server-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-resource-server-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-describe-resource-server-response-"))
   (resource-server (common-lisp:error ":resource-server is required") :type
    (common-lisp:or resource-server-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-resource-server-response
                    'make-describe-resource-server-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-resource-server-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-resource-server-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-server))
      (common-lisp:list
       (common-lisp:cons "ResourceServer"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-resource-server-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-user-import-job-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-describe-user-import-job-request-"))
   (user-pool-id (common-lisp:error ":user-pool-id is required") :type
    (common-lisp:or user-pool-id-type common-lisp:null))
   (job-id (common-lisp:error ":job-id is required") :type
    (common-lisp:or user-import-job-id-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-user-import-job-request
                    'make-describe-user-import-job-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-user-import-job-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-user-import-job-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'user-pool-id))
      (common-lisp:list
       (common-lisp:cons "UserPoolId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-id))
      (common-lisp:list
       (common-lisp:cons "JobId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-user-import-job-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-user-import-job-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-describe-user-import-job-response-"))
   (user-import-job common-lisp:nil :type
    (common-lisp:or user-import-job-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-user-import-job-response
                    'make-describe-user-import-job-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-user-import-job-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-user-import-job-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'user-import-job))
      (common-lisp:list
       (common-lisp:cons "UserImportJob"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-user-import-job-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-user-pool-client-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-describe-user-pool-client-request-"))
   (user-pool-id (common-lisp:error ":user-pool-id is required") :type
    (common-lisp:or user-pool-id-type common-lisp:null))
   (client-id (common-lisp:error ":client-id is required") :type
    (common-lisp:or client-id-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-user-pool-client-request
                    'make-describe-user-pool-client-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-user-pool-client-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-user-pool-client-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'user-pool-id))
      (common-lisp:list
       (common-lisp:cons "UserPoolId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'client-id))
      (common-lisp:list
       (common-lisp:cons "ClientId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-user-pool-client-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-user-pool-client-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-describe-user-pool-client-response-"))
   (user-pool-client common-lisp:nil :type
    (common-lisp:or user-pool-client-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-user-pool-client-response
                    'make-describe-user-pool-client-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-user-pool-client-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-user-pool-client-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'user-pool-client))
      (common-lisp:list
       (common-lisp:cons "UserPoolClient"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-user-pool-client-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-user-pool-domain-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-describe-user-pool-domain-request-"))
   (domain (common-lisp:error ":domain is required") :type
    (common-lisp:or domain-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-user-pool-domain-request
                    'make-describe-user-pool-domain-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-user-pool-domain-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-user-pool-domain-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'domain))
      (common-lisp:list
       (common-lisp:cons "Domain"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-user-pool-domain-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-user-pool-domain-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-describe-user-pool-domain-response-"))
   (domain-description common-lisp:nil :type
    (common-lisp:or domain-description-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-user-pool-domain-response
                    'make-describe-user-pool-domain-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-user-pool-domain-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-user-pool-domain-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'domain-description))
      (common-lisp:list
       (common-lisp:cons "DomainDescription"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-user-pool-domain-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-user-pool-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-describe-user-pool-request-"))
   (user-pool-id (common-lisp:error ":user-pool-id is required") :type
    (common-lisp:or user-pool-id-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-user-pool-request
                    'make-describe-user-pool-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-user-pool-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-user-pool-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'user-pool-id))
      (common-lisp:list
       (common-lisp:cons "UserPoolId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-user-pool-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-user-pool-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-describe-user-pool-response-"))
   (user-pool common-lisp:nil :type
    (common-lisp:or user-pool-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-user-pool-response
                    'make-describe-user-pool-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-user-pool-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-user-pool-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'user-pool))
      (common-lisp:list
       (common-lisp:cons "UserPool"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-user-pool-response))
   common-lisp:nil))
(common-lisp:deftype description-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (device-configuration-type (:copier common-lisp:nil)
      (:conc-name "struct-shape-device-configuration-type-"))
   (challenge-required-on-new-device common-lisp:nil :type
    (common-lisp:or boolean-type common-lisp:null))
   (device-only-remembered-on-user-prompt common-lisp:nil :type
    (common-lisp:or boolean-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'device-configuration-type
                    'make-device-configuration-type))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          device-configuration-type))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          device-configuration-type))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'challenge-required-on-new-device))
      (common-lisp:list
       (common-lisp:cons "ChallengeRequiredOnNewDevice"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'device-only-remembered-on-user-prompt))
      (common-lisp:list
       (common-lisp:cons "DeviceOnlyRememberedOnUserPrompt"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          device-configuration-type))
   common-lisp:nil))
(common-lisp:deftype device-key-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype device-list-type ()
   '(trivial-types:proper-list device-type))
 (common-lisp:defun |make-device-list-type|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list device-type))
   aws-sdk/generator/shape::members))
(common-lisp:deftype device-name-type () 'common-lisp:string)
(common-lisp:deftype device-remembered-status-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (device-secret-verifier-config-type (:copier common-lisp:nil)
      (:conc-name "struct-shape-device-secret-verifier-config-type-"))
   (password-verifier common-lisp:nil :type
    (common-lisp:or string-type common-lisp:null))
   (salt common-lisp:nil :type (common-lisp:or string-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'device-secret-verifier-config-type
                    'make-device-secret-verifier-config-type))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          device-secret-verifier-config-type))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          device-secret-verifier-config-type))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'password-verifier))
      (common-lisp:list
       (common-lisp:cons "PasswordVerifier"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'salt))
      (common-lisp:list
       (common-lisp:cons "Salt"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          device-secret-verifier-config-type))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (device-type (:copier common-lisp:nil)
      (:conc-name "struct-shape-device-type-"))
   (device-key common-lisp:nil :type
    (common-lisp:or device-key-type common-lisp:null))
   (device-attributes common-lisp:nil :type
    (common-lisp:or attribute-list-type common-lisp:null))
   (device-create-date common-lisp:nil :type
    (common-lisp:or date-type common-lisp:null))
   (device-last-modified-date common-lisp:nil :type
    (common-lisp:or date-type common-lisp:null))
   (device-last-authenticated-date common-lisp:nil :type
    (common-lisp:or date-type common-lisp:null)))
 (common-lisp:export (common-lisp:list 'device-type 'make-device-type))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input device-type))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input device-type))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'device-key))
      (common-lisp:list
       (common-lisp:cons "DeviceKey"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'device-attributes))
      (common-lisp:list
       (common-lisp:cons "DeviceAttributes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'device-create-date))
      (common-lisp:list
       (common-lisp:cons "DeviceCreateDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'device-last-modified-date))
      (common-lisp:list
       (common-lisp:cons "DeviceLastModifiedDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'device-last-authenticated-date))
      (common-lisp:list
       (common-lisp:cons "DeviceLastAuthenticatedDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input device-type))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (domain-description-type (:copier common-lisp:nil)
      (:conc-name "struct-shape-domain-description-type-"))
   (user-pool-id common-lisp:nil :type
    (common-lisp:or user-pool-id-type common-lisp:null))
   (awsaccount-id common-lisp:nil :type
    (common-lisp:or awsaccount-id-type common-lisp:null))
   (domain common-lisp:nil :type (common-lisp:or domain-type common-lisp:null))
   (s3bucket common-lisp:nil :type
    (common-lisp:or s3bucket-type common-lisp:null))
   (cloud-front-distribution common-lisp:nil :type
    (common-lisp:or arn-type common-lisp:null))
   (version common-lisp:nil :type
    (common-lisp:or domain-version-type common-lisp:null))
   (status common-lisp:nil :type
    (common-lisp:or domain-status-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'domain-description-type 'make-domain-description-type))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          domain-description-type))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          domain-description-type))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'user-pool-id))
      (common-lisp:list
       (common-lisp:cons "UserPoolId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'awsaccount-id))
      (common-lisp:list
       (common-lisp:cons "AWSAccountId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'domain))
      (common-lisp:list
       (common-lisp:cons "Domain"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 's3bucket))
      (common-lisp:list
       (common-lisp:cons "S3Bucket"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'cloud-front-distribution))
      (common-lisp:list
       (common-lisp:cons "CloudFrontDistribution"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'version))
      (common-lisp:list
       (common-lisp:cons "Version"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "Status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          domain-description-type))
   common-lisp:nil))
(common-lisp:deftype domain-status-type () 'common-lisp:string)
(common-lisp:deftype domain-type () 'common-lisp:string)
(common-lisp:deftype domain-version-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:define-condition duplicate-provider-exception
     (cognito-idp-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       duplicate-provider-exception-message)))
 (common-lisp:export
  (common-lisp:list 'duplicate-provider-exception
                    'duplicate-provider-exception-message)))
(common-lisp:deftype email-address-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (email-configuration-type (:copier common-lisp:nil)
      (:conc-name "struct-shape-email-configuration-type-"))
   (source-arn common-lisp:nil :type
    (common-lisp:or arn-type common-lisp:null))
   (reply-to-email-address common-lisp:nil :type
    (common-lisp:or email-address-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'email-configuration-type 'make-email-configuration-type))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          email-configuration-type))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          email-configuration-type))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'source-arn))
      (common-lisp:list
       (common-lisp:cons "SourceArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'reply-to-email-address))
      (common-lisp:list
       (common-lisp:cons "ReplyToEmailAddress"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          email-configuration-type))
   common-lisp:nil))
(common-lisp:deftype email-verification-message-by-link-type ()
  'common-lisp:string)
(common-lisp:deftype email-verification-message-type () 'common-lisp:string)
(common-lisp:deftype email-verification-subject-by-link-type ()
  'common-lisp:string)
(common-lisp:deftype email-verification-subject-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:define-condition expired-code-exception
     (cognito-idp-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       expired-code-exception-message)))
 (common-lisp:export
  (common-lisp:list 'expired-code-exception 'expired-code-exception-message)))
(common-lisp:progn
 (common-lisp:deftype explicit-auth-flows-list-type ()
   '(trivial-types:proper-list explicit-auth-flows-type))
 (common-lisp:defun |make-explicit-auth-flows-list-type|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            explicit-auth-flows-type))
   aws-sdk/generator/shape::members))
(common-lisp:deftype explicit-auth-flows-type () 'common-lisp:string)
(common-lisp:deftype force-alias-creation () 'common-lisp:boolean)
(common-lisp:progn
 (common-lisp:defstruct
     (forget-device-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-forget-device-request-"))
   (access-token common-lisp:nil :type
    (common-lisp:or token-model-type common-lisp:null))
   (device-key (common-lisp:error ":device-key is required") :type
    (common-lisp:or device-key-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'forget-device-request 'make-forget-device-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          forget-device-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          forget-device-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'access-token))
      (common-lisp:list
       (common-lisp:cons "AccessToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'device-key))
      (common-lisp:list
       (common-lisp:cons "DeviceKey"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          forget-device-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (forgot-password-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-forgot-password-request-"))
   (client-id (common-lisp:error ":client-id is required") :type
    (common-lisp:or client-id-type common-lisp:null))
   (secret-hash common-lisp:nil :type
    (common-lisp:or secret-hash-type common-lisp:null))
   (username (common-lisp:error ":username is required") :type
    (common-lisp:or username-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'forgot-password-request 'make-forgot-password-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          forgot-password-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          forgot-password-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'client-id))
      (common-lisp:list
       (common-lisp:cons "ClientId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'secret-hash))
      (common-lisp:list
       (common-lisp:cons "SecretHash"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'username))
      (common-lisp:list
       (common-lisp:cons "Username"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          forgot-password-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (forgot-password-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-forgot-password-response-"))
   (code-delivery-details common-lisp:nil :type
    (common-lisp:or code-delivery-details-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'forgot-password-response 'make-forgot-password-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          forgot-password-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          forgot-password-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'code-delivery-details))
      (common-lisp:list
       (common-lisp:cons "CodeDeliveryDetails"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          forgot-password-response))
   common-lisp:nil))
(common-lisp:deftype generate-secret () 'common-lisp:boolean)
(common-lisp:progn
 (common-lisp:defstruct
     (get-csvheader-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-csvheader-request-"))
   (user-pool-id (common-lisp:error ":user-pool-id is required") :type
    (common-lisp:or user-pool-id-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-csvheader-request 'make-get-csvheader-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-csvheader-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-csvheader-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'user-pool-id))
      (common-lisp:list
       (common-lisp:cons "UserPoolId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-csvheader-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-csvheader-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-csvheader-response-"))
   (user-pool-id common-lisp:nil :type
    (common-lisp:or user-pool-id-type common-lisp:null))
   (csvheader common-lisp:nil :type
    (common-lisp:or list-of-string-types common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-csvheader-response 'make-get-csvheader-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-csvheader-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-csvheader-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'user-pool-id))
      (common-lisp:list
       (common-lisp:cons "UserPoolId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'csvheader))
      (common-lisp:list
       (common-lisp:cons "CSVHeader"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-csvheader-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-device-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-device-request-"))
   (device-key (common-lisp:error ":device-key is required") :type
    (common-lisp:or device-key-type common-lisp:null))
   (access-token common-lisp:nil :type
    (common-lisp:or token-model-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-device-request 'make-get-device-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input get-device-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input get-device-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'device-key))
      (common-lisp:list
       (common-lisp:cons "DeviceKey"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'access-token))
      (common-lisp:list
       (common-lisp:cons "AccessToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input get-device-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-device-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-device-response-"))
   (device (common-lisp:error ":device is required") :type
    (common-lisp:or device-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-device-response 'make-get-device-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input get-device-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input get-device-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'device))
      (common-lisp:list
       (common-lisp:cons "Device"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input get-device-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-group-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-group-request-"))
   (group-name (common-lisp:error ":group-name is required") :type
    (common-lisp:or group-name-type common-lisp:null))
   (user-pool-id (common-lisp:error ":user-pool-id is required") :type
    (common-lisp:or user-pool-id-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-group-request 'make-get-group-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input get-group-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input get-group-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'group-name))
      (common-lisp:list
       (common-lisp:cons "GroupName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'user-pool-id))
      (common-lisp:list
       (common-lisp:cons "UserPoolId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input get-group-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-group-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-group-response-"))
   (group common-lisp:nil :type (common-lisp:or group-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-group-response 'make-get-group-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input get-group-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input get-group-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'group))
      (common-lisp:list
       (common-lisp:cons "Group"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input get-group-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-identity-provider-by-identifier-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-identity-provider-by-identifier-request-"))
   (user-pool-id (common-lisp:error ":user-pool-id is required") :type
    (common-lisp:or user-pool-id-type common-lisp:null))
   (idp-identifier (common-lisp:error ":idp-identifier is required") :type
    (common-lisp:or idp-identifier-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-identity-provider-by-identifier-request
                    'make-get-identity-provider-by-identifier-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-identity-provider-by-identifier-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-identity-provider-by-identifier-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'user-pool-id))
      (common-lisp:list
       (common-lisp:cons "UserPoolId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'idp-identifier))
      (common-lisp:list
       (common-lisp:cons "IdpIdentifier"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-identity-provider-by-identifier-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-identity-provider-by-identifier-response (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-get-identity-provider-by-identifier-response-"))
   (identity-provider (common-lisp:error ":identity-provider is required")
    :type (common-lisp:or identity-provider-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-identity-provider-by-identifier-response
                    'make-get-identity-provider-by-identifier-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-identity-provider-by-identifier-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-identity-provider-by-identifier-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'identity-provider))
      (common-lisp:list
       (common-lisp:cons "IdentityProvider"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-identity-provider-by-identifier-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-uicustomization-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-uicustomization-request-"))
   (user-pool-id (common-lisp:error ":user-pool-id is required") :type
    (common-lisp:or user-pool-id-type common-lisp:null))
   (client-id common-lisp:nil :type
    (common-lisp:or client-id-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-uicustomization-request
                    'make-get-uicustomization-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-uicustomization-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-uicustomization-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'user-pool-id))
      (common-lisp:list
       (common-lisp:cons "UserPoolId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'client-id))
      (common-lisp:list
       (common-lisp:cons "ClientId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-uicustomization-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-uicustomization-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-uicustomization-response-"))
   (uicustomization (common-lisp:error ":uicustomization is required") :type
    (common-lisp:or uicustomization-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-uicustomization-response
                    'make-get-uicustomization-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-uicustomization-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-uicustomization-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'uicustomization))
      (common-lisp:list
       (common-lisp:cons "UICustomization"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-uicustomization-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-user-attribute-verification-code-request (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-get-user-attribute-verification-code-request-"))
   (access-token (common-lisp:error ":access-token is required") :type
    (common-lisp:or token-model-type common-lisp:null))
   (attribute-name (common-lisp:error ":attribute-name is required") :type
    (common-lisp:or attribute-name-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-user-attribute-verification-code-request
                    'make-get-user-attribute-verification-code-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-user-attribute-verification-code-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-user-attribute-verification-code-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'access-token))
      (common-lisp:list
       (common-lisp:cons "AccessToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'attribute-name))
      (common-lisp:list
       (common-lisp:cons "AttributeName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-user-attribute-verification-code-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-user-attribute-verification-code-response (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-get-user-attribute-verification-code-response-"))
   (code-delivery-details common-lisp:nil :type
    (common-lisp:or code-delivery-details-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-user-attribute-verification-code-response
                    'make-get-user-attribute-verification-code-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-user-attribute-verification-code-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-user-attribute-verification-code-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'code-delivery-details))
      (common-lisp:list
       (common-lisp:cons "CodeDeliveryDetails"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-user-attribute-verification-code-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-user-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-user-request-"))
   (access-token (common-lisp:error ":access-token is required") :type
    (common-lisp:or token-model-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-user-request 'make-get-user-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input get-user-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input get-user-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'access-token))
      (common-lisp:list
       (common-lisp:cons "AccessToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input get-user-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-user-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-user-response-"))
   (username (common-lisp:error ":username is required") :type
    (common-lisp:or username-type common-lisp:null))
   (user-attributes (common-lisp:error ":user-attributes is required") :type
    (common-lisp:or attribute-list-type common-lisp:null))
   (mfaoptions common-lisp:nil :type
    (common-lisp:or mfaoption-list-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-user-response 'make-get-user-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input get-user-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input get-user-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'username))
      (common-lisp:list
       (common-lisp:cons "Username"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'user-attributes))
      (common-lisp:list
       (common-lisp:cons "UserAttributes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'mfaoptions))
      (common-lisp:list
       (common-lisp:cons "MFAOptions"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input get-user-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (global-sign-out-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-global-sign-out-request-"))
   (access-token (common-lisp:error ":access-token is required") :type
    (common-lisp:or token-model-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'global-sign-out-request 'make-global-sign-out-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          global-sign-out-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          global-sign-out-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'access-token))
      (common-lisp:list
       (common-lisp:cons "AccessToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          global-sign-out-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (global-sign-out-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-global-sign-out-response-")))
 (common-lisp:export
  (common-lisp:list 'global-sign-out-response 'make-global-sign-out-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          global-sign-out-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          global-sign-out-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          global-sign-out-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:define-condition group-exists-exception
     (cognito-idp-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       group-exists-exception-message)))
 (common-lisp:export
  (common-lisp:list 'group-exists-exception 'group-exists-exception-message)))
(common-lisp:progn
 (common-lisp:deftype group-list-type ()
   '(trivial-types:proper-list group-type))
 (common-lisp:defun |make-group-list-type|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list group-type))
   aws-sdk/generator/shape::members))
(common-lisp:deftype group-name-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (group-type (:copier common-lisp:nil)
      (:conc-name "struct-shape-group-type-"))
   (group-name common-lisp:nil :type
    (common-lisp:or group-name-type common-lisp:null))
   (user-pool-id common-lisp:nil :type
    (common-lisp:or user-pool-id-type common-lisp:null))
   (description common-lisp:nil :type
    (common-lisp:or description-type common-lisp:null))
   (role-arn common-lisp:nil :type (common-lisp:or arn-type common-lisp:null))
   (precedence common-lisp:nil :type
    (common-lisp:or precedence-type common-lisp:null))
   (last-modified-date common-lisp:nil :type
    (common-lisp:or date-type common-lisp:null))
   (creation-date common-lisp:nil :type
    (common-lisp:or date-type common-lisp:null)))
 (common-lisp:export (common-lisp:list 'group-type 'make-group-type))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input group-type))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input group-type))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'group-name))
      (common-lisp:list
       (common-lisp:cons "GroupName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'user-pool-id))
      (common-lisp:list
       (common-lisp:cons "UserPoolId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'role-arn))
      (common-lisp:list
       (common-lisp:cons "RoleArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'precedence))
      (common-lisp:list
       (common-lisp:cons "Precedence"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'last-modified-date))
      (common-lisp:list
       (common-lisp:cons "LastModifiedDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'creation-date))
      (common-lisp:list
       (common-lisp:cons "CreationDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input group-type))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (identity-provider-type (:copier common-lisp:nil)
      (:conc-name "struct-shape-identity-provider-type-"))
   (user-pool-id common-lisp:nil :type
    (common-lisp:or user-pool-id-type common-lisp:null))
   (provider-name common-lisp:nil :type
    (common-lisp:or provider-name-type common-lisp:null))
   (provider-type common-lisp:nil :type
    (common-lisp:or identity-provider-type-type common-lisp:null))
   (provider-details common-lisp:nil :type
    (common-lisp:or provider-details-type common-lisp:null))
   (attribute-mapping common-lisp:nil :type
    (common-lisp:or attribute-mapping-type common-lisp:null))
   (idp-identifiers common-lisp:nil :type
    (common-lisp:or idp-identifiers-list-type common-lisp:null))
   (last-modified-date common-lisp:nil :type
    (common-lisp:or date-type common-lisp:null))
   (creation-date common-lisp:nil :type
    (common-lisp:or date-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'identity-provider-type 'make-identity-provider-type))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          identity-provider-type))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          identity-provider-type))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'user-pool-id))
      (common-lisp:list
       (common-lisp:cons "UserPoolId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'provider-name))
      (common-lisp:list
       (common-lisp:cons "ProviderName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'provider-type))
      (common-lisp:list
       (common-lisp:cons "ProviderType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'provider-details))
      (common-lisp:list
       (common-lisp:cons "ProviderDetails"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'attribute-mapping))
      (common-lisp:list
       (common-lisp:cons "AttributeMapping"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'idp-identifiers))
      (common-lisp:list
       (common-lisp:cons "IdpIdentifiers"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'last-modified-date))
      (common-lisp:list
       (common-lisp:cons "LastModifiedDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'creation-date))
      (common-lisp:list
       (common-lisp:cons "CreationDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          identity-provider-type))
   common-lisp:nil))
(common-lisp:deftype identity-provider-type-type () 'common-lisp:string)
(common-lisp:deftype idp-identifier-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype idp-identifiers-list-type ()
   '(trivial-types:proper-list idp-identifier-type))
 (common-lisp:defun |make-idp-identifiers-list-type|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list idp-identifier-type))
   aws-sdk/generator/shape::members))
(common-lisp:deftype image-file-type ()
  '(common-lisp:simple-array (common-lisp:unsigned-byte 8) (common-lisp:*)))
(common-lisp:deftype image-url-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (initiate-auth-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-initiate-auth-request-"))
   (auth-flow (common-lisp:error ":auth-flow is required") :type
    (common-lisp:or auth-flow-type common-lisp:null))
   (auth-parameters common-lisp:nil :type
    (common-lisp:or auth-parameters-type common-lisp:null))
   (client-metadata common-lisp:nil :type
    (common-lisp:or client-metadata-type common-lisp:null))
   (client-id (common-lisp:error ":client-id is required") :type
    (common-lisp:or client-id-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'initiate-auth-request 'make-initiate-auth-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          initiate-auth-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          initiate-auth-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'auth-flow))
      (common-lisp:list
       (common-lisp:cons "AuthFlow"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'auth-parameters))
      (common-lisp:list
       (common-lisp:cons "AuthParameters"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'client-metadata))
      (common-lisp:list
       (common-lisp:cons "ClientMetadata"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'client-id))
      (common-lisp:list
       (common-lisp:cons "ClientId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          initiate-auth-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (initiate-auth-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-initiate-auth-response-"))
   (challenge-name common-lisp:nil :type
    (common-lisp:or challenge-name-type common-lisp:null))
   (session common-lisp:nil :type
    (common-lisp:or session-type common-lisp:null))
   (challenge-parameters common-lisp:nil :type
    (common-lisp:or challenge-parameters-type common-lisp:null))
   (authentication-result common-lisp:nil :type
    (common-lisp:or authentication-result-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'initiate-auth-response 'make-initiate-auth-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          initiate-auth-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          initiate-auth-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'challenge-name))
      (common-lisp:list
       (common-lisp:cons "ChallengeName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'session))
      (common-lisp:list
       (common-lisp:cons "Session"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'challenge-parameters))
      (common-lisp:list
       (common-lisp:cons "ChallengeParameters"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'authentication-result))
      (common-lisp:list
       (common-lisp:cons "AuthenticationResult"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          initiate-auth-response))
   common-lisp:nil))
(common-lisp:deftype integer-type () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:define-condition internal-error-exception
     (cognito-idp-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       internal-error-exception-message)))
 (common-lisp:export
  (common-lisp:list 'internal-error-exception
                    'internal-error-exception-message)))
(common-lisp:progn
 (common-lisp:define-condition invalid-email-role-access-policy-exception
     (cognito-idp-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       invalid-email-role-access-policy-exception-message)))
 (common-lisp:export
  (common-lisp:list 'invalid-email-role-access-policy-exception
                    'invalid-email-role-access-policy-exception-message)))
(common-lisp:progn
 (common-lisp:define-condition invalid-lambda-response-exception
     (cognito-idp-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       invalid-lambda-response-exception-message)))
 (common-lisp:export
  (common-lisp:list 'invalid-lambda-response-exception
                    'invalid-lambda-response-exception-message)))
(common-lisp:progn
 (common-lisp:define-condition invalid-oauth-flow-exception
     (cognito-idp-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       invalid-oauth-flow-exception-message)))
 (common-lisp:export
  (common-lisp:list 'invalid-oauth-flow-exception
                    'invalid-oauth-flow-exception-message)))
(common-lisp:progn
 (common-lisp:define-condition invalid-parameter-exception
     (cognito-idp-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       invalid-parameter-exception-message)))
 (common-lisp:export
  (common-lisp:list 'invalid-parameter-exception
                    'invalid-parameter-exception-message)))
(common-lisp:progn
 (common-lisp:define-condition invalid-password-exception
     (cognito-idp-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       invalid-password-exception-message)))
 (common-lisp:export
  (common-lisp:list 'invalid-password-exception
                    'invalid-password-exception-message)))
(common-lisp:progn
 (common-lisp:define-condition invalid-sms-role-access-policy-exception
     (cognito-idp-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       invalid-sms-role-access-policy-exception-message)))
 (common-lisp:export
  (common-lisp:list 'invalid-sms-role-access-policy-exception
                    'invalid-sms-role-access-policy-exception-message)))
(common-lisp:progn
 (common-lisp:define-condition invalid-sms-role-trust-relationship-exception
     (cognito-idp-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       invalid-sms-role-trust-relationship-exception-message)))
 (common-lisp:export
  (common-lisp:list 'invalid-sms-role-trust-relationship-exception
                    'invalid-sms-role-trust-relationship-exception-message)))
(common-lisp:progn
 (common-lisp:define-condition invalid-user-pool-configuration-exception
     (cognito-idp-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       invalid-user-pool-configuration-exception-message)))
 (common-lisp:export
  (common-lisp:list 'invalid-user-pool-configuration-exception
                    'invalid-user-pool-configuration-exception-message)))
(common-lisp:progn
 (common-lisp:defstruct
     (lambda-config-type (:copier common-lisp:nil)
      (:conc-name "struct-shape-lambda-config-type-"))
   (pre-sign-up common-lisp:nil :type
    (common-lisp:or arn-type common-lisp:null))
   (custom-message common-lisp:nil :type
    (common-lisp:or arn-type common-lisp:null))
   (post-confirmation common-lisp:nil :type
    (common-lisp:or arn-type common-lisp:null))
   (pre-authentication common-lisp:nil :type
    (common-lisp:or arn-type common-lisp:null))
   (post-authentication common-lisp:nil :type
    (common-lisp:or arn-type common-lisp:null))
   (define-auth-challenge common-lisp:nil :type
    (common-lisp:or arn-type common-lisp:null))
   (create-auth-challenge common-lisp:nil :type
    (common-lisp:or arn-type common-lisp:null))
   (verify-auth-challenge-response common-lisp:nil :type
    (common-lisp:or arn-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'lambda-config-type 'make-lambda-config-type))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input lambda-config-type))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input lambda-config-type))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'pre-sign-up))
      (common-lisp:list
       (common-lisp:cons "PreSignUp"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'custom-message))
      (common-lisp:list
       (common-lisp:cons "CustomMessage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'post-confirmation))
      (common-lisp:list
       (common-lisp:cons "PostConfirmation"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'pre-authentication))
      (common-lisp:list
       (common-lisp:cons "PreAuthentication"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'post-authentication))
      (common-lisp:list
       (common-lisp:cons "PostAuthentication"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'define-auth-challenge))
      (common-lisp:list
       (common-lisp:cons "DefineAuthChallenge"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'create-auth-challenge))
      (common-lisp:list
       (common-lisp:cons "CreateAuthChallenge"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'verify-auth-challenge-response))
      (common-lisp:list
       (common-lisp:cons "VerifyAuthChallengeResponse"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input lambda-config-type))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:define-condition limit-exceeded-exception
     (cognito-idp-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       limit-exceeded-exception-message)))
 (common-lisp:export
  (common-lisp:list 'limit-exceeded-exception
                    'limit-exceeded-exception-message)))
(common-lisp:progn
 (common-lisp:defstruct
     (list-devices-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-devices-request-"))
   (access-token (common-lisp:error ":access-token is required") :type
    (common-lisp:or token-model-type common-lisp:null))
   (limit common-lisp:nil :type
    (common-lisp:or query-limit-type common-lisp:null))
   (pagination-token common-lisp:nil :type
    (common-lisp:or search-pagination-token-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-devices-request 'make-list-devices-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input list-devices-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input list-devices-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'access-token))
      (common-lisp:list
       (common-lisp:cons "AccessToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'limit))
      (common-lisp:list
       (common-lisp:cons "Limit"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'pagination-token))
      (common-lisp:list
       (common-lisp:cons "PaginationToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input list-devices-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-devices-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-devices-response-"))
   (devices common-lisp:nil :type
    (common-lisp:or device-list-type common-lisp:null))
   (pagination-token common-lisp:nil :type
    (common-lisp:or search-pagination-token-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-devices-response 'make-list-devices-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-devices-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-devices-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'devices))
      (common-lisp:list
       (common-lisp:cons "Devices"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'pagination-token))
      (common-lisp:list
       (common-lisp:cons "PaginationToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-devices-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-groups-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-groups-request-"))
   (user-pool-id (common-lisp:error ":user-pool-id is required") :type
    (common-lisp:or user-pool-id-type common-lisp:null))
   (limit common-lisp:nil :type
    (common-lisp:or query-limit-type common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or pagination-key common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-groups-request 'make-list-groups-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input list-groups-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input list-groups-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'user-pool-id))
      (common-lisp:list
       (common-lisp:cons "UserPoolId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'limit))
      (common-lisp:list
       (common-lisp:cons "Limit"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input list-groups-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-groups-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-groups-response-"))
   (groups common-lisp:nil :type
    (common-lisp:or group-list-type common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or pagination-key common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-groups-response 'make-list-groups-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input list-groups-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input list-groups-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'groups))
      (common-lisp:list
       (common-lisp:cons "Groups"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input list-groups-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-identity-providers-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-identity-providers-request-"))
   (user-pool-id (common-lisp:error ":user-pool-id is required") :type
    (common-lisp:or user-pool-id-type common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or list-providers-limit-type common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or pagination-key-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-identity-providers-request
                    'make-list-identity-providers-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-identity-providers-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-identity-providers-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'user-pool-id))
      (common-lisp:list
       (common-lisp:cons "UserPoolId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-results))
      (common-lisp:list
       (common-lisp:cons "MaxResults"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-identity-providers-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-identity-providers-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-identity-providers-response-"))
   (providers (common-lisp:error ":providers is required") :type
    (common-lisp:or providers-list-type common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or pagination-key-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-identity-providers-response
                    'make-list-identity-providers-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-identity-providers-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-identity-providers-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'providers))
      (common-lisp:list
       (common-lisp:cons "Providers"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-identity-providers-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype list-of-string-types ()
   '(trivial-types:proper-list string-type))
 (common-lisp:defun |make-list-of-string-types|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list string-type))
   aws-sdk/generator/shape::members))
(common-lisp:deftype list-providers-limit-type () 'common-lisp:integer)
(common-lisp:deftype list-resource-servers-limit-type () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:defstruct
     (list-resource-servers-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-resource-servers-request-"))
   (user-pool-id (common-lisp:error ":user-pool-id is required") :type
    (common-lisp:or user-pool-id-type common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or list-resource-servers-limit-type common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or pagination-key-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-resource-servers-request
                    'make-list-resource-servers-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-resource-servers-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-resource-servers-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'user-pool-id))
      (common-lisp:list
       (common-lisp:cons "UserPoolId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-results))
      (common-lisp:list
       (common-lisp:cons "MaxResults"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-resource-servers-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-resource-servers-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-resource-servers-response-"))
   (resource-servers (common-lisp:error ":resource-servers is required") :type
    (common-lisp:or resource-servers-list-type common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or pagination-key-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-resource-servers-response
                    'make-list-resource-servers-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-resource-servers-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-resource-servers-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-servers))
      (common-lisp:list
       (common-lisp:cons "ResourceServers"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-resource-servers-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-user-import-jobs-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-user-import-jobs-request-"))
   (user-pool-id (common-lisp:error ":user-pool-id is required") :type
    (common-lisp:or user-pool-id-type common-lisp:null))
   (max-results (common-lisp:error ":max-results is required") :type
    (common-lisp:or pool-query-limit-type common-lisp:null))
   (pagination-token common-lisp:nil :type
    (common-lisp:or pagination-key-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-user-import-jobs-request
                    'make-list-user-import-jobs-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-user-import-jobs-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-user-import-jobs-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'user-pool-id))
      (common-lisp:list
       (common-lisp:cons "UserPoolId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-results))
      (common-lisp:list
       (common-lisp:cons "MaxResults"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'pagination-token))
      (common-lisp:list
       (common-lisp:cons "PaginationToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-user-import-jobs-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-user-import-jobs-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-user-import-jobs-response-"))
   (user-import-jobs common-lisp:nil :type
    (common-lisp:or user-import-jobs-list-type common-lisp:null))
   (pagination-token common-lisp:nil :type
    (common-lisp:or pagination-key-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-user-import-jobs-response
                    'make-list-user-import-jobs-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-user-import-jobs-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-user-import-jobs-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'user-import-jobs))
      (common-lisp:list
       (common-lisp:cons "UserImportJobs"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'pagination-token))
      (common-lisp:list
       (common-lisp:cons "PaginationToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-user-import-jobs-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-user-pool-clients-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-user-pool-clients-request-"))
   (user-pool-id (common-lisp:error ":user-pool-id is required") :type
    (common-lisp:or user-pool-id-type common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or query-limit common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or pagination-key common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-user-pool-clients-request
                    'make-list-user-pool-clients-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-user-pool-clients-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-user-pool-clients-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'user-pool-id))
      (common-lisp:list
       (common-lisp:cons "UserPoolId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-results))
      (common-lisp:list
       (common-lisp:cons "MaxResults"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-user-pool-clients-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-user-pool-clients-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-user-pool-clients-response-"))
   (user-pool-clients common-lisp:nil :type
    (common-lisp:or user-pool-client-list-type common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or pagination-key common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-user-pool-clients-response
                    'make-list-user-pool-clients-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-user-pool-clients-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-user-pool-clients-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'user-pool-clients))
      (common-lisp:list
       (common-lisp:cons "UserPoolClients"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-user-pool-clients-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-user-pools-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-user-pools-request-"))
   (next-token common-lisp:nil :type
    (common-lisp:or pagination-key-type common-lisp:null))
   (max-results (common-lisp:error ":max-results is required") :type
    (common-lisp:or pool-query-limit-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-user-pools-request 'make-list-user-pools-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-user-pools-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-user-pools-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-results))
      (common-lisp:list
       (common-lisp:cons "MaxResults"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-user-pools-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-user-pools-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-user-pools-response-"))
   (user-pools common-lisp:nil :type
    (common-lisp:or user-pool-list-type common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or pagination-key-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-user-pools-response 'make-list-user-pools-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-user-pools-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-user-pools-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'user-pools))
      (common-lisp:list
       (common-lisp:cons "UserPools"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-user-pools-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-users-in-group-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-users-in-group-request-"))
   (user-pool-id (common-lisp:error ":user-pool-id is required") :type
    (common-lisp:or user-pool-id-type common-lisp:null))
   (group-name (common-lisp:error ":group-name is required") :type
    (common-lisp:or group-name-type common-lisp:null))
   (limit common-lisp:nil :type
    (common-lisp:or query-limit-type common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or pagination-key common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-users-in-group-request
                    'make-list-users-in-group-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-users-in-group-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-users-in-group-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'user-pool-id))
      (common-lisp:list
       (common-lisp:cons "UserPoolId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'group-name))
      (common-lisp:list
       (common-lisp:cons "GroupName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'limit))
      (common-lisp:list
       (common-lisp:cons "Limit"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-users-in-group-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-users-in-group-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-users-in-group-response-"))
   (users common-lisp:nil :type
    (common-lisp:or users-list-type common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or pagination-key common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-users-in-group-response
                    'make-list-users-in-group-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-users-in-group-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-users-in-group-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'users))
      (common-lisp:list
       (common-lisp:cons "Users"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-users-in-group-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-users-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-users-request-"))
   (user-pool-id (common-lisp:error ":user-pool-id is required") :type
    (common-lisp:or user-pool-id-type common-lisp:null))
   (attributes-to-get common-lisp:nil :type
    (common-lisp:or searched-attribute-names-list-type common-lisp:null))
   (limit common-lisp:nil :type
    (common-lisp:or query-limit-type common-lisp:null))
   (pagination-token common-lisp:nil :type
    (common-lisp:or search-pagination-token-type common-lisp:null))
   (filter common-lisp:nil :type
    (common-lisp:or user-filter-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-users-request 'make-list-users-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input list-users-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input list-users-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'user-pool-id))
      (common-lisp:list
       (common-lisp:cons "UserPoolId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'attributes-to-get))
      (common-lisp:list
       (common-lisp:cons "AttributesToGet"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'limit))
      (common-lisp:list
       (common-lisp:cons "Limit"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'pagination-token))
      (common-lisp:list
       (common-lisp:cons "PaginationToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'filter))
      (common-lisp:list
       (common-lisp:cons "Filter"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input list-users-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-users-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-users-response-"))
   (users common-lisp:nil :type
    (common-lisp:or users-list-type common-lisp:null))
   (pagination-token common-lisp:nil :type
    (common-lisp:or search-pagination-token-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-users-response 'make-list-users-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input list-users-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input list-users-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'users))
      (common-lisp:list
       (common-lisp:cons "Users"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'pagination-token))
      (common-lisp:list
       (common-lisp:cons "PaginationToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input list-users-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype logout-urls-list-type ()
   '(trivial-types:proper-list redirect-url-type))
 (common-lisp:defun |make-logout-urls-list-type|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list redirect-url-type))
   aws-sdk/generator/shape::members))
(common-lisp:deftype long-type () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:define-condition mfamethod-not-found-exception
     (cognito-idp-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       mfamethod-not-found-exception-message)))
 (common-lisp:export
  (common-lisp:list 'mfamethod-not-found-exception
                    'mfamethod-not-found-exception-message)))
(common-lisp:progn
 (common-lisp:deftype mfaoption-list-type ()
   '(trivial-types:proper-list mfaoption-type))
 (common-lisp:defun |make-mfaoption-list-type|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list mfaoption-type))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (mfaoption-type (:copier common-lisp:nil)
      (:conc-name "struct-shape-mfaoption-type-"))
   (delivery-medium common-lisp:nil :type
    (common-lisp:or delivery-medium-type common-lisp:null))
   (attribute-name common-lisp:nil :type
    (common-lisp:or attribute-name-type common-lisp:null)))
 (common-lisp:export (common-lisp:list 'mfaoption-type 'make-mfaoption-type))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input mfaoption-type))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input mfaoption-type))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'delivery-medium))
      (common-lisp:list
       (common-lisp:cons "DeliveryMedium"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'attribute-name))
      (common-lisp:list
       (common-lisp:cons "AttributeName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input mfaoption-type))
   common-lisp:nil))
(common-lisp:deftype message-action-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (message-template-type (:copier common-lisp:nil)
      (:conc-name "struct-shape-message-template-type-"))
   (smsmessage common-lisp:nil :type
    (common-lisp:or sms-verification-message-type common-lisp:null))
   (email-message common-lisp:nil :type
    (common-lisp:or email-verification-message-type common-lisp:null))
   (email-subject common-lisp:nil :type
    (common-lisp:or email-verification-subject-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'message-template-type 'make-message-template-type))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          message-template-type))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          message-template-type))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'smsmessage))
      (common-lisp:list
       (common-lisp:cons "SMSMessage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'email-message))
      (common-lisp:list
       (common-lisp:cons "EmailMessage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'email-subject))
      (common-lisp:list
       (common-lisp:cons "EmailSubject"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          message-template-type))
   common-lisp:nil))
(common-lisp:deftype message-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (new-device-metadata-type (:copier common-lisp:nil)
      (:conc-name "struct-shape-new-device-metadata-type-"))
   (device-key common-lisp:nil :type
    (common-lisp:or device-key-type common-lisp:null))
   (device-group-key common-lisp:nil :type
    (common-lisp:or string-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'new-device-metadata-type 'make-new-device-metadata-type))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          new-device-metadata-type))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          new-device-metadata-type))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'device-key))
      (common-lisp:list
       (common-lisp:cons "DeviceKey"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'device-group-key))
      (common-lisp:list
       (common-lisp:cons "DeviceGroupKey"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          new-device-metadata-type))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:define-condition not-authorized-exception
     (cognito-idp-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       not-authorized-exception-message)))
 (common-lisp:export
  (common-lisp:list 'not-authorized-exception
                    'not-authorized-exception-message)))
(common-lisp:progn
 (common-lisp:defstruct
     (number-attribute-constraints-type (:copier common-lisp:nil)
      (:conc-name "struct-shape-number-attribute-constraints-type-"))
   (min-value common-lisp:nil :type
    (common-lisp:or string-type common-lisp:null))
   (max-value common-lisp:nil :type
    (common-lisp:or string-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'number-attribute-constraints-type
                    'make-number-attribute-constraints-type))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          number-attribute-constraints-type))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          number-attribute-constraints-type))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'min-value))
      (common-lisp:list
       (common-lisp:cons "MinValue"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-value))
      (common-lisp:list
       (common-lisp:cons "MaxValue"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          number-attribute-constraints-type))
   common-lisp:nil))
(common-lisp:deftype oauth-flow-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype oauth-flows-type ()
   '(trivial-types:proper-list oauth-flow-type))
 (common-lisp:defun |make-oauth-flows-type|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list oauth-flow-type))
   aws-sdk/generator/shape::members))
(common-lisp:deftype pagination-key () 'common-lisp:string)
(common-lisp:deftype pagination-key-type () 'common-lisp:string)
(common-lisp:deftype password-policy-min-length-type () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:defstruct
     (password-policy-type (:copier common-lisp:nil)
      (:conc-name "struct-shape-password-policy-type-"))
   (minimum-length common-lisp:nil :type
    (common-lisp:or password-policy-min-length-type common-lisp:null))
   (require-uppercase common-lisp:nil :type
    (common-lisp:or boolean-type common-lisp:null))
   (require-lowercase common-lisp:nil :type
    (common-lisp:or boolean-type common-lisp:null))
   (require-numbers common-lisp:nil :type
    (common-lisp:or boolean-type common-lisp:null))
   (require-symbols common-lisp:nil :type
    (common-lisp:or boolean-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'password-policy-type 'make-password-policy-type))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input password-policy-type))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input password-policy-type))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'minimum-length))
      (common-lisp:list
       (common-lisp:cons "MinimumLength"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'require-uppercase))
      (common-lisp:list
       (common-lisp:cons "RequireUppercase"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'require-lowercase))
      (common-lisp:list
       (common-lisp:cons "RequireLowercase"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'require-numbers))
      (common-lisp:list
       (common-lisp:cons "RequireNumbers"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'require-symbols))
      (common-lisp:list
       (common-lisp:cons "RequireSymbols"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input password-policy-type))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:define-condition password-reset-required-exception
     (cognito-idp-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       password-reset-required-exception-message)))
 (common-lisp:export
  (common-lisp:list 'password-reset-required-exception
                    'password-reset-required-exception-message)))
(common-lisp:deftype password-type () 'common-lisp:string)
(common-lisp:deftype pool-query-limit-type () 'common-lisp:integer)
(common-lisp:deftype pre-signed-url-type () 'common-lisp:string)
(common-lisp:deftype precedence-type () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:define-condition precondition-not-met-exception
     (cognito-idp-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       precondition-not-met-exception-message)))
 (common-lisp:export
  (common-lisp:list 'precondition-not-met-exception
                    'precondition-not-met-exception-message)))
(common-lisp:progn
 (common-lisp:defstruct
     (provider-description (:copier common-lisp:nil)
      (:conc-name "struct-shape-provider-description-"))
   (provider-name common-lisp:nil :type
    (common-lisp:or provider-name-type common-lisp:null))
   (provider-type common-lisp:nil :type
    (common-lisp:or identity-provider-type-type common-lisp:null))
   (last-modified-date common-lisp:nil :type
    (common-lisp:or date-type common-lisp:null))
   (creation-date common-lisp:nil :type
    (common-lisp:or date-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'provider-description 'make-provider-description))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input provider-description))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input provider-description))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'provider-name))
      (common-lisp:list
       (common-lisp:cons "ProviderName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'provider-type))
      (common-lisp:list
       (common-lisp:cons "ProviderType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'last-modified-date))
      (common-lisp:list
       (common-lisp:cons "LastModifiedDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'creation-date))
      (common-lisp:list
       (common-lisp:cons "CreationDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input provider-description))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype provider-details-type () 'common-lisp:hash-table)
 (common-lisp:defun |make-provider-details-type|
                    (aws-sdk/generator/shape::key-values)
   (common-lisp:etypecase aws-sdk/generator/shape::key-values
     (common-lisp:hash-table aws-sdk/generator/shape::key-values)
     (common-lisp:list
      (alexandria:alist-hash-table aws-sdk/generator/shape::key-values)))))
(common-lisp:deftype provider-name-type () 'common-lisp:string)
(common-lisp:deftype provider-name-type-v1 () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (provider-user-identifier-type (:copier common-lisp:nil)
      (:conc-name "struct-shape-provider-user-identifier-type-"))
   (provider-name common-lisp:nil :type
    (common-lisp:or provider-name-type common-lisp:null))
   (provider-attribute-name common-lisp:nil :type
    (common-lisp:or string-type common-lisp:null))
   (provider-attribute-value common-lisp:nil :type
    (common-lisp:or string-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'provider-user-identifier-type
                    'make-provider-user-identifier-type))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          provider-user-identifier-type))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          provider-user-identifier-type))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'provider-name))
      (common-lisp:list
       (common-lisp:cons "ProviderName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'provider-attribute-name))
      (common-lisp:list
       (common-lisp:cons "ProviderAttributeName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'provider-attribute-value))
      (common-lisp:list
       (common-lisp:cons "ProviderAttributeValue"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          provider-user-identifier-type))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype providers-list-type ()
   '(trivial-types:proper-list provider-description))
 (common-lisp:defun |make-providers-list-type|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list provider-description))
   aws-sdk/generator/shape::members))
(common-lisp:deftype query-limit () 'common-lisp:integer)
(common-lisp:deftype query-limit-type () 'common-lisp:integer)
(common-lisp:deftype redirect-url-type () 'common-lisp:string)
(common-lisp:deftype refresh-token-validity-type () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:defstruct
     (resend-confirmation-code-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-resend-confirmation-code-request-"))
   (client-id (common-lisp:error ":client-id is required") :type
    (common-lisp:or client-id-type common-lisp:null))
   (secret-hash common-lisp:nil :type
    (common-lisp:or secret-hash-type common-lisp:null))
   (username (common-lisp:error ":username is required") :type
    (common-lisp:or username-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'resend-confirmation-code-request
                    'make-resend-confirmation-code-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          resend-confirmation-code-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          resend-confirmation-code-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'client-id))
      (common-lisp:list
       (common-lisp:cons "ClientId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'secret-hash))
      (common-lisp:list
       (common-lisp:cons "SecretHash"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'username))
      (common-lisp:list
       (common-lisp:cons "Username"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          resend-confirmation-code-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (resend-confirmation-code-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-resend-confirmation-code-response-"))
   (code-delivery-details common-lisp:nil :type
    (common-lisp:or code-delivery-details-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'resend-confirmation-code-response
                    'make-resend-confirmation-code-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          resend-confirmation-code-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          resend-confirmation-code-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'code-delivery-details))
      (common-lisp:list
       (common-lisp:cons "CodeDeliveryDetails"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          resend-confirmation-code-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:define-condition resource-not-found-exception
     (cognito-idp-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       resource-not-found-exception-message)))
 (common-lisp:export
  (common-lisp:list 'resource-not-found-exception
                    'resource-not-found-exception-message)))
(common-lisp:deftype resource-server-identifier-type () 'common-lisp:string)
(common-lisp:deftype resource-server-name-type () 'common-lisp:string)
(common-lisp:deftype resource-server-scope-description-type ()
  'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype resource-server-scope-list-type ()
   '(trivial-types:proper-list resource-server-scope-type))
 (common-lisp:defun |make-resource-server-scope-list-type|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            resource-server-scope-type))
   aws-sdk/generator/shape::members))
(common-lisp:deftype resource-server-scope-name-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (resource-server-scope-type (:copier common-lisp:nil)
      (:conc-name "struct-shape-resource-server-scope-type-"))
   (scope-name (common-lisp:error ":scope-name is required") :type
    (common-lisp:or resource-server-scope-name-type common-lisp:null))
   (scope-description (common-lisp:error ":scope-description is required")
    :type
    (common-lisp:or resource-server-scope-description-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'resource-server-scope-type
                    'make-resource-server-scope-type))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          resource-server-scope-type))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          resource-server-scope-type))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'scope-name))
      (common-lisp:list
       (common-lisp:cons "ScopeName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'scope-description))
      (common-lisp:list
       (common-lisp:cons "ScopeDescription"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          resource-server-scope-type))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (resource-server-type (:copier common-lisp:nil)
      (:conc-name "struct-shape-resource-server-type-"))
   (user-pool-id common-lisp:nil :type
    (common-lisp:or user-pool-id-type common-lisp:null))
   (identifier common-lisp:nil :type
    (common-lisp:or resource-server-identifier-type common-lisp:null))
   (name common-lisp:nil :type
    (common-lisp:or resource-server-name-type common-lisp:null))
   (scopes common-lisp:nil :type
    (common-lisp:or resource-server-scope-list-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'resource-server-type 'make-resource-server-type))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input resource-server-type))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input resource-server-type))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'user-pool-id))
      (common-lisp:list
       (common-lisp:cons "UserPoolId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'identifier))
      (common-lisp:list
       (common-lisp:cons "Identifier"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'scopes))
      (common-lisp:list
       (common-lisp:cons "Scopes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input resource-server-type))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype resource-servers-list-type ()
   '(trivial-types:proper-list resource-server-type))
 (common-lisp:defun |make-resource-servers-list-type|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list resource-server-type))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (respond-to-auth-challenge-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-respond-to-auth-challenge-request-"))
   (client-id (common-lisp:error ":client-id is required") :type
    (common-lisp:or client-id-type common-lisp:null))
   (challenge-name (common-lisp:error ":challenge-name is required") :type
    (common-lisp:or challenge-name-type common-lisp:null))
   (session common-lisp:nil :type
    (common-lisp:or session-type common-lisp:null))
   (challenge-responses common-lisp:nil :type
    (common-lisp:or challenge-responses-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'respond-to-auth-challenge-request
                    'make-respond-to-auth-challenge-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          respond-to-auth-challenge-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          respond-to-auth-challenge-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'client-id))
      (common-lisp:list
       (common-lisp:cons "ClientId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'challenge-name))
      (common-lisp:list
       (common-lisp:cons "ChallengeName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'session))
      (common-lisp:list
       (common-lisp:cons "Session"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'challenge-responses))
      (common-lisp:list
       (common-lisp:cons "ChallengeResponses"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          respond-to-auth-challenge-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (respond-to-auth-challenge-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-respond-to-auth-challenge-response-"))
   (challenge-name common-lisp:nil :type
    (common-lisp:or challenge-name-type common-lisp:null))
   (session common-lisp:nil :type
    (common-lisp:or session-type common-lisp:null))
   (challenge-parameters common-lisp:nil :type
    (common-lisp:or challenge-parameters-type common-lisp:null))
   (authentication-result common-lisp:nil :type
    (common-lisp:or authentication-result-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'respond-to-auth-challenge-response
                    'make-respond-to-auth-challenge-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          respond-to-auth-challenge-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          respond-to-auth-challenge-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'challenge-name))
      (common-lisp:list
       (common-lisp:cons "ChallengeName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'session))
      (common-lisp:list
       (common-lisp:cons "Session"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'challenge-parameters))
      (common-lisp:list
       (common-lisp:cons "ChallengeParameters"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'authentication-result))
      (common-lisp:list
       (common-lisp:cons "AuthenticationResult"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          respond-to-auth-challenge-response))
   common-lisp:nil))
(common-lisp:deftype s3bucket-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (schema-attribute-type (:copier common-lisp:nil)
      (:conc-name "struct-shape-schema-attribute-type-"))
   (name common-lisp:nil :type
    (common-lisp:or custom-attribute-name-type common-lisp:null))
   (attribute-data-type common-lisp:nil :type
    (common-lisp:or attribute-data-type common-lisp:null))
   (developer-only-attribute common-lisp:nil :type
    (common-lisp:or boolean-type common-lisp:null))
   (mutable common-lisp:nil :type
    (common-lisp:or boolean-type common-lisp:null))
   (required common-lisp:nil :type
    (common-lisp:or boolean-type common-lisp:null))
   (number-attribute-constraints common-lisp:nil :type
    (common-lisp:or number-attribute-constraints-type common-lisp:null))
   (string-attribute-constraints common-lisp:nil :type
    (common-lisp:or string-attribute-constraints-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'schema-attribute-type 'make-schema-attribute-type))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          schema-attribute-type))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          schema-attribute-type))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'attribute-data-type))
      (common-lisp:list
       (common-lisp:cons "AttributeDataType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'developer-only-attribute))
      (common-lisp:list
       (common-lisp:cons "DeveloperOnlyAttribute"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'mutable))
      (common-lisp:list
       (common-lisp:cons "Mutable"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'required))
      (common-lisp:list
       (common-lisp:cons "Required"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'number-attribute-constraints))
      (common-lisp:list
       (common-lisp:cons "NumberAttributeConstraints"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'string-attribute-constraints))
      (common-lisp:list
       (common-lisp:cons "StringAttributeConstraints"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          schema-attribute-type))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype schema-attributes-list-type ()
   '(trivial-types:proper-list schema-attribute-type))
 (common-lisp:defun |make-schema-attributes-list-type|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list schema-attribute-type))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:define-condition scope-does-not-exist-exception
     (cognito-idp-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       scope-does-not-exist-exception-message)))
 (common-lisp:export
  (common-lisp:list 'scope-does-not-exist-exception
                    'scope-does-not-exist-exception-message)))
(common-lisp:progn
 (common-lisp:deftype scope-list-type ()
   '(trivial-types:proper-list scope-type))
 (common-lisp:defun |make-scope-list-type|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list scope-type))
   aws-sdk/generator/shape::members))
(common-lisp:deftype scope-type () 'common-lisp:string)
(common-lisp:deftype search-pagination-token-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype searched-attribute-names-list-type ()
   '(trivial-types:proper-list attribute-name-type))
 (common-lisp:defun |make-searched-attribute-names-list-type|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list attribute-name-type))
   aws-sdk/generator/shape::members))
(common-lisp:deftype secret-hash-type () 'common-lisp:string)
(common-lisp:deftype session-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (set-uicustomization-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-set-uicustomization-request-"))
   (user-pool-id (common-lisp:error ":user-pool-id is required") :type
    (common-lisp:or user-pool-id-type common-lisp:null))
   (client-id common-lisp:nil :type
    (common-lisp:or client-id-type common-lisp:null))
   (css common-lisp:nil :type (common-lisp:or csstype common-lisp:null))
   (image-file common-lisp:nil :type
    (common-lisp:or image-file-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'set-uicustomization-request
                    'make-set-uicustomization-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          set-uicustomization-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          set-uicustomization-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'user-pool-id))
      (common-lisp:list
       (common-lisp:cons "UserPoolId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'client-id))
      (common-lisp:list
       (common-lisp:cons "ClientId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'css))
      (common-lisp:list
       (common-lisp:cons "CSS"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'image-file))
      (common-lisp:list
       (common-lisp:cons "ImageFile"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          set-uicustomization-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (set-uicustomization-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-set-uicustomization-response-"))
   (uicustomization (common-lisp:error ":uicustomization is required") :type
    (common-lisp:or uicustomization-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'set-uicustomization-response
                    'make-set-uicustomization-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          set-uicustomization-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          set-uicustomization-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'uicustomization))
      (common-lisp:list
       (common-lisp:cons "UICustomization"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          set-uicustomization-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (set-user-settings-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-set-user-settings-request-"))
   (access-token (common-lisp:error ":access-token is required") :type
    (common-lisp:or token-model-type common-lisp:null))
   (mfaoptions (common-lisp:error ":mfaoptions is required") :type
    (common-lisp:or mfaoption-list-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'set-user-settings-request
                    'make-set-user-settings-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          set-user-settings-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          set-user-settings-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'access-token))
      (common-lisp:list
       (common-lisp:cons "AccessToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'mfaoptions))
      (common-lisp:list
       (common-lisp:cons "MFAOptions"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          set-user-settings-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (set-user-settings-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-set-user-settings-response-")))
 (common-lisp:export
  (common-lisp:list 'set-user-settings-response
                    'make-set-user-settings-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          set-user-settings-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          set-user-settings-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          set-user-settings-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (sign-up-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-sign-up-request-"))
   (client-id (common-lisp:error ":client-id is required") :type
    (common-lisp:or client-id-type common-lisp:null))
   (secret-hash common-lisp:nil :type
    (common-lisp:or secret-hash-type common-lisp:null))
   (username (common-lisp:error ":username is required") :type
    (common-lisp:or username-type common-lisp:null))
   (password (common-lisp:error ":password is required") :type
    (common-lisp:or password-type common-lisp:null))
   (user-attributes common-lisp:nil :type
    (common-lisp:or attribute-list-type common-lisp:null))
   (validation-data common-lisp:nil :type
    (common-lisp:or attribute-list-type common-lisp:null)))
 (common-lisp:export (common-lisp:list 'sign-up-request 'make-sign-up-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input sign-up-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input sign-up-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'client-id))
      (common-lisp:list
       (common-lisp:cons "ClientId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'secret-hash))
      (common-lisp:list
       (common-lisp:cons "SecretHash"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'username))
      (common-lisp:list
       (common-lisp:cons "Username"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'password))
      (common-lisp:list
       (common-lisp:cons "Password"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'user-attributes))
      (common-lisp:list
       (common-lisp:cons "UserAttributes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'validation-data))
      (common-lisp:list
       (common-lisp:cons "ValidationData"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input sign-up-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (sign-up-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-sign-up-response-"))
   (user-confirmed (common-lisp:error ":user-confirmed is required") :type
    (common-lisp:or boolean-type common-lisp:null))
   (code-delivery-details common-lisp:nil :type
    (common-lisp:or code-delivery-details-type common-lisp:null))
   (user-sub (common-lisp:error ":user-sub is required") :type
    (common-lisp:or string-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'sign-up-response 'make-sign-up-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input sign-up-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input sign-up-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'user-confirmed))
      (common-lisp:list
       (common-lisp:cons "UserConfirmed"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'code-delivery-details))
      (common-lisp:list
       (common-lisp:cons "CodeDeliveryDetails"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'user-sub))
      (common-lisp:list
       (common-lisp:cons "UserSub"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input sign-up-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (sms-configuration-type (:copier common-lisp:nil)
      (:conc-name "struct-shape-sms-configuration-type-"))
   (sns-caller-arn (common-lisp:error ":sns-caller-arn is required") :type
    (common-lisp:or arn-type common-lisp:null))
   (external-id common-lisp:nil :type
    (common-lisp:or string-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'sms-configuration-type 'make-sms-configuration-type))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          sms-configuration-type))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          sms-configuration-type))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'sns-caller-arn))
      (common-lisp:list
       (common-lisp:cons "SnsCallerArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'external-id))
      (common-lisp:list
       (common-lisp:cons "ExternalId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          sms-configuration-type))
   common-lisp:nil))
(common-lisp:deftype sms-verification-message-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (start-user-import-job-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-start-user-import-job-request-"))
   (user-pool-id (common-lisp:error ":user-pool-id is required") :type
    (common-lisp:or user-pool-id-type common-lisp:null))
   (job-id (common-lisp:error ":job-id is required") :type
    (common-lisp:or user-import-job-id-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'start-user-import-job-request
                    'make-start-user-import-job-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          start-user-import-job-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          start-user-import-job-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'user-pool-id))
      (common-lisp:list
       (common-lisp:cons "UserPoolId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-id))
      (common-lisp:list
       (common-lisp:cons "JobId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          start-user-import-job-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (start-user-import-job-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-start-user-import-job-response-"))
   (user-import-job common-lisp:nil :type
    (common-lisp:or user-import-job-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'start-user-import-job-response
                    'make-start-user-import-job-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          start-user-import-job-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          start-user-import-job-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'user-import-job))
      (common-lisp:list
       (common-lisp:cons "UserImportJob"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          start-user-import-job-response))
   common-lisp:nil))
(common-lisp:deftype status-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (stop-user-import-job-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-stop-user-import-job-request-"))
   (user-pool-id (common-lisp:error ":user-pool-id is required") :type
    (common-lisp:or user-pool-id-type common-lisp:null))
   (job-id (common-lisp:error ":job-id is required") :type
    (common-lisp:or user-import-job-id-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'stop-user-import-job-request
                    'make-stop-user-import-job-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          stop-user-import-job-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          stop-user-import-job-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'user-pool-id))
      (common-lisp:list
       (common-lisp:cons "UserPoolId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-id))
      (common-lisp:list
       (common-lisp:cons "JobId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          stop-user-import-job-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (stop-user-import-job-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-stop-user-import-job-response-"))
   (user-import-job common-lisp:nil :type
    (common-lisp:or user-import-job-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'stop-user-import-job-response
                    'make-stop-user-import-job-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          stop-user-import-job-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          stop-user-import-job-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'user-import-job))
      (common-lisp:list
       (common-lisp:cons "UserImportJob"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          stop-user-import-job-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (string-attribute-constraints-type (:copier common-lisp:nil)
      (:conc-name "struct-shape-string-attribute-constraints-type-"))
   (min-length common-lisp:nil :type
    (common-lisp:or string-type common-lisp:null))
   (max-length common-lisp:nil :type
    (common-lisp:or string-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'string-attribute-constraints-type
                    'make-string-attribute-constraints-type))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          string-attribute-constraints-type))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          string-attribute-constraints-type))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'min-length))
      (common-lisp:list
       (common-lisp:cons "MinLength"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-length))
      (common-lisp:list
       (common-lisp:cons "MaxLength"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          string-attribute-constraints-type))
   common-lisp:nil))
(common-lisp:deftype string-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype supported-identity-providers-list-type ()
   '(trivial-types:proper-list provider-name-type))
 (common-lisp:defun |make-supported-identity-providers-list-type|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list provider-name-type))
   aws-sdk/generator/shape::members))
(common-lisp:deftype token-model-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:define-condition too-many-failed-attempts-exception
     (cognito-idp-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       too-many-failed-attempts-exception-message)))
 (common-lisp:export
  (common-lisp:list 'too-many-failed-attempts-exception
                    'too-many-failed-attempts-exception-message)))
(common-lisp:progn
 (common-lisp:define-condition too-many-requests-exception
     (cognito-idp-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       too-many-requests-exception-message)))
 (common-lisp:export
  (common-lisp:list 'too-many-requests-exception
                    'too-many-requests-exception-message)))
(common-lisp:progn
 (common-lisp:defstruct
     (uicustomization-type (:copier common-lisp:nil)
      (:conc-name "struct-shape-uicustomization-type-"))
   (user-pool-id common-lisp:nil :type
    (common-lisp:or user-pool-id-type common-lisp:null))
   (client-id common-lisp:nil :type
    (common-lisp:or client-id-type common-lisp:null))
   (image-url common-lisp:nil :type
    (common-lisp:or image-url-type common-lisp:null))
   (css common-lisp:nil :type (common-lisp:or csstype common-lisp:null))
   (cssversion common-lisp:nil :type
    (common-lisp:or cssversion-type common-lisp:null))
   (last-modified-date common-lisp:nil :type
    (common-lisp:or date-type common-lisp:null))
   (creation-date common-lisp:nil :type
    (common-lisp:or date-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'uicustomization-type 'make-uicustomization-type))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input uicustomization-type))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input uicustomization-type))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'user-pool-id))
      (common-lisp:list
       (common-lisp:cons "UserPoolId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'client-id))
      (common-lisp:list
       (common-lisp:cons "ClientId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'image-url))
      (common-lisp:list
       (common-lisp:cons "ImageUrl"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'css))
      (common-lisp:list
       (common-lisp:cons "CSS"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'cssversion))
      (common-lisp:list
       (common-lisp:cons "CSSVersion"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'last-modified-date))
      (common-lisp:list
       (common-lisp:cons "LastModifiedDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'creation-date))
      (common-lisp:list
       (common-lisp:cons "CreationDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input uicustomization-type))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:define-condition unexpected-lambda-exception
     (cognito-idp-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       unexpected-lambda-exception-message)))
 (common-lisp:export
  (common-lisp:list 'unexpected-lambda-exception
                    'unexpected-lambda-exception-message)))
(common-lisp:progn
 (common-lisp:define-condition unsupported-identity-provider-exception
     (cognito-idp-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       unsupported-identity-provider-exception-message)))
 (common-lisp:export
  (common-lisp:list 'unsupported-identity-provider-exception
                    'unsupported-identity-provider-exception-message)))
(common-lisp:progn
 (common-lisp:define-condition unsupported-user-state-exception
     (cognito-idp-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       unsupported-user-state-exception-message)))
 (common-lisp:export
  (common-lisp:list 'unsupported-user-state-exception
                    'unsupported-user-state-exception-message)))
(common-lisp:progn
 (common-lisp:defstruct
     (update-device-status-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-device-status-request-"))
   (access-token (common-lisp:error ":access-token is required") :type
    (common-lisp:or token-model-type common-lisp:null))
   (device-key (common-lisp:error ":device-key is required") :type
    (common-lisp:or device-key-type common-lisp:null))
   (device-remembered-status common-lisp:nil :type
    (common-lisp:or device-remembered-status-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-device-status-request
                    'make-update-device-status-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-device-status-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-device-status-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'access-token))
      (common-lisp:list
       (common-lisp:cons "AccessToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'device-key))
      (common-lisp:list
       (common-lisp:cons "DeviceKey"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'device-remembered-status))
      (common-lisp:list
       (common-lisp:cons "DeviceRememberedStatus"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-device-status-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-device-status-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-device-status-response-")))
 (common-lisp:export
  (common-lisp:list 'update-device-status-response
                    'make-update-device-status-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-device-status-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-device-status-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-device-status-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-group-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-group-request-"))
   (group-name (common-lisp:error ":group-name is required") :type
    (common-lisp:or group-name-type common-lisp:null))
   (user-pool-id (common-lisp:error ":user-pool-id is required") :type
    (common-lisp:or user-pool-id-type common-lisp:null))
   (description common-lisp:nil :type
    (common-lisp:or description-type common-lisp:null))
   (role-arn common-lisp:nil :type (common-lisp:or arn-type common-lisp:null))
   (precedence common-lisp:nil :type
    (common-lisp:or precedence-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-group-request 'make-update-group-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input update-group-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input update-group-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'group-name))
      (common-lisp:list
       (common-lisp:cons "GroupName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'user-pool-id))
      (common-lisp:list
       (common-lisp:cons "UserPoolId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'role-arn))
      (common-lisp:list
       (common-lisp:cons "RoleArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'precedence))
      (common-lisp:list
       (common-lisp:cons "Precedence"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input update-group-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-group-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-group-response-"))
   (group common-lisp:nil :type (common-lisp:or group-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-group-response 'make-update-group-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-group-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-group-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'group))
      (common-lisp:list
       (common-lisp:cons "Group"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-group-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-identity-provider-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-identity-provider-request-"))
   (user-pool-id (common-lisp:error ":user-pool-id is required") :type
    (common-lisp:or user-pool-id-type common-lisp:null))
   (provider-name (common-lisp:error ":provider-name is required") :type
    (common-lisp:or provider-name-type common-lisp:null))
   (provider-details common-lisp:nil :type
    (common-lisp:or provider-details-type common-lisp:null))
   (attribute-mapping common-lisp:nil :type
    (common-lisp:or attribute-mapping-type common-lisp:null))
   (idp-identifiers common-lisp:nil :type
    (common-lisp:or idp-identifiers-list-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-identity-provider-request
                    'make-update-identity-provider-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-identity-provider-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-identity-provider-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'user-pool-id))
      (common-lisp:list
       (common-lisp:cons "UserPoolId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'provider-name))
      (common-lisp:list
       (common-lisp:cons "ProviderName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'provider-details))
      (common-lisp:list
       (common-lisp:cons "ProviderDetails"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'attribute-mapping))
      (common-lisp:list
       (common-lisp:cons "AttributeMapping"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'idp-identifiers))
      (common-lisp:list
       (common-lisp:cons "IdpIdentifiers"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-identity-provider-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-identity-provider-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-identity-provider-response-"))
   (identity-provider (common-lisp:error ":identity-provider is required")
    :type (common-lisp:or identity-provider-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-identity-provider-response
                    'make-update-identity-provider-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-identity-provider-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-identity-provider-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'identity-provider))
      (common-lisp:list
       (common-lisp:cons "IdentityProvider"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-identity-provider-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-resource-server-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-resource-server-request-"))
   (user-pool-id (common-lisp:error ":user-pool-id is required") :type
    (common-lisp:or user-pool-id-type common-lisp:null))
   (identifier (common-lisp:error ":identifier is required") :type
    (common-lisp:or resource-server-identifier-type common-lisp:null))
   (name (common-lisp:error ":name is required") :type
    (common-lisp:or resource-server-name-type common-lisp:null))
   (scopes common-lisp:nil :type
    (common-lisp:or resource-server-scope-list-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-resource-server-request
                    'make-update-resource-server-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-resource-server-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-resource-server-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'user-pool-id))
      (common-lisp:list
       (common-lisp:cons "UserPoolId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'identifier))
      (common-lisp:list
       (common-lisp:cons "Identifier"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'scopes))
      (common-lisp:list
       (common-lisp:cons "Scopes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-resource-server-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-resource-server-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-resource-server-response-"))
   (resource-server (common-lisp:error ":resource-server is required") :type
    (common-lisp:or resource-server-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-resource-server-response
                    'make-update-resource-server-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-resource-server-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-resource-server-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-server))
      (common-lisp:list
       (common-lisp:cons "ResourceServer"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-resource-server-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-user-attributes-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-user-attributes-request-"))
   (user-attributes (common-lisp:error ":user-attributes is required") :type
    (common-lisp:or attribute-list-type common-lisp:null))
   (access-token (common-lisp:error ":access-token is required") :type
    (common-lisp:or token-model-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-user-attributes-request
                    'make-update-user-attributes-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-user-attributes-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-user-attributes-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'user-attributes))
      (common-lisp:list
       (common-lisp:cons "UserAttributes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'access-token))
      (common-lisp:list
       (common-lisp:cons "AccessToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-user-attributes-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-user-attributes-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-user-attributes-response-"))
   (code-delivery-details-list common-lisp:nil :type
    (common-lisp:or code-delivery-details-list-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-user-attributes-response
                    'make-update-user-attributes-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-user-attributes-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-user-attributes-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'code-delivery-details-list))
      (common-lisp:list
       (common-lisp:cons "CodeDeliveryDetailsList"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-user-attributes-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-user-pool-client-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-user-pool-client-request-"))
   (user-pool-id (common-lisp:error ":user-pool-id is required") :type
    (common-lisp:or user-pool-id-type common-lisp:null))
   (client-id (common-lisp:error ":client-id is required") :type
    (common-lisp:or client-id-type common-lisp:null))
   (client-name common-lisp:nil :type
    (common-lisp:or client-name-type common-lisp:null))
   (refresh-token-validity common-lisp:nil :type
    (common-lisp:or refresh-token-validity-type common-lisp:null))
   (read-attributes common-lisp:nil :type
    (common-lisp:or client-permission-list-type common-lisp:null))
   (write-attributes common-lisp:nil :type
    (common-lisp:or client-permission-list-type common-lisp:null))
   (explicit-auth-flows common-lisp:nil :type
    (common-lisp:or explicit-auth-flows-list-type common-lisp:null))
   (supported-identity-providers common-lisp:nil :type
    (common-lisp:or supported-identity-providers-list-type common-lisp:null))
   (callback-urls common-lisp:nil :type
    (common-lisp:or callback-urls-list-type common-lisp:null))
   (logout-urls common-lisp:nil :type
    (common-lisp:or logout-urls-list-type common-lisp:null))
   (default-redirect-uri common-lisp:nil :type
    (common-lisp:or redirect-url-type common-lisp:null))
   (allowed-oauth-flows common-lisp:nil :type
    (common-lisp:or oauth-flows-type common-lisp:null))
   (allowed-oauth-scopes common-lisp:nil :type
    (common-lisp:or scope-list-type common-lisp:null))
   (allowed-oauth-flows-user-pool-client common-lisp:nil :type
    (common-lisp:or boolean-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-user-pool-client-request
                    'make-update-user-pool-client-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-user-pool-client-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-user-pool-client-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'user-pool-id))
      (common-lisp:list
       (common-lisp:cons "UserPoolId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'client-id))
      (common-lisp:list
       (common-lisp:cons "ClientId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'client-name))
      (common-lisp:list
       (common-lisp:cons "ClientName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'refresh-token-validity))
      (common-lisp:list
       (common-lisp:cons "RefreshTokenValidity"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'read-attributes))
      (common-lisp:list
       (common-lisp:cons "ReadAttributes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'write-attributes))
      (common-lisp:list
       (common-lisp:cons "WriteAttributes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'explicit-auth-flows))
      (common-lisp:list
       (common-lisp:cons "ExplicitAuthFlows"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'supported-identity-providers))
      (common-lisp:list
       (common-lisp:cons "SupportedIdentityProviders"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'callback-urls))
      (common-lisp:list
       (common-lisp:cons "CallbackURLs"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'logout-urls))
      (common-lisp:list
       (common-lisp:cons "LogoutURLs"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'default-redirect-uri))
      (common-lisp:list
       (common-lisp:cons "DefaultRedirectURI"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'allowed-oauth-flows))
      (common-lisp:list
       (common-lisp:cons "AllowedOAuthFlows"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'allowed-oauth-scopes))
      (common-lisp:list
       (common-lisp:cons "AllowedOAuthScopes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'allowed-oauth-flows-user-pool-client))
      (common-lisp:list
       (common-lisp:cons "AllowedOAuthFlowsUserPoolClient"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-user-pool-client-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-user-pool-client-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-user-pool-client-response-"))
   (user-pool-client common-lisp:nil :type
    (common-lisp:or user-pool-client-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-user-pool-client-response
                    'make-update-user-pool-client-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-user-pool-client-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-user-pool-client-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'user-pool-client))
      (common-lisp:list
       (common-lisp:cons "UserPoolClient"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-user-pool-client-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-user-pool-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-user-pool-request-"))
   (user-pool-id (common-lisp:error ":user-pool-id is required") :type
    (common-lisp:or user-pool-id-type common-lisp:null))
   (policies common-lisp:nil :type
    (common-lisp:or user-pool-policy-type common-lisp:null))
   (lambda-config common-lisp:nil :type
    (common-lisp:or lambda-config-type common-lisp:null))
   (auto-verified-attributes common-lisp:nil :type
    (common-lisp:or verified-attributes-list-type common-lisp:null))
   (sms-verification-message common-lisp:nil :type
    (common-lisp:or sms-verification-message-type common-lisp:null))
   (email-verification-message common-lisp:nil :type
    (common-lisp:or email-verification-message-type common-lisp:null))
   (email-verification-subject common-lisp:nil :type
    (common-lisp:or email-verification-subject-type common-lisp:null))
   (verification-message-template common-lisp:nil :type
    (common-lisp:or verification-message-template-type common-lisp:null))
   (sms-authentication-message common-lisp:nil :type
    (common-lisp:or sms-verification-message-type common-lisp:null))
   (mfa-configuration common-lisp:nil :type
    (common-lisp:or user-pool-mfa-type common-lisp:null))
   (device-configuration common-lisp:nil :type
    (common-lisp:or device-configuration-type common-lisp:null))
   (email-configuration common-lisp:nil :type
    (common-lisp:or email-configuration-type common-lisp:null))
   (sms-configuration common-lisp:nil :type
    (common-lisp:or sms-configuration-type common-lisp:null))
   (user-pool-tags common-lisp:nil :type
    (common-lisp:or user-pool-tags-type common-lisp:null))
   (admin-create-user-config common-lisp:nil :type
    (common-lisp:or admin-create-user-config-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-user-pool-request 'make-update-user-pool-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-user-pool-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-user-pool-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'user-pool-id))
      (common-lisp:list
       (common-lisp:cons "UserPoolId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'policies))
      (common-lisp:list
       (common-lisp:cons "Policies"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'lambda-config))
      (common-lisp:list
       (common-lisp:cons "LambdaConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'auto-verified-attributes))
      (common-lisp:list
       (common-lisp:cons "AutoVerifiedAttributes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'sms-verification-message))
      (common-lisp:list
       (common-lisp:cons "SmsVerificationMessage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'email-verification-message))
      (common-lisp:list
       (common-lisp:cons "EmailVerificationMessage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'email-verification-subject))
      (common-lisp:list
       (common-lisp:cons "EmailVerificationSubject"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'verification-message-template))
      (common-lisp:list
       (common-lisp:cons "VerificationMessageTemplate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'sms-authentication-message))
      (common-lisp:list
       (common-lisp:cons "SmsAuthenticationMessage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'mfa-configuration))
      (common-lisp:list
       (common-lisp:cons "MfaConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'device-configuration))
      (common-lisp:list
       (common-lisp:cons "DeviceConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'email-configuration))
      (common-lisp:list
       (common-lisp:cons "EmailConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'sms-configuration))
      (common-lisp:list
       (common-lisp:cons "SmsConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'user-pool-tags))
      (common-lisp:list
       (common-lisp:cons "UserPoolTags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'admin-create-user-config))
      (common-lisp:list
       (common-lisp:cons "AdminCreateUserConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-user-pool-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-user-pool-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-user-pool-response-")))
 (common-lisp:export
  (common-lisp:list 'update-user-pool-response
                    'make-update-user-pool-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-user-pool-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-user-pool-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-user-pool-response))
   common-lisp:nil))
(common-lisp:deftype user-filter-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:define-condition user-import-in-progress-exception
     (cognito-idp-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       user-import-in-progress-exception-message)))
 (common-lisp:export
  (common-lisp:list 'user-import-in-progress-exception
                    'user-import-in-progress-exception-message)))
(common-lisp:deftype user-import-job-id-type () 'common-lisp:string)
(common-lisp:deftype user-import-job-name-type () 'common-lisp:string)
(common-lisp:deftype user-import-job-status-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (user-import-job-type (:copier common-lisp:nil)
      (:conc-name "struct-shape-user-import-job-type-"))
   (job-name common-lisp:nil :type
    (common-lisp:or user-import-job-name-type common-lisp:null))
   (job-id common-lisp:nil :type
    (common-lisp:or user-import-job-id-type common-lisp:null))
   (user-pool-id common-lisp:nil :type
    (common-lisp:or user-pool-id-type common-lisp:null))
   (pre-signed-url common-lisp:nil :type
    (common-lisp:or pre-signed-url-type common-lisp:null))
   (creation-date common-lisp:nil :type
    (common-lisp:or date-type common-lisp:null))
   (start-date common-lisp:nil :type
    (common-lisp:or date-type common-lisp:null))
   (completion-date common-lisp:nil :type
    (common-lisp:or date-type common-lisp:null))
   (status common-lisp:nil :type
    (common-lisp:or user-import-job-status-type common-lisp:null))
   (cloud-watch-logs-role-arn common-lisp:nil :type
    (common-lisp:or arn-type common-lisp:null))
   (imported-users common-lisp:nil :type
    (common-lisp:or long-type common-lisp:null))
   (skipped-users common-lisp:nil :type
    (common-lisp:or long-type common-lisp:null))
   (failed-users common-lisp:nil :type
    (common-lisp:or long-type common-lisp:null))
   (completion-message common-lisp:nil :type
    (common-lisp:or completion-message-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'user-import-job-type 'make-user-import-job-type))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input user-import-job-type))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input user-import-job-type))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-name))
      (common-lisp:list
       (common-lisp:cons "JobName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-id))
      (common-lisp:list
       (common-lisp:cons "JobId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'user-pool-id))
      (common-lisp:list
       (common-lisp:cons "UserPoolId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'pre-signed-url))
      (common-lisp:list
       (common-lisp:cons "PreSignedUrl"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'creation-date))
      (common-lisp:list
       (common-lisp:cons "CreationDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'start-date))
      (common-lisp:list
       (common-lisp:cons "StartDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'completion-date))
      (common-lisp:list
       (common-lisp:cons "CompletionDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "Status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'cloud-watch-logs-role-arn))
      (common-lisp:list
       (common-lisp:cons "CloudWatchLogsRoleArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'imported-users))
      (common-lisp:list
       (common-lisp:cons "ImportedUsers"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'skipped-users))
      (common-lisp:list
       (common-lisp:cons "SkippedUsers"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'failed-users))
      (common-lisp:list
       (common-lisp:cons "FailedUsers"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'completion-message))
      (common-lisp:list
       (common-lisp:cons "CompletionMessage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input user-import-job-type))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype user-import-jobs-list-type ()
   '(trivial-types:proper-list user-import-job-type))
 (common-lisp:defun |make-user-import-jobs-list-type|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list user-import-job-type))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:define-condition user-lambda-validation-exception
     (cognito-idp-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       user-lambda-validation-exception-message)))
 (common-lisp:export
  (common-lisp:list 'user-lambda-validation-exception
                    'user-lambda-validation-exception-message)))
(common-lisp:progn
 (common-lisp:define-condition user-not-confirmed-exception
     (cognito-idp-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       user-not-confirmed-exception-message)))
 (common-lisp:export
  (common-lisp:list 'user-not-confirmed-exception
                    'user-not-confirmed-exception-message)))
(common-lisp:progn
 (common-lisp:define-condition user-not-found-exception
     (cognito-idp-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       user-not-found-exception-message)))
 (common-lisp:export
  (common-lisp:list 'user-not-found-exception
                    'user-not-found-exception-message)))
(common-lisp:progn
 (common-lisp:defstruct
     (user-pool-client-description (:copier common-lisp:nil)
      (:conc-name "struct-shape-user-pool-client-description-"))
   (client-id common-lisp:nil :type
    (common-lisp:or client-id-type common-lisp:null))
   (user-pool-id common-lisp:nil :type
    (common-lisp:or user-pool-id-type common-lisp:null))
   (client-name common-lisp:nil :type
    (common-lisp:or client-name-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'user-pool-client-description
                    'make-user-pool-client-description))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          user-pool-client-description))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          user-pool-client-description))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'client-id))
      (common-lisp:list
       (common-lisp:cons "ClientId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'user-pool-id))
      (common-lisp:list
       (common-lisp:cons "UserPoolId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'client-name))
      (common-lisp:list
       (common-lisp:cons "ClientName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          user-pool-client-description))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype user-pool-client-list-type ()
   '(trivial-types:proper-list user-pool-client-description))
 (common-lisp:defun |make-user-pool-client-list-type|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            user-pool-client-description))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (user-pool-client-type (:copier common-lisp:nil)
      (:conc-name "struct-shape-user-pool-client-type-"))
   (user-pool-id common-lisp:nil :type
    (common-lisp:or user-pool-id-type common-lisp:null))
   (client-name common-lisp:nil :type
    (common-lisp:or client-name-type common-lisp:null))
   (client-id common-lisp:nil :type
    (common-lisp:or client-id-type common-lisp:null))
   (client-secret common-lisp:nil :type
    (common-lisp:or client-secret-type common-lisp:null))
   (last-modified-date common-lisp:nil :type
    (common-lisp:or date-type common-lisp:null))
   (creation-date common-lisp:nil :type
    (common-lisp:or date-type common-lisp:null))
   (refresh-token-validity common-lisp:nil :type
    (common-lisp:or refresh-token-validity-type common-lisp:null))
   (read-attributes common-lisp:nil :type
    (common-lisp:or client-permission-list-type common-lisp:null))
   (write-attributes common-lisp:nil :type
    (common-lisp:or client-permission-list-type common-lisp:null))
   (explicit-auth-flows common-lisp:nil :type
    (common-lisp:or explicit-auth-flows-list-type common-lisp:null))
   (supported-identity-providers common-lisp:nil :type
    (common-lisp:or supported-identity-providers-list-type common-lisp:null))
   (callback-urls common-lisp:nil :type
    (common-lisp:or callback-urls-list-type common-lisp:null))
   (logout-urls common-lisp:nil :type
    (common-lisp:or logout-urls-list-type common-lisp:null))
   (default-redirect-uri common-lisp:nil :type
    (common-lisp:or redirect-url-type common-lisp:null))
   (allowed-oauth-flows common-lisp:nil :type
    (common-lisp:or oauth-flows-type common-lisp:null))
   (allowed-oauth-scopes common-lisp:nil :type
    (common-lisp:or scope-list-type common-lisp:null))
   (allowed-oauth-flows-user-pool-client common-lisp:nil :type
    (common-lisp:or boolean-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'user-pool-client-type 'make-user-pool-client-type))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          user-pool-client-type))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          user-pool-client-type))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'user-pool-id))
      (common-lisp:list
       (common-lisp:cons "UserPoolId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'client-name))
      (common-lisp:list
       (common-lisp:cons "ClientName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'client-id))
      (common-lisp:list
       (common-lisp:cons "ClientId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'client-secret))
      (common-lisp:list
       (common-lisp:cons "ClientSecret"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'last-modified-date))
      (common-lisp:list
       (common-lisp:cons "LastModifiedDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'creation-date))
      (common-lisp:list
       (common-lisp:cons "CreationDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'refresh-token-validity))
      (common-lisp:list
       (common-lisp:cons "RefreshTokenValidity"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'read-attributes))
      (common-lisp:list
       (common-lisp:cons "ReadAttributes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'write-attributes))
      (common-lisp:list
       (common-lisp:cons "WriteAttributes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'explicit-auth-flows))
      (common-lisp:list
       (common-lisp:cons "ExplicitAuthFlows"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'supported-identity-providers))
      (common-lisp:list
       (common-lisp:cons "SupportedIdentityProviders"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'callback-urls))
      (common-lisp:list
       (common-lisp:cons "CallbackURLs"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'logout-urls))
      (common-lisp:list
       (common-lisp:cons "LogoutURLs"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'default-redirect-uri))
      (common-lisp:list
       (common-lisp:cons "DefaultRedirectURI"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'allowed-oauth-flows))
      (common-lisp:list
       (common-lisp:cons "AllowedOAuthFlows"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'allowed-oauth-scopes))
      (common-lisp:list
       (common-lisp:cons "AllowedOAuthScopes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'allowed-oauth-flows-user-pool-client))
      (common-lisp:list
       (common-lisp:cons "AllowedOAuthFlowsUserPoolClient"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          user-pool-client-type))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (user-pool-description-type (:copier common-lisp:nil)
      (:conc-name "struct-shape-user-pool-description-type-"))
   (id common-lisp:nil :type
    (common-lisp:or user-pool-id-type common-lisp:null))
   (name common-lisp:nil :type
    (common-lisp:or user-pool-name-type common-lisp:null))
   (lambda-config common-lisp:nil :type
    (common-lisp:or lambda-config-type common-lisp:null))
   (status common-lisp:nil :type (common-lisp:or status-type common-lisp:null))
   (last-modified-date common-lisp:nil :type
    (common-lisp:or date-type common-lisp:null))
   (creation-date common-lisp:nil :type
    (common-lisp:or date-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'user-pool-description-type
                    'make-user-pool-description-type))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          user-pool-description-type))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          user-pool-description-type))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "Id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'lambda-config))
      (common-lisp:list
       (common-lisp:cons "LambdaConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "Status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'last-modified-date))
      (common-lisp:list
       (common-lisp:cons "LastModifiedDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'creation-date))
      (common-lisp:list
       (common-lisp:cons "CreationDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          user-pool-description-type))
   common-lisp:nil))
(common-lisp:deftype user-pool-id-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype user-pool-list-type ()
   '(trivial-types:proper-list user-pool-description-type))
 (common-lisp:defun |make-user-pool-list-type|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            user-pool-description-type))
   aws-sdk/generator/shape::members))
(common-lisp:deftype user-pool-mfa-type () 'common-lisp:string)
(common-lisp:deftype user-pool-name-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (user-pool-policy-type (:copier common-lisp:nil)
      (:conc-name "struct-shape-user-pool-policy-type-"))
   (password-policy common-lisp:nil :type
    (common-lisp:or password-policy-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'user-pool-policy-type 'make-user-pool-policy-type))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          user-pool-policy-type))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          user-pool-policy-type))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'password-policy))
      (common-lisp:list
       (common-lisp:cons "PasswordPolicy"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          user-pool-policy-type))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:define-condition user-pool-tagging-exception
     (cognito-idp-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       user-pool-tagging-exception-message)))
 (common-lisp:export
  (common-lisp:list 'user-pool-tagging-exception
                    'user-pool-tagging-exception-message)))
(common-lisp:progn
 (common-lisp:deftype user-pool-tags-type () 'common-lisp:hash-table)
 (common-lisp:defun |make-user-pool-tags-type|
                    (aws-sdk/generator/shape::key-values)
   (common-lisp:etypecase aws-sdk/generator/shape::key-values
     (common-lisp:hash-table aws-sdk/generator/shape::key-values)
     (common-lisp:list
      (alexandria:alist-hash-table aws-sdk/generator/shape::key-values)))))
(common-lisp:progn
 (common-lisp:defstruct
     (user-pool-type (:copier common-lisp:nil)
      (:conc-name "struct-shape-user-pool-type-"))
   (id common-lisp:nil :type
    (common-lisp:or user-pool-id-type common-lisp:null))
   (name common-lisp:nil :type
    (common-lisp:or user-pool-name-type common-lisp:null))
   (policies common-lisp:nil :type
    (common-lisp:or user-pool-policy-type common-lisp:null))
   (lambda-config common-lisp:nil :type
    (common-lisp:or lambda-config-type common-lisp:null))
   (status common-lisp:nil :type (common-lisp:or status-type common-lisp:null))
   (last-modified-date common-lisp:nil :type
    (common-lisp:or date-type common-lisp:null))
   (creation-date common-lisp:nil :type
    (common-lisp:or date-type common-lisp:null))
   (schema-attributes common-lisp:nil :type
    (common-lisp:or schema-attributes-list-type common-lisp:null))
   (auto-verified-attributes common-lisp:nil :type
    (common-lisp:or verified-attributes-list-type common-lisp:null))
   (alias-attributes common-lisp:nil :type
    (common-lisp:or alias-attributes-list-type common-lisp:null))
   (username-attributes common-lisp:nil :type
    (common-lisp:or username-attributes-list-type common-lisp:null))
   (sms-verification-message common-lisp:nil :type
    (common-lisp:or sms-verification-message-type common-lisp:null))
   (email-verification-message common-lisp:nil :type
    (common-lisp:or email-verification-message-type common-lisp:null))
   (email-verification-subject common-lisp:nil :type
    (common-lisp:or email-verification-subject-type common-lisp:null))
   (verification-message-template common-lisp:nil :type
    (common-lisp:or verification-message-template-type common-lisp:null))
   (sms-authentication-message common-lisp:nil :type
    (common-lisp:or sms-verification-message-type common-lisp:null))
   (mfa-configuration common-lisp:nil :type
    (common-lisp:or user-pool-mfa-type common-lisp:null))
   (device-configuration common-lisp:nil :type
    (common-lisp:or device-configuration-type common-lisp:null))
   (estimated-number-of-users common-lisp:nil :type
    (common-lisp:or integer-type common-lisp:null))
   (email-configuration common-lisp:nil :type
    (common-lisp:or email-configuration-type common-lisp:null))
   (sms-configuration common-lisp:nil :type
    (common-lisp:or sms-configuration-type common-lisp:null))
   (user-pool-tags common-lisp:nil :type
    (common-lisp:or user-pool-tags-type common-lisp:null))
   (sms-configuration-failure common-lisp:nil :type
    (common-lisp:or string-type common-lisp:null))
   (email-configuration-failure common-lisp:nil :type
    (common-lisp:or string-type common-lisp:null))
   (admin-create-user-config common-lisp:nil :type
    (common-lisp:or admin-create-user-config-type common-lisp:null)))
 (common-lisp:export (common-lisp:list 'user-pool-type 'make-user-pool-type))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input user-pool-type))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input user-pool-type))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "Id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'policies))
      (common-lisp:list
       (common-lisp:cons "Policies"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'lambda-config))
      (common-lisp:list
       (common-lisp:cons "LambdaConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "Status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'last-modified-date))
      (common-lisp:list
       (common-lisp:cons "LastModifiedDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'creation-date))
      (common-lisp:list
       (common-lisp:cons "CreationDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'schema-attributes))
      (common-lisp:list
       (common-lisp:cons "SchemaAttributes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'auto-verified-attributes))
      (common-lisp:list
       (common-lisp:cons "AutoVerifiedAttributes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'alias-attributes))
      (common-lisp:list
       (common-lisp:cons "AliasAttributes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'username-attributes))
      (common-lisp:list
       (common-lisp:cons "UsernameAttributes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'sms-verification-message))
      (common-lisp:list
       (common-lisp:cons "SmsVerificationMessage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'email-verification-message))
      (common-lisp:list
       (common-lisp:cons "EmailVerificationMessage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'email-verification-subject))
      (common-lisp:list
       (common-lisp:cons "EmailVerificationSubject"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'verification-message-template))
      (common-lisp:list
       (common-lisp:cons "VerificationMessageTemplate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'sms-authentication-message))
      (common-lisp:list
       (common-lisp:cons "SmsAuthenticationMessage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'mfa-configuration))
      (common-lisp:list
       (common-lisp:cons "MfaConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'device-configuration))
      (common-lisp:list
       (common-lisp:cons "DeviceConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'estimated-number-of-users))
      (common-lisp:list
       (common-lisp:cons "EstimatedNumberOfUsers"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'email-configuration))
      (common-lisp:list
       (common-lisp:cons "EmailConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'sms-configuration))
      (common-lisp:list
       (common-lisp:cons "SmsConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'user-pool-tags))
      (common-lisp:list
       (common-lisp:cons "UserPoolTags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'sms-configuration-failure))
      (common-lisp:list
       (common-lisp:cons "SmsConfigurationFailure"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'email-configuration-failure))
      (common-lisp:list
       (common-lisp:cons "EmailConfigurationFailure"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'admin-create-user-config))
      (common-lisp:list
       (common-lisp:cons "AdminCreateUserConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input user-pool-type))
   common-lisp:nil))
(common-lisp:deftype user-status-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (user-type (:copier common-lisp:nil)
      (:conc-name "struct-shape-user-type-"))
   (username common-lisp:nil :type
    (common-lisp:or username-type common-lisp:null))
   (attributes common-lisp:nil :type
    (common-lisp:or attribute-list-type common-lisp:null))
   (user-create-date common-lisp:nil :type
    (common-lisp:or date-type common-lisp:null))
   (user-last-modified-date common-lisp:nil :type
    (common-lisp:or date-type common-lisp:null))
   (enabled common-lisp:nil :type
    (common-lisp:or boolean-type common-lisp:null))
   (user-status common-lisp:nil :type
    (common-lisp:or user-status-type common-lisp:null))
   (mfaoptions common-lisp:nil :type
    (common-lisp:or mfaoption-list-type common-lisp:null)))
 (common-lisp:export (common-lisp:list 'user-type 'make-user-type))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input user-type))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input user-type))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'username))
      (common-lisp:list
       (common-lisp:cons "Username"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'attributes))
      (common-lisp:list
       (common-lisp:cons "Attributes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'user-create-date))
      (common-lisp:list
       (common-lisp:cons "UserCreateDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'user-last-modified-date))
      (common-lisp:list
       (common-lisp:cons "UserLastModifiedDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'enabled))
      (common-lisp:list
       (common-lisp:cons "Enabled"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'user-status))
      (common-lisp:list
       (common-lisp:cons "UserStatus"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'mfaoptions))
      (common-lisp:list
       (common-lisp:cons "MFAOptions"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input user-type))
   common-lisp:nil))
(common-lisp:deftype username-attribute-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype username-attributes-list-type ()
   '(trivial-types:proper-list username-attribute-type))
 (common-lisp:defun |make-username-attributes-list-type|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list username-attribute-type))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:define-condition username-exists-exception
     (cognito-idp-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       username-exists-exception-message)))
 (common-lisp:export
  (common-lisp:list 'username-exists-exception
                    'username-exists-exception-message)))
(common-lisp:deftype username-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype users-list-type ()
   '(trivial-types:proper-list user-type))
 (common-lisp:defun |make-users-list-type|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list user-type))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (verification-message-template-type (:copier common-lisp:nil)
      (:conc-name "struct-shape-verification-message-template-type-"))
   (sms-message common-lisp:nil :type
    (common-lisp:or sms-verification-message-type common-lisp:null))
   (email-message common-lisp:nil :type
    (common-lisp:or email-verification-message-type common-lisp:null))
   (email-subject common-lisp:nil :type
    (common-lisp:or email-verification-subject-type common-lisp:null))
   (email-message-by-link common-lisp:nil :type
    (common-lisp:or email-verification-message-by-link-type common-lisp:null))
   (email-subject-by-link common-lisp:nil :type
    (common-lisp:or email-verification-subject-by-link-type common-lisp:null))
   (default-email-option common-lisp:nil :type
    (common-lisp:or default-email-option-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'verification-message-template-type
                    'make-verification-message-template-type))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          verification-message-template-type))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          verification-message-template-type))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'sms-message))
      (common-lisp:list
       (common-lisp:cons "SmsMessage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'email-message))
      (common-lisp:list
       (common-lisp:cons "EmailMessage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'email-subject))
      (common-lisp:list
       (common-lisp:cons "EmailSubject"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'email-message-by-link))
      (common-lisp:list
       (common-lisp:cons "EmailMessageByLink"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'email-subject-by-link))
      (common-lisp:list
       (common-lisp:cons "EmailSubjectByLink"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'default-email-option))
      (common-lisp:list
       (common-lisp:cons "DefaultEmailOption"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          verification-message-template-type))
   common-lisp:nil))
(common-lisp:deftype verified-attribute-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype verified-attributes-list-type ()
   '(trivial-types:proper-list verified-attribute-type))
 (common-lisp:defun |make-verified-attributes-list-type|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list verified-attribute-type))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (verify-user-attribute-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-verify-user-attribute-request-"))
   (access-token (common-lisp:error ":access-token is required") :type
    (common-lisp:or token-model-type common-lisp:null))
   (attribute-name (common-lisp:error ":attribute-name is required") :type
    (common-lisp:or attribute-name-type common-lisp:null))
   (code (common-lisp:error ":code is required") :type
    (common-lisp:or confirmation-code-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'verify-user-attribute-request
                    'make-verify-user-attribute-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          verify-user-attribute-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          verify-user-attribute-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'access-token))
      (common-lisp:list
       (common-lisp:cons "AccessToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'attribute-name))
      (common-lisp:list
       (common-lisp:cons "AttributeName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'code))
      (common-lisp:list
       (common-lisp:cons "Code"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          verify-user-attribute-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (verify-user-attribute-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-verify-user-attribute-response-")))
 (common-lisp:export
  (common-lisp:list 'verify-user-attribute-response
                    'make-verify-user-attribute-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          verify-user-attribute-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          verify-user-attribute-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          verify-user-attribute-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defun add-custom-attributes
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key user-pool-id custom-attributes)
   (common-lisp:declare (common-lisp:ignorable user-pool-id custom-attributes))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-add-custom-attributes-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'cognito-idp-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "AddCustomAttributes"
                                                        "2016-04-18"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'add-custom-attributes))
(common-lisp:progn
 (common-lisp:defun admin-add-user-to-group
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key user-pool-id username group-name)
   (common-lisp:declare
    (common-lisp:ignorable user-pool-id username group-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-admin-add-user-to-group-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'cognito-idp-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "AdminAddUserToGroup"
                                                        "2016-04-18"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'admin-add-user-to-group))
(common-lisp:progn
 (common-lisp:defun admin-confirm-sign-up
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key user-pool-id username)
   (common-lisp:declare (common-lisp:ignorable user-pool-id username))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-admin-confirm-sign-up-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'cognito-idp-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "AdminConfirmSignUp"
                                                        "2016-04-18"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'admin-confirm-sign-up))
(common-lisp:progn
 (common-lisp:defun admin-create-user
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key user-pool-id username user-attributes
                     validation-data temporary-password force-alias-creation
                     message-action desired-delivery-mediums)
   (common-lisp:declare
    (common-lisp:ignorable user-pool-id username user-attributes
     validation-data temporary-password force-alias-creation message-action
     desired-delivery-mediums))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-admin-create-user-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'cognito-idp-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "AdminCreateUser"
                                                        "2016-04-18"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'admin-create-user))
(common-lisp:progn
 (common-lisp:defun admin-delete-user
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key user-pool-id username)
   (common-lisp:declare (common-lisp:ignorable user-pool-id username))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-admin-delete-user-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'cognito-idp-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "AdminDeleteUser"
                                                        "2016-04-18"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'admin-delete-user))
(common-lisp:progn
 (common-lisp:defun admin-delete-user-attributes
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key user-pool-id username
                     user-attribute-names)
   (common-lisp:declare
    (common-lisp:ignorable user-pool-id username user-attribute-names))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-admin-delete-user-attributes-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'cognito-idp-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "AdminDeleteUserAttributes"
                                                        "2016-04-18"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'admin-delete-user-attributes))
(common-lisp:progn
 (common-lisp:defun admin-disable-provider-for-user
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key user-pool-id user)
   (common-lisp:declare (common-lisp:ignorable user-pool-id user))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-admin-disable-provider-for-user-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'cognito-idp-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "AdminDisableProviderForUser"
                                                        "2016-04-18"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'admin-disable-provider-for-user))
(common-lisp:progn
 (common-lisp:defun admin-disable-user
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key user-pool-id username)
   (common-lisp:declare (common-lisp:ignorable user-pool-id username))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-admin-disable-user-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'cognito-idp-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "AdminDisableUser"
                                                        "2016-04-18"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'admin-disable-user))
(common-lisp:progn
 (common-lisp:defun admin-enable-user
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key user-pool-id username)
   (common-lisp:declare (common-lisp:ignorable user-pool-id username))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-admin-enable-user-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'cognito-idp-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "AdminEnableUser"
                                                        "2016-04-18"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'admin-enable-user))
(common-lisp:progn
 (common-lisp:defun admin-forget-device
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key user-pool-id username device-key)
   (common-lisp:declare
    (common-lisp:ignorable user-pool-id username device-key))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-admin-forget-device-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'cognito-idp-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "AdminForgetDevice"
                                                        "2016-04-18"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'admin-forget-device))
(common-lisp:progn
 (common-lisp:defun admin-get-device
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key device-key user-pool-id username)
   (common-lisp:declare
    (common-lisp:ignorable device-key user-pool-id username))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-admin-get-device-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'cognito-idp-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "AdminGetDevice"
                                                        "2016-04-18"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'admin-get-device))
(common-lisp:progn
 (common-lisp:defun admin-get-user
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key user-pool-id username)
   (common-lisp:declare (common-lisp:ignorable user-pool-id username))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-admin-get-user-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'cognito-idp-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "AdminGetUser"
                                                        "2016-04-18"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'admin-get-user))
(common-lisp:progn
 (common-lisp:defun admin-initiate-auth
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key user-pool-id client-id auth-flow
                     auth-parameters client-metadata)
   (common-lisp:declare
    (common-lisp:ignorable user-pool-id client-id auth-flow auth-parameters
     client-metadata))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-admin-initiate-auth-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'cognito-idp-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "AdminInitiateAuth"
                                                        "2016-04-18"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'admin-initiate-auth))
(common-lisp:progn
 (common-lisp:defun admin-link-provider-for-user
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key user-pool-id destination-user
                     source-user)
   (common-lisp:declare
    (common-lisp:ignorable user-pool-id destination-user source-user))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-admin-link-provider-for-user-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'cognito-idp-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "AdminLinkProviderForUser"
                                                        "2016-04-18"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'admin-link-provider-for-user))
(common-lisp:progn
 (common-lisp:defun admin-list-devices
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key user-pool-id username limit
                     pagination-token)
   (common-lisp:declare
    (common-lisp:ignorable user-pool-id username limit pagination-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-admin-list-devices-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'cognito-idp-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "AdminListDevices"
                                                        "2016-04-18"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'admin-list-devices))
(common-lisp:progn
 (common-lisp:defun admin-list-groups-for-user
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key username user-pool-id limit next-token)
   (common-lisp:declare
    (common-lisp:ignorable username user-pool-id limit next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-admin-list-groups-for-user-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'cognito-idp-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "AdminListGroupsForUser"
                                                        "2016-04-18"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'admin-list-groups-for-user))
(common-lisp:progn
 (common-lisp:defun admin-remove-user-from-group
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key user-pool-id username group-name)
   (common-lisp:declare
    (common-lisp:ignorable user-pool-id username group-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-admin-remove-user-from-group-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'cognito-idp-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "AdminRemoveUserFromGroup"
                                                        "2016-04-18"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'admin-remove-user-from-group))
(common-lisp:progn
 (common-lisp:defun admin-reset-user-password
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key user-pool-id username)
   (common-lisp:declare (common-lisp:ignorable user-pool-id username))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-admin-reset-user-password-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'cognito-idp-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "AdminResetUserPassword"
                                                        "2016-04-18"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'admin-reset-user-password))
(common-lisp:progn
 (common-lisp:defun admin-respond-to-auth-challenge
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key user-pool-id client-id challenge-name
                     challenge-responses session)
   (common-lisp:declare
    (common-lisp:ignorable user-pool-id client-id challenge-name
     challenge-responses session))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-admin-respond-to-auth-challenge-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'cognito-idp-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "AdminRespondToAuthChallenge"
                                                        "2016-04-18"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'admin-respond-to-auth-challenge))
(common-lisp:progn
 (common-lisp:defun admin-set-user-settings
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key user-pool-id username mfaoptions)
   (common-lisp:declare
    (common-lisp:ignorable user-pool-id username mfaoptions))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-admin-set-user-settings-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'cognito-idp-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "AdminSetUserSettings"
                                                        "2016-04-18"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'admin-set-user-settings))
(common-lisp:progn
 (common-lisp:defun admin-update-device-status
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key user-pool-id username device-key
                     device-remembered-status)
   (common-lisp:declare
    (common-lisp:ignorable user-pool-id username device-key
     device-remembered-status))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-admin-update-device-status-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'cognito-idp-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "AdminUpdateDeviceStatus"
                                                        "2016-04-18"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'admin-update-device-status))
(common-lisp:progn
 (common-lisp:defun admin-update-user-attributes
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key user-pool-id username user-attributes)
   (common-lisp:declare
    (common-lisp:ignorable user-pool-id username user-attributes))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-admin-update-user-attributes-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'cognito-idp-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "AdminUpdateUserAttributes"
                                                        "2016-04-18"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'admin-update-user-attributes))
(common-lisp:progn
 (common-lisp:defun admin-user-global-sign-out
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key user-pool-id username)
   (common-lisp:declare (common-lisp:ignorable user-pool-id username))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-admin-user-global-sign-out-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'cognito-idp-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "AdminUserGlobalSignOut"
                                                        "2016-04-18"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'admin-user-global-sign-out))
(common-lisp:progn
 (common-lisp:defun change-password
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key previous-password proposed-password
                     access-token)
   (common-lisp:declare
    (common-lisp:ignorable previous-password proposed-password access-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-change-password-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'cognito-idp-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "ChangePassword"
                                                        "2016-04-18"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'change-password))
(common-lisp:progn
 (common-lisp:defun confirm-device
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key access-token device-key
                     device-secret-verifier-config device-name)
   (common-lisp:declare
    (common-lisp:ignorable access-token device-key
     device-secret-verifier-config device-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-confirm-device-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'cognito-idp-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "ConfirmDevice"
                                                        "2016-04-18"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'confirm-device))
(common-lisp:progn
 (common-lisp:defun confirm-forgot-password
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key client-id secret-hash username
                     confirmation-code password)
   (common-lisp:declare
    (common-lisp:ignorable client-id secret-hash username confirmation-code
     password))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-confirm-forgot-password-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'cognito-idp-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "ConfirmForgotPassword"
                                                        "2016-04-18"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'confirm-forgot-password))
(common-lisp:progn
 (common-lisp:defun confirm-sign-up
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key client-id secret-hash username
                     confirmation-code force-alias-creation)
   (common-lisp:declare
    (common-lisp:ignorable client-id secret-hash username confirmation-code
     force-alias-creation))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-confirm-sign-up-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'cognito-idp-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "ConfirmSignUp"
                                                        "2016-04-18"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'confirm-sign-up))
(common-lisp:progn
 (common-lisp:defun create-group
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key group-name user-pool-id description
                     role-arn precedence)
   (common-lisp:declare
    (common-lisp:ignorable group-name user-pool-id description role-arn
     precedence))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-group-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'cognito-idp-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "CreateGroup"
                                                        "2016-04-18"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'create-group))
(common-lisp:progn
 (common-lisp:defun create-identity-provider
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key user-pool-id provider-name provider-type
                     provider-details attribute-mapping idp-identifiers)
   (common-lisp:declare
    (common-lisp:ignorable user-pool-id provider-name provider-type
     provider-details attribute-mapping idp-identifiers))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-identity-provider-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'cognito-idp-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "CreateIdentityProvider"
                                                        "2016-04-18"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'create-identity-provider))
(common-lisp:progn
 (common-lisp:defun create-resource-server
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key user-pool-id identifier name scopes)
   (common-lisp:declare
    (common-lisp:ignorable user-pool-id identifier name scopes))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-resource-server-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'cognito-idp-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "CreateResourceServer"
                                                        "2016-04-18"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'create-resource-server))
(common-lisp:progn
 (common-lisp:defun create-user-import-job
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key job-name user-pool-id
                     cloud-watch-logs-role-arn)
   (common-lisp:declare
    (common-lisp:ignorable job-name user-pool-id cloud-watch-logs-role-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-user-import-job-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'cognito-idp-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "CreateUserImportJob"
                                                        "2016-04-18"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'create-user-import-job))
(common-lisp:progn
 (common-lisp:defun create-user-pool
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key pool-name policies lambda-config
                     auto-verified-attributes alias-attributes
                     username-attributes sms-verification-message
                     email-verification-message email-verification-subject
                     verification-message-template sms-authentication-message
                     mfa-configuration device-configuration email-configuration
                     sms-configuration user-pool-tags admin-create-user-config
                     schema)
   (common-lisp:declare
    (common-lisp:ignorable pool-name policies lambda-config
     auto-verified-attributes alias-attributes username-attributes
     sms-verification-message email-verification-message
     email-verification-subject verification-message-template
     sms-authentication-message mfa-configuration device-configuration
     email-configuration sms-configuration user-pool-tags
     admin-create-user-config schema))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-user-pool-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'cognito-idp-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "CreateUserPool"
                                                        "2016-04-18"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'create-user-pool))
(common-lisp:progn
 (common-lisp:defun create-user-pool-client
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key user-pool-id client-name generate-secret
                     refresh-token-validity read-attributes write-attributes
                     explicit-auth-flows supported-identity-providers
                     callback-urls logout-urls default-redirect-uri
                     allowed-oauth-flows allowed-oauth-scopes
                     allowed-oauth-flows-user-pool-client)
   (common-lisp:declare
    (common-lisp:ignorable user-pool-id client-name generate-secret
     refresh-token-validity read-attributes write-attributes
     explicit-auth-flows supported-identity-providers callback-urls logout-urls
     default-redirect-uri allowed-oauth-flows allowed-oauth-scopes
     allowed-oauth-flows-user-pool-client))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-user-pool-client-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'cognito-idp-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "CreateUserPoolClient"
                                                        "2016-04-18"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'create-user-pool-client))
(common-lisp:progn
 (common-lisp:defun create-user-pool-domain
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key domain user-pool-id)
   (common-lisp:declare (common-lisp:ignorable domain user-pool-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-user-pool-domain-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'cognito-idp-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "CreateUserPoolDomain"
                                                        "2016-04-18"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'create-user-pool-domain))
(common-lisp:progn
 (common-lisp:defun delete-group
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key group-name user-pool-id)
   (common-lisp:declare (common-lisp:ignorable group-name user-pool-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-group-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'cognito-idp-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "DeleteGroup"
                                                        "2016-04-18"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'delete-group))
(common-lisp:progn
 (common-lisp:defun delete-identity-provider
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key user-pool-id provider-name)
   (common-lisp:declare (common-lisp:ignorable user-pool-id provider-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-identity-provider-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'cognito-idp-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "DeleteIdentityProvider"
                                                        "2016-04-18"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'delete-identity-provider))
(common-lisp:progn
 (common-lisp:defun delete-resource-server
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key user-pool-id identifier)
   (common-lisp:declare (common-lisp:ignorable user-pool-id identifier))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-resource-server-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'cognito-idp-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "DeleteResourceServer"
                                                        "2016-04-18"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'delete-resource-server))
(common-lisp:progn
 (common-lisp:defun delete-user
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key access-token)
   (common-lisp:declare (common-lisp:ignorable access-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-user-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'cognito-idp-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/" "DeleteUser"
                                                        "2016-04-18"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'delete-user))
(common-lisp:progn
 (common-lisp:defun delete-user-attributes
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key user-attribute-names access-token)
   (common-lisp:declare
    (common-lisp:ignorable user-attribute-names access-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-user-attributes-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'cognito-idp-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "DeleteUserAttributes"
                                                        "2016-04-18"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'delete-user-attributes))
(common-lisp:progn
 (common-lisp:defun delete-user-pool
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key user-pool-id)
   (common-lisp:declare (common-lisp:ignorable user-pool-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-user-pool-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'cognito-idp-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "DeleteUserPool"
                                                        "2016-04-18"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'delete-user-pool))
(common-lisp:progn
 (common-lisp:defun delete-user-pool-client
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key user-pool-id client-id)
   (common-lisp:declare (common-lisp:ignorable user-pool-id client-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-user-pool-client-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'cognito-idp-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "DeleteUserPoolClient"
                                                        "2016-04-18"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'delete-user-pool-client))
(common-lisp:progn
 (common-lisp:defun delete-user-pool-domain
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key domain user-pool-id)
   (common-lisp:declare (common-lisp:ignorable domain user-pool-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-user-pool-domain-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'cognito-idp-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "DeleteUserPoolDomain"
                                                        "2016-04-18"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'delete-user-pool-domain))
(common-lisp:progn
 (common-lisp:defun describe-identity-provider
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key user-pool-id provider-name)
   (common-lisp:declare (common-lisp:ignorable user-pool-id provider-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-describe-identity-provider-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'cognito-idp-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "DescribeIdentityProvider"
                                                        "2016-04-18"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'describe-identity-provider))
(common-lisp:progn
 (common-lisp:defun describe-resource-server
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key user-pool-id identifier)
   (common-lisp:declare (common-lisp:ignorable user-pool-id identifier))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-describe-resource-server-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'cognito-idp-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "DescribeResourceServer"
                                                        "2016-04-18"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'describe-resource-server))
(common-lisp:progn
 (common-lisp:defun describe-user-import-job
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key user-pool-id job-id)
   (common-lisp:declare (common-lisp:ignorable user-pool-id job-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-describe-user-import-job-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'cognito-idp-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "DescribeUserImportJob"
                                                        "2016-04-18"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'describe-user-import-job))
(common-lisp:progn
 (common-lisp:defun describe-user-pool
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key user-pool-id)
   (common-lisp:declare (common-lisp:ignorable user-pool-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-describe-user-pool-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'cognito-idp-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "DescribeUserPool"
                                                        "2016-04-18"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'describe-user-pool))
(common-lisp:progn
 (common-lisp:defun describe-user-pool-client
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key user-pool-id client-id)
   (common-lisp:declare (common-lisp:ignorable user-pool-id client-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-describe-user-pool-client-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'cognito-idp-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "DescribeUserPoolClient"
                                                        "2016-04-18"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'describe-user-pool-client))
(common-lisp:progn
 (common-lisp:defun describe-user-pool-domain
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key domain)
   (common-lisp:declare (common-lisp:ignorable domain))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-describe-user-pool-domain-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'cognito-idp-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "DescribeUserPoolDomain"
                                                        "2016-04-18"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'describe-user-pool-domain))
(common-lisp:progn
 (common-lisp:defun forget-device
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key access-token device-key)
   (common-lisp:declare (common-lisp:ignorable access-token device-key))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-forget-device-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'cognito-idp-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "ForgetDevice"
                                                        "2016-04-18"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'forget-device))
(common-lisp:progn
 (common-lisp:defun forgot-password
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key client-id secret-hash username)
   (common-lisp:declare (common-lisp:ignorable client-id secret-hash username))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-forgot-password-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'cognito-idp-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "ForgotPassword"
                                                        "2016-04-18"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'forgot-password))
(common-lisp:progn
 (common-lisp:defun get-csvheader
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key user-pool-id)
   (common-lisp:declare (common-lisp:ignorable user-pool-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-csvheader-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'cognito-idp-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "GetCSVHeader"
                                                        "2016-04-18"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-csvheader))
(common-lisp:progn
 (common-lisp:defun get-device
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key device-key access-token)
   (common-lisp:declare (common-lisp:ignorable device-key access-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-device-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'cognito-idp-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/" "GetDevice"
                                                        "2016-04-18"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-device))
(common-lisp:progn
 (common-lisp:defun get-group
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key group-name user-pool-id)
   (common-lisp:declare (common-lisp:ignorable group-name user-pool-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-group-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'cognito-idp-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/" "GetGroup"
                                                        "2016-04-18"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-group))
(common-lisp:progn
 (common-lisp:defun get-identity-provider-by-identifier
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key user-pool-id idp-identifier)
   (common-lisp:declare (common-lisp:ignorable user-pool-id idp-identifier))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-get-identity-provider-by-identifier-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'cognito-idp-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "GetIdentityProviderByIdentifier"
                                                        "2016-04-18"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-identity-provider-by-identifier))
(common-lisp:progn
 (common-lisp:defun get-uicustomization
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key user-pool-id client-id)
   (common-lisp:declare (common-lisp:ignorable user-pool-id client-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-uicustomization-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'cognito-idp-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "GetUICustomization"
                                                        "2016-04-18"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-uicustomization))
(common-lisp:progn
 (common-lisp:defun get-user
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key access-token)
   (common-lisp:declare (common-lisp:ignorable access-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-user-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'cognito-idp-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/" "GetUser"
                                                        "2016-04-18"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-user))
(common-lisp:progn
 (common-lisp:defun get-user-attribute-verification-code
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key access-token attribute-name)
   (common-lisp:declare (common-lisp:ignorable access-token attribute-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-get-user-attribute-verification-code-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'cognito-idp-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "GetUserAttributeVerificationCode"
                                                        "2016-04-18"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-user-attribute-verification-code))
(common-lisp:progn
 (common-lisp:defun global-sign-out
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key access-token)
   (common-lisp:declare (common-lisp:ignorable access-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-global-sign-out-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'cognito-idp-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "GlobalSignOut"
                                                        "2016-04-18"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'global-sign-out))
(common-lisp:progn
 (common-lisp:defun initiate-auth
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key auth-flow auth-parameters client-metadata
                     client-id)
   (common-lisp:declare
    (common-lisp:ignorable auth-flow auth-parameters client-metadata
     client-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-initiate-auth-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'cognito-idp-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "InitiateAuth"
                                                        "2016-04-18"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'initiate-auth))
(common-lisp:progn
 (common-lisp:defun list-devices
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key access-token limit pagination-token)
   (common-lisp:declare
    (common-lisp:ignorable access-token limit pagination-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-devices-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'cognito-idp-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "ListDevices"
                                                        "2016-04-18"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-devices))
(common-lisp:progn
 (common-lisp:defun list-groups
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key user-pool-id limit next-token)
   (common-lisp:declare (common-lisp:ignorable user-pool-id limit next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-groups-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'cognito-idp-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/" "ListGroups"
                                                        "2016-04-18"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-groups))
(common-lisp:progn
 (common-lisp:defun list-identity-providers
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key user-pool-id max-results next-token)
   (common-lisp:declare
    (common-lisp:ignorable user-pool-id max-results next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-identity-providers-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'cognito-idp-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "ListIdentityProviders"
                                                        "2016-04-18"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-identity-providers))
(common-lisp:progn
 (common-lisp:defun list-resource-servers
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key user-pool-id max-results next-token)
   (common-lisp:declare
    (common-lisp:ignorable user-pool-id max-results next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-resource-servers-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'cognito-idp-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "ListResourceServers"
                                                        "2016-04-18"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-resource-servers))
(common-lisp:progn
 (common-lisp:defun list-user-import-jobs
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key user-pool-id max-results
                     pagination-token)
   (common-lisp:declare
    (common-lisp:ignorable user-pool-id max-results pagination-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-user-import-jobs-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'cognito-idp-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "ListUserImportJobs"
                                                        "2016-04-18"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-user-import-jobs))
(common-lisp:progn
 (common-lisp:defun list-user-pool-clients
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key user-pool-id max-results next-token)
   (common-lisp:declare
    (common-lisp:ignorable user-pool-id max-results next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-user-pool-clients-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'cognito-idp-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "ListUserPoolClients"
                                                        "2016-04-18"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-user-pool-clients))
(common-lisp:progn
 (common-lisp:defun list-user-pools
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key next-token max-results)
   (common-lisp:declare (common-lisp:ignorable next-token max-results))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-user-pools-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'cognito-idp-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "ListUserPools"
                                                        "2016-04-18"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-user-pools))
(common-lisp:progn
 (common-lisp:defun list-users
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key user-pool-id attributes-to-get limit
                     pagination-token filter)
   (common-lisp:declare
    (common-lisp:ignorable user-pool-id attributes-to-get limit
     pagination-token filter))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-users-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'cognito-idp-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/" "ListUsers"
                                                        "2016-04-18"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-users))
(common-lisp:progn
 (common-lisp:defun list-users-in-group
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key user-pool-id group-name limit next-token)
   (common-lisp:declare
    (common-lisp:ignorable user-pool-id group-name limit next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-users-in-group-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'cognito-idp-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "ListUsersInGroup"
                                                        "2016-04-18"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-users-in-group))
(common-lisp:progn
 (common-lisp:defun resend-confirmation-code
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key client-id secret-hash username)
   (common-lisp:declare (common-lisp:ignorable client-id secret-hash username))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-resend-confirmation-code-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'cognito-idp-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "ResendConfirmationCode"
                                                        "2016-04-18"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'resend-confirmation-code))
(common-lisp:progn
 (common-lisp:defun respond-to-auth-challenge
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key client-id challenge-name session
                     challenge-responses)
   (common-lisp:declare
    (common-lisp:ignorable client-id challenge-name session
     challenge-responses))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-respond-to-auth-challenge-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'cognito-idp-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "RespondToAuthChallenge"
                                                        "2016-04-18"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'respond-to-auth-challenge))
(common-lisp:progn
 (common-lisp:defun set-uicustomization
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key user-pool-id client-id css image-file)
   (common-lisp:declare
    (common-lisp:ignorable user-pool-id client-id css image-file))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-set-uicustomization-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'cognito-idp-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "SetUICustomization"
                                                        "2016-04-18"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'set-uicustomization))
(common-lisp:progn
 (common-lisp:defun set-user-settings
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key access-token mfaoptions)
   (common-lisp:declare (common-lisp:ignorable access-token mfaoptions))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-set-user-settings-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'cognito-idp-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "SetUserSettings"
                                                        "2016-04-18"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'set-user-settings))
(common-lisp:progn
 (common-lisp:defun sign-up
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key client-id secret-hash username password
                     user-attributes validation-data)
   (common-lisp:declare
    (common-lisp:ignorable client-id secret-hash username password
     user-attributes validation-data))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-sign-up-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'cognito-idp-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/" "SignUp"
                                                        "2016-04-18"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'sign-up))
(common-lisp:progn
 (common-lisp:defun start-user-import-job
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key user-pool-id job-id)
   (common-lisp:declare (common-lisp:ignorable user-pool-id job-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-start-user-import-job-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'cognito-idp-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "StartUserImportJob"
                                                        "2016-04-18"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'start-user-import-job))
(common-lisp:progn
 (common-lisp:defun stop-user-import-job
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key user-pool-id job-id)
   (common-lisp:declare (common-lisp:ignorable user-pool-id job-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-stop-user-import-job-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'cognito-idp-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "StopUserImportJob"
                                                        "2016-04-18"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'stop-user-import-job))
(common-lisp:progn
 (common-lisp:defun update-device-status
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key access-token device-key
                     device-remembered-status)
   (common-lisp:declare
    (common-lisp:ignorable access-token device-key device-remembered-status))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-device-status-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'cognito-idp-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "UpdateDeviceStatus"
                                                        "2016-04-18"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'update-device-status))
(common-lisp:progn
 (common-lisp:defun update-group
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key group-name user-pool-id description
                     role-arn precedence)
   (common-lisp:declare
    (common-lisp:ignorable group-name user-pool-id description role-arn
     precedence))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-group-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'cognito-idp-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "UpdateGroup"
                                                        "2016-04-18"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'update-group))
(common-lisp:progn
 (common-lisp:defun update-identity-provider
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key user-pool-id provider-name
                     provider-details attribute-mapping idp-identifiers)
   (common-lisp:declare
    (common-lisp:ignorable user-pool-id provider-name provider-details
     attribute-mapping idp-identifiers))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-identity-provider-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'cognito-idp-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "UpdateIdentityProvider"
                                                        "2016-04-18"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'update-identity-provider))
(common-lisp:progn
 (common-lisp:defun update-resource-server
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key user-pool-id identifier name scopes)
   (common-lisp:declare
    (common-lisp:ignorable user-pool-id identifier name scopes))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-resource-server-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'cognito-idp-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "UpdateResourceServer"
                                                        "2016-04-18"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'update-resource-server))
(common-lisp:progn
 (common-lisp:defun update-user-attributes
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key user-attributes access-token)
   (common-lisp:declare (common-lisp:ignorable user-attributes access-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-user-attributes-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'cognito-idp-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "UpdateUserAttributes"
                                                        "2016-04-18"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'update-user-attributes))
(common-lisp:progn
 (common-lisp:defun update-user-pool
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key user-pool-id policies lambda-config
                     auto-verified-attributes sms-verification-message
                     email-verification-message email-verification-subject
                     verification-message-template sms-authentication-message
                     mfa-configuration device-configuration email-configuration
                     sms-configuration user-pool-tags admin-create-user-config)
   (common-lisp:declare
    (common-lisp:ignorable user-pool-id policies lambda-config
     auto-verified-attributes sms-verification-message
     email-verification-message email-verification-subject
     verification-message-template sms-authentication-message mfa-configuration
     device-configuration email-configuration sms-configuration user-pool-tags
     admin-create-user-config))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-user-pool-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'cognito-idp-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "UpdateUserPool"
                                                        "2016-04-18"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'update-user-pool))
(common-lisp:progn
 (common-lisp:defun update-user-pool-client
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key user-pool-id client-id client-name
                     refresh-token-validity read-attributes write-attributes
                     explicit-auth-flows supported-identity-providers
                     callback-urls logout-urls default-redirect-uri
                     allowed-oauth-flows allowed-oauth-scopes
                     allowed-oauth-flows-user-pool-client)
   (common-lisp:declare
    (common-lisp:ignorable user-pool-id client-id client-name
     refresh-token-validity read-attributes write-attributes
     explicit-auth-flows supported-identity-providers callback-urls logout-urls
     default-redirect-uri allowed-oauth-flows allowed-oauth-scopes
     allowed-oauth-flows-user-pool-client))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-user-pool-client-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'cognito-idp-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "UpdateUserPoolClient"
                                                        "2016-04-18"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'update-user-pool-client))
(common-lisp:progn
 (common-lisp:defun verify-user-attribute
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key access-token attribute-name code)
   (common-lisp:declare
    (common-lisp:ignorable access-token attribute-name code))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-verify-user-attribute-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'cognito-idp-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "VerifyUserAttribute"
                                                        "2016-04-18"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'verify-user-attribute))
