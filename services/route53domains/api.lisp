;; DO NOT EDIT: File is generated by AWS-SDK/GENERATOR.

(common-lisp:defpackage #:aws-sdk/services/route53domains/api
  (:use)
  (:nicknames #:aws/route53domains)
  (:import-from #:aws-sdk/generator/shape)
  (:import-from #:aws-sdk/generator/operation)
  (:import-from #:aws-sdk/api)
  (:import-from #:aws-sdk/request))
(common-lisp:in-package #:aws-sdk/services/route53domains/api)
(common-lisp:progn
 (common-lisp:defclass route53domains-request (aws-sdk/request:request)
                       common-lisp:nil
                       (:default-initargs :service "route53domains"))
 (common-lisp:export 'route53domains-request))
(common-lisp:deftype address-line () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (billing-record (:copier common-lisp:nil)
      (:conc-name "struct-shape-billing-record-"))
   (domain-name common-lisp:nil :type
    (common-lisp:or domain-name common-lisp:null))
   (operation common-lisp:nil :type
    (common-lisp:or operation-type common-lisp:null))
   (invoice-id common-lisp:nil :type
    (common-lisp:or invoice-id common-lisp:null))
   (bill-date common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null))
   (price common-lisp:nil :type (common-lisp:or price common-lisp:null)))
 (common-lisp:export (common-lisp:list 'billing-record 'make-billing-record))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input billing-record))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input billing-record))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'domain-name))
      (common-lisp:list
       (common-lisp:cons "DomainName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'operation))
      (common-lisp:list
       (common-lisp:cons "Operation"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'invoice-id))
      (common-lisp:list
       (common-lisp:cons "InvoiceId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'bill-date))
      (common-lisp:list
       (common-lisp:cons "BillDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'price))
      (common-lisp:list
       (common-lisp:cons "Price"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input billing-record))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype billing-records ()
   '(trivial-types:proper-list billing-record))
 (common-lisp:defun |make-billing-records|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list billing-record))
   aws-sdk/generator/shape::members))
(common-lisp:deftype boolean () 'common-lisp:boolean)
(common-lisp:progn
 (common-lisp:defstruct
     (check-domain-availability-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-check-domain-availability-request-"))
   (domain-name (common-lisp:error ":domain-name is required") :type
    (common-lisp:or domain-name common-lisp:null))
   (idn-lang-code common-lisp:nil :type
    (common-lisp:or lang-code common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'check-domain-availability-request
                    'make-check-domain-availability-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          check-domain-availability-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          check-domain-availability-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'domain-name))
      (common-lisp:list
       (common-lisp:cons "DomainName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'idn-lang-code))
      (common-lisp:list
       (common-lisp:cons "IdnLangCode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          check-domain-availability-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (check-domain-availability-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-check-domain-availability-response-"))
   (availability (common-lisp:error ":availability is required") :type
    (common-lisp:or domain-availability common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'check-domain-availability-response
                    'make-check-domain-availability-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          check-domain-availability-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          check-domain-availability-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'availability))
      (common-lisp:list
       (common-lisp:cons "Availability"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          check-domain-availability-response))
   common-lisp:nil))
(common-lisp:deftype city () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (contact-detail (:copier common-lisp:nil)
      (:conc-name "struct-shape-contact-detail-"))
   (first-name common-lisp:nil :type
    (common-lisp:or contact-name common-lisp:null))
   (last-name common-lisp:nil :type
    (common-lisp:or contact-name common-lisp:null))
   (contact-type common-lisp:nil :type
    (common-lisp:or contact-type common-lisp:null))
   (organization-name common-lisp:nil :type
    (common-lisp:or contact-name common-lisp:null))
   (address-line1 common-lisp:nil :type
    (common-lisp:or address-line common-lisp:null))
   (address-line2 common-lisp:nil :type
    (common-lisp:or address-line common-lisp:null))
   (city common-lisp:nil :type (common-lisp:or city common-lisp:null))
   (state common-lisp:nil :type (common-lisp:or state common-lisp:null))
   (country-code common-lisp:nil :type
    (common-lisp:or country-code common-lisp:null))
   (zip-code common-lisp:nil :type (common-lisp:or zip-code common-lisp:null))
   (phone-number common-lisp:nil :type
    (common-lisp:or contact-number common-lisp:null))
   (email common-lisp:nil :type (common-lisp:or email common-lisp:null))
   (fax common-lisp:nil :type (common-lisp:or contact-number common-lisp:null))
   (extra-params common-lisp:nil :type
    (common-lisp:or extra-param-list common-lisp:null)))
 (common-lisp:export (common-lisp:list 'contact-detail 'make-contact-detail))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input contact-detail))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input contact-detail))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'first-name))
      (common-lisp:list
       (common-lisp:cons "FirstName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'last-name))
      (common-lisp:list
       (common-lisp:cons "LastName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'contact-type))
      (common-lisp:list
       (common-lisp:cons "ContactType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'organization-name))
      (common-lisp:list
       (common-lisp:cons "OrganizationName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'address-line1))
      (common-lisp:list
       (common-lisp:cons "AddressLine1"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'address-line2))
      (common-lisp:list
       (common-lisp:cons "AddressLine2"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'city))
      (common-lisp:list
       (common-lisp:cons "City"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'state))
      (common-lisp:list
       (common-lisp:cons "State"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'country-code))
      (common-lisp:list
       (common-lisp:cons "CountryCode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'zip-code))
      (common-lisp:list
       (common-lisp:cons "ZipCode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'phone-number))
      (common-lisp:list
       (common-lisp:cons "PhoneNumber"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'email))
      (common-lisp:list
       (common-lisp:cons "Email"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'fax))
      (common-lisp:list
       (common-lisp:cons "Fax"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'extra-params))
      (common-lisp:list
       (common-lisp:cons "ExtraParams"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input contact-detail))
   common-lisp:nil))
(common-lisp:deftype contact-name () 'common-lisp:string)
(common-lisp:deftype contact-number () 'common-lisp:string)
(common-lisp:deftype contact-type () 'common-lisp:string)
(common-lisp:deftype country-code () 'common-lisp:string)
(common-lisp:deftype current-expiry-year () 'common-lisp:integer)
(common-lisp:deftype dnssec () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (delete-tags-for-domain-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-tags-for-domain-request-"))
   (domain-name (common-lisp:error ":domain-name is required") :type
    (common-lisp:or domain-name common-lisp:null))
   (tags-to-delete (common-lisp:error ":tags-to-delete is required") :type
    (common-lisp:or tag-key-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-tags-for-domain-request
                    'make-delete-tags-for-domain-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-tags-for-domain-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-tags-for-domain-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'domain-name))
      (common-lisp:list
       (common-lisp:cons "DomainName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags-to-delete))
      (common-lisp:list
       (common-lisp:cons "TagsToDelete"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-tags-for-domain-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-tags-for-domain-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-tags-for-domain-response-")))
 (common-lisp:export
  (common-lisp:list 'delete-tags-for-domain-response
                    'make-delete-tags-for-domain-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-tags-for-domain-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-tags-for-domain-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-tags-for-domain-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (disable-domain-auto-renew-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-disable-domain-auto-renew-request-"))
   (domain-name (common-lisp:error ":domain-name is required") :type
    (common-lisp:or domain-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'disable-domain-auto-renew-request
                    'make-disable-domain-auto-renew-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          disable-domain-auto-renew-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          disable-domain-auto-renew-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'domain-name))
      (common-lisp:list
       (common-lisp:cons "DomainName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          disable-domain-auto-renew-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (disable-domain-auto-renew-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-disable-domain-auto-renew-response-")))
 (common-lisp:export
  (common-lisp:list 'disable-domain-auto-renew-response
                    'make-disable-domain-auto-renew-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          disable-domain-auto-renew-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          disable-domain-auto-renew-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          disable-domain-auto-renew-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (disable-domain-transfer-lock-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-disable-domain-transfer-lock-request-"))
   (domain-name (common-lisp:error ":domain-name is required") :type
    (common-lisp:or domain-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'disable-domain-transfer-lock-request
                    'make-disable-domain-transfer-lock-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          disable-domain-transfer-lock-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          disable-domain-transfer-lock-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'domain-name))
      (common-lisp:list
       (common-lisp:cons "DomainName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          disable-domain-transfer-lock-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (disable-domain-transfer-lock-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-disable-domain-transfer-lock-response-"))
   (operation-id (common-lisp:error ":operation-id is required") :type
    (common-lisp:or operation-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'disable-domain-transfer-lock-response
                    'make-disable-domain-transfer-lock-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          disable-domain-transfer-lock-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          disable-domain-transfer-lock-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'operation-id))
      (common-lisp:list
       (common-lisp:cons "OperationId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          disable-domain-transfer-lock-response))
   common-lisp:nil))
(common-lisp:deftype domain-auth-code () 'common-lisp:string)
(common-lisp:deftype domain-availability () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (domain-limit-exceeded (:copier common-lisp:nil)
      (:conc-name "struct-shape-domain-limit-exceeded-"))
   (message common-lisp:nil :type
    (common-lisp:or error-message common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'domain-limit-exceeded 'make-domain-limit-exceeded))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          domain-limit-exceeded))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          domain-limit-exceeded))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'message))
      (common-lisp:list
       (common-lisp:cons "message"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          domain-limit-exceeded))
   common-lisp:nil))
(common-lisp:deftype domain-name () 'common-lisp:string)
(common-lisp:deftype domain-status () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype domain-status-list ()
   '(trivial-types:proper-list domain-status))
 (common-lisp:defun |make-domain-status-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list domain-status))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (domain-suggestion (:copier common-lisp:nil)
      (:conc-name "struct-shape-domain-suggestion-"))
   (domain-name common-lisp:nil :type
    (common-lisp:or domain-name common-lisp:null))
   (availability common-lisp:nil :type
    (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'domain-suggestion 'make-domain-suggestion))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input domain-suggestion))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input domain-suggestion))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'domain-name))
      (common-lisp:list
       (common-lisp:cons "DomainName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'availability))
      (common-lisp:list
       (common-lisp:cons "Availability"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input domain-suggestion))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype domain-suggestions-list ()
   '(trivial-types:proper-list domain-suggestion))
 (common-lisp:defun |make-domain-suggestions-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list domain-suggestion))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (domain-summary (:copier common-lisp:nil)
      (:conc-name "struct-shape-domain-summary-"))
   (domain-name (common-lisp:error ":domain-name is required") :type
    (common-lisp:or domain-name common-lisp:null))
   (auto-renew common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (transfer-lock common-lisp:nil :type
    (common-lisp:or boolean common-lisp:null))
   (expiry common-lisp:nil :type (common-lisp:or timestamp common-lisp:null)))
 (common-lisp:export (common-lisp:list 'domain-summary 'make-domain-summary))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input domain-summary))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input domain-summary))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'domain-name))
      (common-lisp:list
       (common-lisp:cons "DomainName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'auto-renew))
      (common-lisp:list
       (common-lisp:cons "AutoRenew"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'transfer-lock))
      (common-lisp:list
       (common-lisp:cons "TransferLock"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'expiry))
      (common-lisp:list
       (common-lisp:cons "Expiry"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input domain-summary))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype domain-summary-list ()
   '(trivial-types:proper-list domain-summary))
 (common-lisp:defun |make-domain-summary-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list domain-summary))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (duplicate-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-duplicate-request-"))
   (message common-lisp:nil :type
    (common-lisp:or error-message common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'duplicate-request 'make-duplicate-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input duplicate-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input duplicate-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'message))
      (common-lisp:list
       (common-lisp:cons "message"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input duplicate-request))
   common-lisp:nil))
(common-lisp:deftype duration-in-years () 'common-lisp:integer)
(common-lisp:deftype email () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (enable-domain-auto-renew-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-enable-domain-auto-renew-request-"))
   (domain-name (common-lisp:error ":domain-name is required") :type
    (common-lisp:or domain-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'enable-domain-auto-renew-request
                    'make-enable-domain-auto-renew-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          enable-domain-auto-renew-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          enable-domain-auto-renew-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'domain-name))
      (common-lisp:list
       (common-lisp:cons "DomainName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          enable-domain-auto-renew-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (enable-domain-auto-renew-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-enable-domain-auto-renew-response-")))
 (common-lisp:export
  (common-lisp:list 'enable-domain-auto-renew-response
                    'make-enable-domain-auto-renew-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          enable-domain-auto-renew-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          enable-domain-auto-renew-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          enable-domain-auto-renew-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (enable-domain-transfer-lock-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-enable-domain-transfer-lock-request-"))
   (domain-name (common-lisp:error ":domain-name is required") :type
    (common-lisp:or domain-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'enable-domain-transfer-lock-request
                    'make-enable-domain-transfer-lock-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          enable-domain-transfer-lock-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          enable-domain-transfer-lock-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'domain-name))
      (common-lisp:list
       (common-lisp:cons "DomainName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          enable-domain-transfer-lock-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (enable-domain-transfer-lock-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-enable-domain-transfer-lock-response-"))
   (operation-id (common-lisp:error ":operation-id is required") :type
    (common-lisp:or operation-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'enable-domain-transfer-lock-response
                    'make-enable-domain-transfer-lock-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          enable-domain-transfer-lock-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          enable-domain-transfer-lock-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'operation-id))
      (common-lisp:list
       (common-lisp:cons "OperationId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          enable-domain-transfer-lock-response))
   common-lisp:nil))
(common-lisp:deftype error-message () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (extra-param (:copier common-lisp:nil)
      (:conc-name "struct-shape-extra-param-"))
   (name (common-lisp:error ":name is required") :type
    (common-lisp:or extra-param-name common-lisp:null))
   (value (common-lisp:error ":value is required") :type
    (common-lisp:or extra-param-value common-lisp:null)))
 (common-lisp:export (common-lisp:list 'extra-param 'make-extra-param))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input extra-param))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input extra-param))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'value))
      (common-lisp:list
       (common-lisp:cons "Value"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input extra-param))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype extra-param-list ()
   '(trivial-types:proper-list extra-param))
 (common-lisp:defun |make-extra-param-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list extra-param))
   aws-sdk/generator/shape::members))
(common-lisp:deftype extra-param-name () 'common-lisp:string)
(common-lisp:deftype extra-param-value () 'common-lisp:string)
(common-lisp:deftype fiauth-key () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (get-contact-reachability-status-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-contact-reachability-status-request-"))
   (domain-name common-lisp:nil :type
    (common-lisp:or domain-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-contact-reachability-status-request
                    'make-get-contact-reachability-status-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-contact-reachability-status-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-contact-reachability-status-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'domain-name))
      (common-lisp:list
       (common-lisp:cons "domainName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-contact-reachability-status-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-contact-reachability-status-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-contact-reachability-status-response-"))
   (domain-name common-lisp:nil :type
    (common-lisp:or domain-name common-lisp:null))
   (status common-lisp:nil :type
    (common-lisp:or reachability-status common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-contact-reachability-status-response
                    'make-get-contact-reachability-status-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-contact-reachability-status-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-contact-reachability-status-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'domain-name))
      (common-lisp:list
       (common-lisp:cons "domainName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-contact-reachability-status-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-domain-detail-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-domain-detail-request-"))
   (domain-name (common-lisp:error ":domain-name is required") :type
    (common-lisp:or domain-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-domain-detail-request
                    'make-get-domain-detail-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-domain-detail-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-domain-detail-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'domain-name))
      (common-lisp:list
       (common-lisp:cons "DomainName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-domain-detail-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-domain-detail-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-domain-detail-response-"))
   (domain-name (common-lisp:error ":domain-name is required") :type
    (common-lisp:or domain-name common-lisp:null))
   (nameservers (common-lisp:error ":nameservers is required") :type
    (common-lisp:or nameserver-list common-lisp:null))
   (auto-renew common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (admin-contact (common-lisp:error ":admin-contact is required") :type
    (common-lisp:or contact-detail common-lisp:null))
   (registrant-contact (common-lisp:error ":registrant-contact is required")
    :type (common-lisp:or contact-detail common-lisp:null))
   (tech-contact (common-lisp:error ":tech-contact is required") :type
    (common-lisp:or contact-detail common-lisp:null))
   (admin-privacy common-lisp:nil :type
    (common-lisp:or boolean common-lisp:null))
   (registrant-privacy common-lisp:nil :type
    (common-lisp:or boolean common-lisp:null))
   (tech-privacy common-lisp:nil :type
    (common-lisp:or boolean common-lisp:null))
   (registrar-name common-lisp:nil :type
    (common-lisp:or registrar-name common-lisp:null))
   (who-is-server common-lisp:nil :type
    (common-lisp:or registrar-who-is-server common-lisp:null))
   (registrar-url common-lisp:nil :type
    (common-lisp:or registrar-url common-lisp:null))
   (abuse-contact-email common-lisp:nil :type
    (common-lisp:or email common-lisp:null))
   (abuse-contact-phone common-lisp:nil :type
    (common-lisp:or contact-number common-lisp:null))
   (registry-domain-id common-lisp:nil :type
    (common-lisp:or registry-domain-id common-lisp:null))
   (creation-date common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null))
   (updated-date common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null))
   (expiration-date common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null))
   (reseller common-lisp:nil :type (common-lisp:or reseller common-lisp:null))
   (dns-sec common-lisp:nil :type (common-lisp:or dnssec common-lisp:null))
   (status-list common-lisp:nil :type
    (common-lisp:or domain-status-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-domain-detail-response
                    'make-get-domain-detail-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-domain-detail-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-domain-detail-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'domain-name))
      (common-lisp:list
       (common-lisp:cons "DomainName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'nameservers))
      (common-lisp:list
       (common-lisp:cons "Nameservers"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'auto-renew))
      (common-lisp:list
       (common-lisp:cons "AutoRenew"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'admin-contact))
      (common-lisp:list
       (common-lisp:cons "AdminContact"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'registrant-contact))
      (common-lisp:list
       (common-lisp:cons "RegistrantContact"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tech-contact))
      (common-lisp:list
       (common-lisp:cons "TechContact"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'admin-privacy))
      (common-lisp:list
       (common-lisp:cons "AdminPrivacy"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'registrant-privacy))
      (common-lisp:list
       (common-lisp:cons "RegistrantPrivacy"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tech-privacy))
      (common-lisp:list
       (common-lisp:cons "TechPrivacy"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'registrar-name))
      (common-lisp:list
       (common-lisp:cons "RegistrarName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'who-is-server))
      (common-lisp:list
       (common-lisp:cons "WhoIsServer"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'registrar-url))
      (common-lisp:list
       (common-lisp:cons "RegistrarUrl"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'abuse-contact-email))
      (common-lisp:list
       (common-lisp:cons "AbuseContactEmail"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'abuse-contact-phone))
      (common-lisp:list
       (common-lisp:cons "AbuseContactPhone"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'registry-domain-id))
      (common-lisp:list
       (common-lisp:cons "RegistryDomainId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'creation-date))
      (common-lisp:list
       (common-lisp:cons "CreationDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'updated-date))
      (common-lisp:list
       (common-lisp:cons "UpdatedDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'expiration-date))
      (common-lisp:list
       (common-lisp:cons "ExpirationDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'reseller))
      (common-lisp:list
       (common-lisp:cons "Reseller"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'dns-sec))
      (common-lisp:list
       (common-lisp:cons "DnsSec"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status-list))
      (common-lisp:list
       (common-lisp:cons "StatusList"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-domain-detail-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-domain-suggestions-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-domain-suggestions-request-"))
   (domain-name (common-lisp:error ":domain-name is required") :type
    (common-lisp:or domain-name common-lisp:null))
   (suggestion-count (common-lisp:error ":suggestion-count is required") :type
    (common-lisp:or integer common-lisp:null))
   (only-available (common-lisp:error ":only-available is required") :type
    (common-lisp:or boolean common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-domain-suggestions-request
                    'make-get-domain-suggestions-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-domain-suggestions-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-domain-suggestions-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'domain-name))
      (common-lisp:list
       (common-lisp:cons "DomainName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'suggestion-count))
      (common-lisp:list
       (common-lisp:cons "SuggestionCount"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'only-available))
      (common-lisp:list
       (common-lisp:cons "OnlyAvailable"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-domain-suggestions-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-domain-suggestions-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-domain-suggestions-response-"))
   (suggestions-list common-lisp:nil :type
    (common-lisp:or domain-suggestions-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-domain-suggestions-response
                    'make-get-domain-suggestions-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-domain-suggestions-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-domain-suggestions-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'suggestions-list))
      (common-lisp:list
       (common-lisp:cons "SuggestionsList"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-domain-suggestions-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-operation-detail-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-operation-detail-request-"))
   (operation-id (common-lisp:error ":operation-id is required") :type
    (common-lisp:or operation-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-operation-detail-request
                    'make-get-operation-detail-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-operation-detail-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-operation-detail-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'operation-id))
      (common-lisp:list
       (common-lisp:cons "OperationId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-operation-detail-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-operation-detail-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-operation-detail-response-"))
   (operation-id common-lisp:nil :type
    (common-lisp:or operation-id common-lisp:null))
   (status common-lisp:nil :type
    (common-lisp:or operation-status common-lisp:null))
   (message common-lisp:nil :type
    (common-lisp:or error-message common-lisp:null))
   (domain-name common-lisp:nil :type
    (common-lisp:or domain-name common-lisp:null))
   (type common-lisp:nil :type
    (common-lisp:or operation-type common-lisp:null))
   (submitted-date common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-operation-detail-response
                    'make-get-operation-detail-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-operation-detail-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-operation-detail-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'operation-id))
      (common-lisp:list
       (common-lisp:cons "OperationId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "Status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'message))
      (common-lisp:list
       (common-lisp:cons "Message"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'domain-name))
      (common-lisp:list
       (common-lisp:cons "DomainName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'type))
      (common-lisp:list
       (common-lisp:cons "Type"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'submitted-date))
      (common-lisp:list
       (common-lisp:cons "SubmittedDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-operation-detail-response))
   common-lisp:nil))
(common-lisp:deftype glue-ip () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype glue-ip-list () '(trivial-types:proper-list glue-ip))
 (common-lisp:defun |make-glue-ip-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list glue-ip))
   aws-sdk/generator/shape::members))
(common-lisp:deftype host-name () 'common-lisp:string)
(common-lisp:deftype integer () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:defstruct
     (invalid-input (:copier common-lisp:nil)
      (:conc-name "struct-shape-invalid-input-"))
   (message common-lisp:nil :type
    (common-lisp:or error-message common-lisp:null)))
 (common-lisp:export (common-lisp:list 'invalid-input 'make-invalid-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input invalid-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input invalid-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'message))
      (common-lisp:list
       (common-lisp:cons "message"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input invalid-input))
   common-lisp:nil))
(common-lisp:deftype invoice-id () 'common-lisp:string)
(common-lisp:deftype lang-code () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (list-domains-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-domains-request-"))
   (marker common-lisp:nil :type (common-lisp:or page-marker common-lisp:null))
   (max-items common-lisp:nil :type
    (common-lisp:or page-max-items common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-domains-request 'make-list-domains-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input list-domains-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input list-domains-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'marker))
      (common-lisp:list
       (common-lisp:cons "Marker"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-items))
      (common-lisp:list
       (common-lisp:cons "MaxItems"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input list-domains-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-domains-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-domains-response-"))
   (domains (common-lisp:error ":domains is required") :type
    (common-lisp:or domain-summary-list common-lisp:null))
   (next-page-marker common-lisp:nil :type
    (common-lisp:or page-marker common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-domains-response 'make-list-domains-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-domains-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-domains-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'domains))
      (common-lisp:list
       (common-lisp:cons "Domains"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-page-marker))
      (common-lisp:list
       (common-lisp:cons "NextPageMarker"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-domains-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-operations-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-operations-request-"))
   (marker common-lisp:nil :type (common-lisp:or page-marker common-lisp:null))
   (max-items common-lisp:nil :type
    (common-lisp:or page-max-items common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-operations-request 'make-list-operations-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-operations-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-operations-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'marker))
      (common-lisp:list
       (common-lisp:cons "Marker"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-items))
      (common-lisp:list
       (common-lisp:cons "MaxItems"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-operations-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-operations-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-operations-response-"))
   (operations (common-lisp:error ":operations is required") :type
    (common-lisp:or operation-summary-list common-lisp:null))
   (next-page-marker common-lisp:nil :type
    (common-lisp:or page-marker common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-operations-response 'make-list-operations-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-operations-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-operations-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'operations))
      (common-lisp:list
       (common-lisp:cons "Operations"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-page-marker))
      (common-lisp:list
       (common-lisp:cons "NextPageMarker"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-operations-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-tags-for-domain-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-tags-for-domain-request-"))
   (domain-name (common-lisp:error ":domain-name is required") :type
    (common-lisp:or domain-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-tags-for-domain-request
                    'make-list-tags-for-domain-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-domain-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-domain-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'domain-name))
      (common-lisp:list
       (common-lisp:cons "DomainName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-domain-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-tags-for-domain-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-tags-for-domain-response-"))
   (tag-list (common-lisp:error ":tag-list is required") :type
    (common-lisp:or tag-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-tags-for-domain-response
                    'make-list-tags-for-domain-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-domain-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-domain-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tag-list))
      (common-lisp:list
       (common-lisp:cons "TagList"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-domain-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (nameserver (:copier common-lisp:nil)
      (:conc-name "struct-shape-nameserver-"))
   (name (common-lisp:error ":name is required") :type
    (common-lisp:or host-name common-lisp:null))
   (glue-ips common-lisp:nil :type
    (common-lisp:or glue-ip-list common-lisp:null)))
 (common-lisp:export (common-lisp:list 'nameserver 'make-nameserver))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input nameserver))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input nameserver))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'glue-ips))
      (common-lisp:list
       (common-lisp:cons "GlueIps"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input nameserver))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype nameserver-list ()
   '(trivial-types:proper-list nameserver))
 (common-lisp:defun |make-nameserver-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list nameserver))
   aws-sdk/generator/shape::members))
(common-lisp:deftype operation-id () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (operation-limit-exceeded (:copier common-lisp:nil)
      (:conc-name "struct-shape-operation-limit-exceeded-"))
   (message common-lisp:nil :type
    (common-lisp:or error-message common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'operation-limit-exceeded 'make-operation-limit-exceeded))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          operation-limit-exceeded))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          operation-limit-exceeded))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'message))
      (common-lisp:list
       (common-lisp:cons "message"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          operation-limit-exceeded))
   common-lisp:nil))
(common-lisp:deftype operation-status () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (operation-summary (:copier common-lisp:nil)
      (:conc-name "struct-shape-operation-summary-"))
   (operation-id (common-lisp:error ":operation-id is required") :type
    (common-lisp:or operation-id common-lisp:null))
   (status (common-lisp:error ":status is required") :type
    (common-lisp:or operation-status common-lisp:null))
   (type (common-lisp:error ":type is required") :type
    (common-lisp:or operation-type common-lisp:null))
   (submitted-date (common-lisp:error ":submitted-date is required") :type
    (common-lisp:or timestamp common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'operation-summary 'make-operation-summary))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input operation-summary))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input operation-summary))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'operation-id))
      (common-lisp:list
       (common-lisp:cons "OperationId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "Status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'type))
      (common-lisp:list
       (common-lisp:cons "Type"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'submitted-date))
      (common-lisp:list
       (common-lisp:cons "SubmittedDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input operation-summary))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype operation-summary-list ()
   '(trivial-types:proper-list operation-summary))
 (common-lisp:defun |make-operation-summary-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list operation-summary))
   aws-sdk/generator/shape::members))
(common-lisp:deftype operation-type () 'common-lisp:string)
(common-lisp:deftype page-marker () 'common-lisp:string)
(common-lisp:deftype page-max-items () 'common-lisp:integer)
(common-lisp:deftype price () 'common-lisp:double-float)
(common-lisp:deftype reachability-status () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (register-domain-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-register-domain-request-"))
   (domain-name (common-lisp:error ":domain-name is required") :type
    (common-lisp:or domain-name common-lisp:null))
   (idn-lang-code common-lisp:nil :type
    (common-lisp:or lang-code common-lisp:null))
   (duration-in-years (common-lisp:error ":duration-in-years is required")
    :type (common-lisp:or duration-in-years common-lisp:null))
   (auto-renew common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (admin-contact (common-lisp:error ":admin-contact is required") :type
    (common-lisp:or contact-detail common-lisp:null))
   (registrant-contact (common-lisp:error ":registrant-contact is required")
    :type (common-lisp:or contact-detail common-lisp:null))
   (tech-contact (common-lisp:error ":tech-contact is required") :type
    (common-lisp:or contact-detail common-lisp:null))
   (privacy-protect-admin-contact common-lisp:nil :type
    (common-lisp:or boolean common-lisp:null))
   (privacy-protect-registrant-contact common-lisp:nil :type
    (common-lisp:or boolean common-lisp:null))
   (privacy-protect-tech-contact common-lisp:nil :type
    (common-lisp:or boolean common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'register-domain-request 'make-register-domain-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          register-domain-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          register-domain-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'domain-name))
      (common-lisp:list
       (common-lisp:cons "DomainName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'idn-lang-code))
      (common-lisp:list
       (common-lisp:cons "IdnLangCode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'duration-in-years))
      (common-lisp:list
       (common-lisp:cons "DurationInYears"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'auto-renew))
      (common-lisp:list
       (common-lisp:cons "AutoRenew"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'admin-contact))
      (common-lisp:list
       (common-lisp:cons "AdminContact"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'registrant-contact))
      (common-lisp:list
       (common-lisp:cons "RegistrantContact"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tech-contact))
      (common-lisp:list
       (common-lisp:cons "TechContact"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'privacy-protect-admin-contact))
      (common-lisp:list
       (common-lisp:cons "PrivacyProtectAdminContact"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'privacy-protect-registrant-contact))
      (common-lisp:list
       (common-lisp:cons "PrivacyProtectRegistrantContact"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'privacy-protect-tech-contact))
      (common-lisp:list
       (common-lisp:cons "PrivacyProtectTechContact"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          register-domain-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (register-domain-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-register-domain-response-"))
   (operation-id (common-lisp:error ":operation-id is required") :type
    (common-lisp:or operation-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'register-domain-response 'make-register-domain-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          register-domain-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          register-domain-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'operation-id))
      (common-lisp:list
       (common-lisp:cons "OperationId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          register-domain-response))
   common-lisp:nil))
(common-lisp:deftype registrar-name () 'common-lisp:string)
(common-lisp:deftype registrar-url () 'common-lisp:string)
(common-lisp:deftype registrar-who-is-server () 'common-lisp:string)
(common-lisp:deftype registry-domain-id () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (renew-domain-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-renew-domain-request-"))
   (domain-name (common-lisp:error ":domain-name is required") :type
    (common-lisp:or domain-name common-lisp:null))
   (duration-in-years common-lisp:nil :type
    (common-lisp:or duration-in-years common-lisp:null))
   (current-expiry-year (common-lisp:error ":current-expiry-year is required")
    :type (common-lisp:or current-expiry-year common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'renew-domain-request 'make-renew-domain-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input renew-domain-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input renew-domain-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'domain-name))
      (common-lisp:list
       (common-lisp:cons "DomainName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'duration-in-years))
      (common-lisp:list
       (common-lisp:cons "DurationInYears"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'current-expiry-year))
      (common-lisp:list
       (common-lisp:cons "CurrentExpiryYear"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input renew-domain-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (renew-domain-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-renew-domain-response-"))
   (operation-id (common-lisp:error ":operation-id is required") :type
    (common-lisp:or operation-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'renew-domain-response 'make-renew-domain-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          renew-domain-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          renew-domain-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'operation-id))
      (common-lisp:list
       (common-lisp:cons "OperationId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          renew-domain-response))
   common-lisp:nil))
(common-lisp:deftype reseller () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (resend-contact-reachability-email-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-resend-contact-reachability-email-request-"))
   (domain-name common-lisp:nil :type
    (common-lisp:or domain-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'resend-contact-reachability-email-request
                    'make-resend-contact-reachability-email-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          resend-contact-reachability-email-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          resend-contact-reachability-email-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'domain-name))
      (common-lisp:list
       (common-lisp:cons "domainName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          resend-contact-reachability-email-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (resend-contact-reachability-email-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-resend-contact-reachability-email-response-"))
   (domain-name common-lisp:nil :type
    (common-lisp:or domain-name common-lisp:null))
   (email-address common-lisp:nil :type
    (common-lisp:or email common-lisp:null))
   (is-already-verified common-lisp:nil :type
    (common-lisp:or boolean common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'resend-contact-reachability-email-response
                    'make-resend-contact-reachability-email-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          resend-contact-reachability-email-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          resend-contact-reachability-email-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'domain-name))
      (common-lisp:list
       (common-lisp:cons "domainName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'email-address))
      (common-lisp:list
       (common-lisp:cons "emailAddress"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'is-already-verified))
      (common-lisp:list
       (common-lisp:cons "isAlreadyVerified"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          resend-contact-reachability-email-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (retrieve-domain-auth-code-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-retrieve-domain-auth-code-request-"))
   (domain-name (common-lisp:error ":domain-name is required") :type
    (common-lisp:or domain-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'retrieve-domain-auth-code-request
                    'make-retrieve-domain-auth-code-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          retrieve-domain-auth-code-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          retrieve-domain-auth-code-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'domain-name))
      (common-lisp:list
       (common-lisp:cons "DomainName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          retrieve-domain-auth-code-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (retrieve-domain-auth-code-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-retrieve-domain-auth-code-response-"))
   (auth-code (common-lisp:error ":auth-code is required") :type
    (common-lisp:or domain-auth-code common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'retrieve-domain-auth-code-response
                    'make-retrieve-domain-auth-code-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          retrieve-domain-auth-code-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          retrieve-domain-auth-code-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'auth-code))
      (common-lisp:list
       (common-lisp:cons "AuthCode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          retrieve-domain-auth-code-response))
   common-lisp:nil))
(common-lisp:deftype state () 'common-lisp:string)
(common-lisp:deftype string () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (tldrules-violation (:copier common-lisp:nil)
      (:conc-name "struct-shape-tldrules-violation-"))
   (message common-lisp:nil :type
    (common-lisp:or error-message common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'tldrules-violation 'make-tldrules-violation))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input tldrules-violation))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input tldrules-violation))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'message))
      (common-lisp:list
       (common-lisp:cons "message"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input tldrules-violation))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (tag (:copier common-lisp:nil) (:conc-name "struct-shape-tag-"))
   (key common-lisp:nil :type (common-lisp:or tag-key common-lisp:null))
   (value common-lisp:nil :type (common-lisp:or tag-value common-lisp:null)))
 (common-lisp:export (common-lisp:list 'tag 'make-tag))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input tag))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input tag))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'key))
      (common-lisp:list
       (common-lisp:cons "Key"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'value))
      (common-lisp:list
       (common-lisp:cons "Value"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input tag))
   common-lisp:nil))
(common-lisp:deftype tag-key () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype tag-key-list () '(trivial-types:proper-list tag-key))
 (common-lisp:defun |make-tag-key-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list tag-key))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype tag-list () '(trivial-types:proper-list tag))
 (common-lisp:defun |make-tag-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list tag))
   aws-sdk/generator/shape::members))
(common-lisp:deftype tag-value () 'common-lisp:string)
(common-lisp:deftype timestamp () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (transfer-domain-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-transfer-domain-request-"))
   (domain-name (common-lisp:error ":domain-name is required") :type
    (common-lisp:or domain-name common-lisp:null))
   (idn-lang-code common-lisp:nil :type
    (common-lisp:or lang-code common-lisp:null))
   (duration-in-years (common-lisp:error ":duration-in-years is required")
    :type (common-lisp:or duration-in-years common-lisp:null))
   (nameservers common-lisp:nil :type
    (common-lisp:or nameserver-list common-lisp:null))
   (auth-code common-lisp:nil :type
    (common-lisp:or domain-auth-code common-lisp:null))
   (auto-renew common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (admin-contact (common-lisp:error ":admin-contact is required") :type
    (common-lisp:or contact-detail common-lisp:null))
   (registrant-contact (common-lisp:error ":registrant-contact is required")
    :type (common-lisp:or contact-detail common-lisp:null))
   (tech-contact (common-lisp:error ":tech-contact is required") :type
    (common-lisp:or contact-detail common-lisp:null))
   (privacy-protect-admin-contact common-lisp:nil :type
    (common-lisp:or boolean common-lisp:null))
   (privacy-protect-registrant-contact common-lisp:nil :type
    (common-lisp:or boolean common-lisp:null))
   (privacy-protect-tech-contact common-lisp:nil :type
    (common-lisp:or boolean common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'transfer-domain-request 'make-transfer-domain-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          transfer-domain-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          transfer-domain-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'domain-name))
      (common-lisp:list
       (common-lisp:cons "DomainName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'idn-lang-code))
      (common-lisp:list
       (common-lisp:cons "IdnLangCode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'duration-in-years))
      (common-lisp:list
       (common-lisp:cons "DurationInYears"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'nameservers))
      (common-lisp:list
       (common-lisp:cons "Nameservers"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'auth-code))
      (common-lisp:list
       (common-lisp:cons "AuthCode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'auto-renew))
      (common-lisp:list
       (common-lisp:cons "AutoRenew"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'admin-contact))
      (common-lisp:list
       (common-lisp:cons "AdminContact"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'registrant-contact))
      (common-lisp:list
       (common-lisp:cons "RegistrantContact"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tech-contact))
      (common-lisp:list
       (common-lisp:cons "TechContact"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'privacy-protect-admin-contact))
      (common-lisp:list
       (common-lisp:cons "PrivacyProtectAdminContact"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'privacy-protect-registrant-contact))
      (common-lisp:list
       (common-lisp:cons "PrivacyProtectRegistrantContact"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'privacy-protect-tech-contact))
      (common-lisp:list
       (common-lisp:cons "PrivacyProtectTechContact"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          transfer-domain-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (transfer-domain-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-transfer-domain-response-"))
   (operation-id (common-lisp:error ":operation-id is required") :type
    (common-lisp:or operation-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'transfer-domain-response 'make-transfer-domain-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          transfer-domain-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          transfer-domain-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'operation-id))
      (common-lisp:list
       (common-lisp:cons "OperationId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          transfer-domain-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (unsupported-tld (:copier common-lisp:nil)
      (:conc-name "struct-shape-unsupported-tld-"))
   (message common-lisp:nil :type
    (common-lisp:or error-message common-lisp:null)))
 (common-lisp:export (common-lisp:list 'unsupported-tld 'make-unsupported-tld))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input unsupported-tld))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input unsupported-tld))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'message))
      (common-lisp:list
       (common-lisp:cons "message"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input unsupported-tld))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-domain-contact-privacy-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-domain-contact-privacy-request-"))
   (domain-name (common-lisp:error ":domain-name is required") :type
    (common-lisp:or domain-name common-lisp:null))
   (admin-privacy common-lisp:nil :type
    (common-lisp:or boolean common-lisp:null))
   (registrant-privacy common-lisp:nil :type
    (common-lisp:or boolean common-lisp:null))
   (tech-privacy common-lisp:nil :type
    (common-lisp:or boolean common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-domain-contact-privacy-request
                    'make-update-domain-contact-privacy-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-domain-contact-privacy-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-domain-contact-privacy-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'domain-name))
      (common-lisp:list
       (common-lisp:cons "DomainName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'admin-privacy))
      (common-lisp:list
       (common-lisp:cons "AdminPrivacy"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'registrant-privacy))
      (common-lisp:list
       (common-lisp:cons "RegistrantPrivacy"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tech-privacy))
      (common-lisp:list
       (common-lisp:cons "TechPrivacy"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-domain-contact-privacy-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-domain-contact-privacy-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-domain-contact-privacy-response-"))
   (operation-id (common-lisp:error ":operation-id is required") :type
    (common-lisp:or operation-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-domain-contact-privacy-response
                    'make-update-domain-contact-privacy-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-domain-contact-privacy-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-domain-contact-privacy-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'operation-id))
      (common-lisp:list
       (common-lisp:cons "OperationId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-domain-contact-privacy-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-domain-contact-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-domain-contact-request-"))
   (domain-name (common-lisp:error ":domain-name is required") :type
    (common-lisp:or domain-name common-lisp:null))
   (admin-contact common-lisp:nil :type
    (common-lisp:or contact-detail common-lisp:null))
   (registrant-contact common-lisp:nil :type
    (common-lisp:or contact-detail common-lisp:null))
   (tech-contact common-lisp:nil :type
    (common-lisp:or contact-detail common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-domain-contact-request
                    'make-update-domain-contact-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-domain-contact-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-domain-contact-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'domain-name))
      (common-lisp:list
       (common-lisp:cons "DomainName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'admin-contact))
      (common-lisp:list
       (common-lisp:cons "AdminContact"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'registrant-contact))
      (common-lisp:list
       (common-lisp:cons "RegistrantContact"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tech-contact))
      (common-lisp:list
       (common-lisp:cons "TechContact"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-domain-contact-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-domain-contact-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-domain-contact-response-"))
   (operation-id (common-lisp:error ":operation-id is required") :type
    (common-lisp:or operation-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-domain-contact-response
                    'make-update-domain-contact-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-domain-contact-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-domain-contact-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'operation-id))
      (common-lisp:list
       (common-lisp:cons "OperationId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-domain-contact-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-domain-nameservers-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-domain-nameservers-request-"))
   (domain-name (common-lisp:error ":domain-name is required") :type
    (common-lisp:or domain-name common-lisp:null))
   (fiauth-key common-lisp:nil :type
    (common-lisp:or fiauth-key common-lisp:null))
   (nameservers (common-lisp:error ":nameservers is required") :type
    (common-lisp:or nameserver-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-domain-nameservers-request
                    'make-update-domain-nameservers-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-domain-nameservers-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-domain-nameservers-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'domain-name))
      (common-lisp:list
       (common-lisp:cons "DomainName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'fiauth-key))
      (common-lisp:list
       (common-lisp:cons "FIAuthKey"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'nameservers))
      (common-lisp:list
       (common-lisp:cons "Nameservers"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-domain-nameservers-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-domain-nameservers-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-domain-nameservers-response-"))
   (operation-id (common-lisp:error ":operation-id is required") :type
    (common-lisp:or operation-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-domain-nameservers-response
                    'make-update-domain-nameservers-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-domain-nameservers-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-domain-nameservers-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'operation-id))
      (common-lisp:list
       (common-lisp:cons "OperationId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-domain-nameservers-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-tags-for-domain-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-tags-for-domain-request-"))
   (domain-name (common-lisp:error ":domain-name is required") :type
    (common-lisp:or domain-name common-lisp:null))
   (tags-to-update common-lisp:nil :type
    (common-lisp:or tag-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-tags-for-domain-request
                    'make-update-tags-for-domain-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-tags-for-domain-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-tags-for-domain-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'domain-name))
      (common-lisp:list
       (common-lisp:cons "DomainName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags-to-update))
      (common-lisp:list
       (common-lisp:cons "TagsToUpdate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-tags-for-domain-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-tags-for-domain-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-tags-for-domain-response-")))
 (common-lisp:export
  (common-lisp:list 'update-tags-for-domain-response
                    'make-update-tags-for-domain-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-tags-for-domain-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-tags-for-domain-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-tags-for-domain-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (view-billing-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-view-billing-request-"))
   (start common-lisp:nil :type (common-lisp:or timestamp common-lisp:null))
   (end common-lisp:nil :type (common-lisp:or timestamp common-lisp:null))
   (marker common-lisp:nil :type (common-lisp:or page-marker common-lisp:null))
   (max-items common-lisp:nil :type
    (common-lisp:or page-max-items common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'view-billing-request 'make-view-billing-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input view-billing-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input view-billing-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'start))
      (common-lisp:list
       (common-lisp:cons "Start"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'end))
      (common-lisp:list
       (common-lisp:cons "End"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'marker))
      (common-lisp:list
       (common-lisp:cons "Marker"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-items))
      (common-lisp:list
       (common-lisp:cons "MaxItems"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input view-billing-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (view-billing-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-view-billing-response-"))
   (next-page-marker common-lisp:nil :type
    (common-lisp:or page-marker common-lisp:null))
   (billing-records common-lisp:nil :type
    (common-lisp:or billing-records common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'view-billing-response 'make-view-billing-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          view-billing-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          view-billing-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-page-marker))
      (common-lisp:list
       (common-lisp:cons "NextPageMarker"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'billing-records))
      (common-lisp:list
       (common-lisp:cons "BillingRecords"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          view-billing-response))
   common-lisp:nil))
(common-lisp:deftype zip-code () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defun check-domain-availability
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key domain-name idn-lang-code)
   (common-lisp:declare (common-lisp:ignorable domain-name idn-lang-code))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-check-domain-availability-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'route53domains-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "CheckDomainAvailability"
                                                        "2014-05-15"))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'check-domain-availability))
(common-lisp:progn
 (common-lisp:defun delete-tags-for-domain
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key domain-name tags-to-delete)
   (common-lisp:declare (common-lisp:ignorable domain-name tags-to-delete))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-tags-for-domain-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'route53domains-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "DeleteTagsForDomain"
                                                        "2014-05-15"))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'delete-tags-for-domain))
(common-lisp:progn
 (common-lisp:defun disable-domain-auto-renew
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key domain-name)
   (common-lisp:declare (common-lisp:ignorable domain-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-disable-domain-auto-renew-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'route53domains-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "DisableDomainAutoRenew"
                                                        "2014-05-15"))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'disable-domain-auto-renew))
(common-lisp:progn
 (common-lisp:defun disable-domain-transfer-lock
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key domain-name)
   (common-lisp:declare (common-lisp:ignorable domain-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-disable-domain-transfer-lock-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'route53domains-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "DisableDomainTransferLock"
                                                        "2014-05-15"))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'disable-domain-transfer-lock))
(common-lisp:progn
 (common-lisp:defun enable-domain-auto-renew
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key domain-name)
   (common-lisp:declare (common-lisp:ignorable domain-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-enable-domain-auto-renew-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'route53domains-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "EnableDomainAutoRenew"
                                                        "2014-05-15"))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'enable-domain-auto-renew))
(common-lisp:progn
 (common-lisp:defun enable-domain-transfer-lock
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key domain-name)
   (common-lisp:declare (common-lisp:ignorable domain-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-enable-domain-transfer-lock-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'route53domains-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "EnableDomainTransferLock"
                                                        "2014-05-15"))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'enable-domain-transfer-lock))
(common-lisp:progn
 (common-lisp:defun get-contact-reachability-status
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key domain-name)
   (common-lisp:declare (common-lisp:ignorable domain-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-get-contact-reachability-status-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'route53domains-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "GetContactReachabilityStatus"
                                                        "2014-05-15"))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'get-contact-reachability-status))
(common-lisp:progn
 (common-lisp:defun get-domain-detail
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key domain-name)
   (common-lisp:declare (common-lisp:ignorable domain-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-domain-detail-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'route53domains-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "GetDomainDetail"
                                                        "2014-05-15"))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'get-domain-detail))
(common-lisp:progn
 (common-lisp:defun get-domain-suggestions
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key domain-name suggestion-count
                     only-available)
   (common-lisp:declare
    (common-lisp:ignorable domain-name suggestion-count only-available))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-domain-suggestions-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'route53domains-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "GetDomainSuggestions"
                                                        "2014-05-15"))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'get-domain-suggestions))
(common-lisp:progn
 (common-lisp:defun get-operation-detail
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key operation-id)
   (common-lisp:declare (common-lisp:ignorable operation-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-operation-detail-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'route53domains-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "GetOperationDetail"
                                                        "2014-05-15"))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'get-operation-detail))
(common-lisp:progn
 (common-lisp:defun list-domains
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key marker max-items)
   (common-lisp:declare (common-lisp:ignorable marker max-items))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-domains-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'route53domains-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "ListDomains"
                                                        "2014-05-15"))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'list-domains))
(common-lisp:progn
 (common-lisp:defun list-operations
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key marker max-items)
   (common-lisp:declare (common-lisp:ignorable marker max-items))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-operations-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'route53domains-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "ListOperations"
                                                        "2014-05-15"))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'list-operations))
(common-lisp:progn
 (common-lisp:defun list-tags-for-domain
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key domain-name)
   (common-lisp:declare (common-lisp:ignorable domain-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-tags-for-domain-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'route53domains-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "ListTagsForDomain"
                                                        "2014-05-15"))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'list-tags-for-domain))
(common-lisp:progn
 (common-lisp:defun register-domain
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key domain-name idn-lang-code
                     duration-in-years auto-renew admin-contact
                     registrant-contact tech-contact
                     privacy-protect-admin-contact
                     privacy-protect-registrant-contact
                     privacy-protect-tech-contact)
   (common-lisp:declare
    (common-lisp:ignorable domain-name idn-lang-code duration-in-years
     auto-renew admin-contact registrant-contact tech-contact
     privacy-protect-admin-contact privacy-protect-registrant-contact
     privacy-protect-tech-contact))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-register-domain-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'route53domains-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "RegisterDomain"
                                                        "2014-05-15"))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'register-domain))
(common-lisp:progn
 (common-lisp:defun renew-domain
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key domain-name duration-in-years
                     current-expiry-year)
   (common-lisp:declare
    (common-lisp:ignorable domain-name duration-in-years current-expiry-year))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-renew-domain-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'route53domains-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "RenewDomain"
                                                        "2014-05-15"))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'renew-domain))
(common-lisp:progn
 (common-lisp:defun resend-contact-reachability-email
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key domain-name)
   (common-lisp:declare (common-lisp:ignorable domain-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-resend-contact-reachability-email-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'route53domains-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "ResendContactReachabilityEmail"
                                                        "2014-05-15"))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'resend-contact-reachability-email))
(common-lisp:progn
 (common-lisp:defun retrieve-domain-auth-code
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key domain-name)
   (common-lisp:declare (common-lisp:ignorable domain-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-retrieve-domain-auth-code-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'route53domains-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "RetrieveDomainAuthCode"
                                                        "2014-05-15"))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'retrieve-domain-auth-code))
(common-lisp:progn
 (common-lisp:defun transfer-domain
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key domain-name idn-lang-code
                     duration-in-years nameservers auth-code auto-renew
                     admin-contact registrant-contact tech-contact
                     privacy-protect-admin-contact
                     privacy-protect-registrant-contact
                     privacy-protect-tech-contact)
   (common-lisp:declare
    (common-lisp:ignorable domain-name idn-lang-code duration-in-years
     nameservers auth-code auto-renew admin-contact registrant-contact
     tech-contact privacy-protect-admin-contact
     privacy-protect-registrant-contact privacy-protect-tech-contact))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-transfer-domain-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'route53domains-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "TransferDomain"
                                                        "2014-05-15"))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'transfer-domain))
(common-lisp:progn
 (common-lisp:defun update-domain-contact
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key domain-name admin-contact
                     registrant-contact tech-contact)
   (common-lisp:declare
    (common-lisp:ignorable domain-name admin-contact registrant-contact
     tech-contact))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-domain-contact-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'route53domains-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "UpdateDomainContact"
                                                        "2014-05-15"))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'update-domain-contact))
(common-lisp:progn
 (common-lisp:defun update-domain-contact-privacy
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key domain-name admin-privacy
                     registrant-privacy tech-privacy)
   (common-lisp:declare
    (common-lisp:ignorable domain-name admin-privacy registrant-privacy
     tech-privacy))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-update-domain-contact-privacy-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'route53domains-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "UpdateDomainContactPrivacy"
                                                        "2014-05-15"))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'update-domain-contact-privacy))
(common-lisp:progn
 (common-lisp:defun update-domain-nameservers
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key domain-name fiauth-key nameservers)
   (common-lisp:declare
    (common-lisp:ignorable domain-name fiauth-key nameservers))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-update-domain-nameservers-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'route53domains-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "UpdateDomainNameservers"
                                                        "2014-05-15"))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'update-domain-nameservers))
(common-lisp:progn
 (common-lisp:defun update-tags-for-domain
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key domain-name tags-to-update)
   (common-lisp:declare (common-lisp:ignorable domain-name tags-to-update))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-tags-for-domain-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'route53domains-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "UpdateTagsForDomain"
                                                        "2014-05-15"))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'update-tags-for-domain))
(common-lisp:progn
 (common-lisp:defun view-billing
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key start end marker max-items)
   (common-lisp:declare (common-lisp:ignorable start end marker max-items))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-view-billing-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'route53domains-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "ViewBilling"
                                                        "2014-05-15"))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'view-billing))
