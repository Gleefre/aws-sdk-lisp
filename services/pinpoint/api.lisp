;; DO NOT EDIT: File is generated by AWS-SDK/GENERATOR.

(common-lisp:defpackage #:aws-sdk/services/pinpoint/api
  (:use)
  (:nicknames #:aws/pinpoint)
  (:import-from #:aws-sdk/generator/shape)
  (:import-from #:aws-sdk/generator/operation)
  (:import-from #:aws-sdk/api)
  (:import-from #:aws-sdk/request)
  (:import-from #:aws-sdk/error))
(common-lisp:in-package #:aws-sdk/services/pinpoint/api)
(common-lisp:progn
 (common-lisp:defclass pinpoint-request (aws-sdk/request:request)
                       common-lisp:nil (:default-initargs :service "pinpoint"))
 (common-lisp:export 'pinpoint-request))
(common-lisp:progn
 (common-lisp:define-condition pinpoint-error
     (aws-sdk/error:aws-error)
     common-lisp:nil)
 (common-lisp:export 'pinpoint-error))
(common-lisp:progn
 (common-lisp:defstruct
     (apnschannel-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-apnschannel-request-"))
   (certificate common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (enabled common-lisp:nil :type
    (common-lisp:or |__boolean| common-lisp:null))
   (private-key common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'apnschannel-request 'make-apnschannel-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input apnschannel-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input apnschannel-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'certificate))
      (common-lisp:list
       (common-lisp:cons "Certificate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'enabled))
      (common-lisp:list
       (common-lisp:cons "Enabled"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'private-key))
      (common-lisp:list
       (common-lisp:cons "PrivateKey"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input apnschannel-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (apnschannel-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-apnschannel-response-"))
   (application-id common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (creation-date common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (enabled common-lisp:nil :type
    (common-lisp:or |__boolean| common-lisp:null))
   (id common-lisp:nil :type (common-lisp:or |__string| common-lisp:null))
   (is-archived common-lisp:nil :type
    (common-lisp:or |__boolean| common-lisp:null))
   (last-modified-by common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (last-modified-date common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (platform common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (version common-lisp:nil :type
    (common-lisp:or |__integer| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'apnschannel-response 'make-apnschannel-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input apnschannel-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input apnschannel-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'application-id))
      (common-lisp:list
       (common-lisp:cons "ApplicationId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'creation-date))
      (common-lisp:list
       (common-lisp:cons "CreationDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'enabled))
      (common-lisp:list
       (common-lisp:cons "Enabled"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "Id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'is-archived))
      (common-lisp:list
       (common-lisp:cons "IsArchived"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'last-modified-by))
      (common-lisp:list
       (common-lisp:cons "LastModifiedBy"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'last-modified-date))
      (common-lisp:list
       (common-lisp:cons "LastModifiedDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'platform))
      (common-lisp:list
       (common-lisp:cons "Platform"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'version))
      (common-lisp:list
       (common-lisp:cons "Version"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input apnschannel-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (apnsmessage (:copier common-lisp:nil)
      (:conc-name "struct-shape-apnsmessage-"))
   (action common-lisp:nil :type (common-lisp:or action common-lisp:null))
   (badge common-lisp:nil :type (common-lisp:or |__integer| common-lisp:null))
   (body common-lisp:nil :type (common-lisp:or |__string| common-lisp:null))
   (category common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (data common-lisp:nil :type (common-lisp:or map-of-string common-lisp:null))
   (media-url common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (raw-content common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (silent-push common-lisp:nil :type
    (common-lisp:or |__boolean| common-lisp:null))
   (sound common-lisp:nil :type (common-lisp:or |__string| common-lisp:null))
   (substitutions common-lisp:nil :type
    (common-lisp:or map-of-list-of-string common-lisp:null))
   (thread-id common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (title common-lisp:nil :type (common-lisp:or |__string| common-lisp:null))
   (url common-lisp:nil :type (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export (common-lisp:list 'apnsmessage 'make-apnsmessage))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input apnsmessage))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input apnsmessage))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'action))
      (common-lisp:list
       (common-lisp:cons "Action"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'badge))
      (common-lisp:list
       (common-lisp:cons "Badge"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'body))
      (common-lisp:list
       (common-lisp:cons "Body"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'category))
      (common-lisp:list
       (common-lisp:cons "Category"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'data))
      (common-lisp:list
       (common-lisp:cons "Data"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'media-url))
      (common-lisp:list
       (common-lisp:cons "MediaUrl"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'raw-content))
      (common-lisp:list
       (common-lisp:cons "RawContent"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'silent-push))
      (common-lisp:list
       (common-lisp:cons "SilentPush"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'sound))
      (common-lisp:list
       (common-lisp:cons "Sound"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'substitutions))
      (common-lisp:list
       (common-lisp:cons "Substitutions"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'thread-id))
      (common-lisp:list
       (common-lisp:cons "ThreadId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'title))
      (common-lisp:list
       (common-lisp:cons "Title"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'url))
      (common-lisp:list
       (common-lisp:cons "Url"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input apnsmessage))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (apnssandbox-channel-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-apnssandbox-channel-request-"))
   (certificate common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (enabled common-lisp:nil :type
    (common-lisp:or |__boolean| common-lisp:null))
   (private-key common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'apnssandbox-channel-request
                    'make-apnssandbox-channel-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          apnssandbox-channel-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          apnssandbox-channel-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'certificate))
      (common-lisp:list
       (common-lisp:cons "Certificate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'enabled))
      (common-lisp:list
       (common-lisp:cons "Enabled"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'private-key))
      (common-lisp:list
       (common-lisp:cons "PrivateKey"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          apnssandbox-channel-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (apnssandbox-channel-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-apnssandbox-channel-response-"))
   (application-id common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (creation-date common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (enabled common-lisp:nil :type
    (common-lisp:or |__boolean| common-lisp:null))
   (id common-lisp:nil :type (common-lisp:or |__string| common-lisp:null))
   (is-archived common-lisp:nil :type
    (common-lisp:or |__boolean| common-lisp:null))
   (last-modified-by common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (last-modified-date common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (platform common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (version common-lisp:nil :type
    (common-lisp:or |__integer| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'apnssandbox-channel-response
                    'make-apnssandbox-channel-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          apnssandbox-channel-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          apnssandbox-channel-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'application-id))
      (common-lisp:list
       (common-lisp:cons "ApplicationId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'creation-date))
      (common-lisp:list
       (common-lisp:cons "CreationDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'enabled))
      (common-lisp:list
       (common-lisp:cons "Enabled"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "Id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'is-archived))
      (common-lisp:list
       (common-lisp:cons "IsArchived"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'last-modified-by))
      (common-lisp:list
       (common-lisp:cons "LastModifiedBy"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'last-modified-date))
      (common-lisp:list
       (common-lisp:cons "LastModifiedDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'platform))
      (common-lisp:list
       (common-lisp:cons "Platform"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'version))
      (common-lisp:list
       (common-lisp:cons "Version"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          apnssandbox-channel-response))
   common-lisp:nil))
(common-lisp:deftype action () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (activities-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-activities-response-"))
   (item common-lisp:nil :type
    (common-lisp:or list-of-activity-response common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'activities-response 'make-activities-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input activities-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input activities-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'item))
      (common-lisp:list
       (common-lisp:cons "Item"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input activities-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (activity-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-activity-response-"))
   (application-id common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (campaign-id common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (end common-lisp:nil :type (common-lisp:or |__string| common-lisp:null))
   (id common-lisp:nil :type (common-lisp:or |__string| common-lisp:null))
   (result common-lisp:nil :type (common-lisp:or |__string| common-lisp:null))
   (scheduled-start common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (start common-lisp:nil :type (common-lisp:or |__string| common-lisp:null))
   (state common-lisp:nil :type (common-lisp:or |__string| common-lisp:null))
   (successful-endpoint-count common-lisp:nil :type
    (common-lisp:or |__integer| common-lisp:null))
   (timezones-completed-count common-lisp:nil :type
    (common-lisp:or |__integer| common-lisp:null))
   (timezones-total-count common-lisp:nil :type
    (common-lisp:or |__integer| common-lisp:null))
   (total-endpoint-count common-lisp:nil :type
    (common-lisp:or |__integer| common-lisp:null))
   (treatment-id common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'activity-response 'make-activity-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input activity-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input activity-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'application-id))
      (common-lisp:list
       (common-lisp:cons "ApplicationId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'campaign-id))
      (common-lisp:list
       (common-lisp:cons "CampaignId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'end))
      (common-lisp:list
       (common-lisp:cons "End"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "Id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'result))
      (common-lisp:list
       (common-lisp:cons "Result"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'scheduled-start))
      (common-lisp:list
       (common-lisp:cons "ScheduledStart"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'start))
      (common-lisp:list
       (common-lisp:cons "Start"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'state))
      (common-lisp:list
       (common-lisp:cons "State"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'successful-endpoint-count))
      (common-lisp:list
       (common-lisp:cons "SuccessfulEndpointCount"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'timezones-completed-count))
      (common-lisp:list
       (common-lisp:cons "TimezonesCompletedCount"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'timezones-total-count))
      (common-lisp:list
       (common-lisp:cons "TimezonesTotalCount"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'total-endpoint-count))
      (common-lisp:list
       (common-lisp:cons "TotalEndpointCount"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'treatment-id))
      (common-lisp:list
       (common-lisp:cons "TreatmentId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input activity-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (address-configuration (:copier common-lisp:nil)
      (:conc-name "struct-shape-address-configuration-"))
   (body-override common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (channel-type common-lisp:nil :type
    (common-lisp:or channel-type common-lisp:null))
   (context common-lisp:nil :type
    (common-lisp:or map-of-string common-lisp:null))
   (raw-content common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (substitutions common-lisp:nil :type
    (common-lisp:or map-of-list-of-string common-lisp:null))
   (title-override common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'address-configuration 'make-address-configuration))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          address-configuration))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          address-configuration))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'body-override))
      (common-lisp:list
       (common-lisp:cons "BodyOverride"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'channel-type))
      (common-lisp:list
       (common-lisp:cons "ChannelType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'context))
      (common-lisp:list
       (common-lisp:cons "Context"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'raw-content))
      (common-lisp:list
       (common-lisp:cons "RawContent"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'substitutions))
      (common-lisp:list
       (common-lisp:cons "Substitutions"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'title-override))
      (common-lisp:list
       (common-lisp:cons "TitleOverride"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          address-configuration))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (application-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-application-response-"))
   (id common-lisp:nil :type (common-lisp:or |__string| common-lisp:null))
   (name common-lisp:nil :type (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'application-response 'make-application-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input application-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input application-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "Id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input application-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (application-settings-resource (:copier common-lisp:nil)
      (:conc-name "struct-shape-application-settings-resource-"))
   (application-id common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (last-modified-date common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (limits common-lisp:nil :type
    (common-lisp:or campaign-limits common-lisp:null))
   (quiet-time common-lisp:nil :type
    (common-lisp:or quiet-time common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'application-settings-resource
                    'make-application-settings-resource))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          application-settings-resource))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          application-settings-resource))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'application-id))
      (common-lisp:list
       (common-lisp:cons "ApplicationId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'last-modified-date))
      (common-lisp:list
       (common-lisp:cons "LastModifiedDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'limits))
      (common-lisp:list
       (common-lisp:cons "Limits"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'quiet-time))
      (common-lisp:list
       (common-lisp:cons "QuietTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          application-settings-resource))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (applications-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-applications-response-"))
   (item common-lisp:nil :type
    (common-lisp:or list-of-application-response common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'applications-response 'make-applications-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          applications-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          applications-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'item))
      (common-lisp:list
       (common-lisp:cons "Item"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          applications-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (attribute-dimension (:copier common-lisp:nil)
      (:conc-name "struct-shape-attribute-dimension-"))
   (attribute-type common-lisp:nil :type
    (common-lisp:or attribute-type common-lisp:null))
   (values common-lisp:nil :type
    (common-lisp:or list-of-string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'attribute-dimension 'make-attribute-dimension))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input attribute-dimension))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input attribute-dimension))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'attribute-type))
      (common-lisp:list
       (common-lisp:cons "AttributeType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'values))
      (common-lisp:list
       (common-lisp:cons "Values"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input attribute-dimension))
   common-lisp:nil))
(common-lisp:deftype attribute-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:define-condition bad-request-exception
     (pinpoint-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       bad-request-exception-message)
      (request-id :initarg :request-id :initform common-lisp:nil :reader
       bad-request-exception-request-id)))
 (common-lisp:export
  (common-lisp:list 'bad-request-exception 'bad-request-exception-message
                    'bad-request-exception-request-id)))
(common-lisp:progn
 (common-lisp:defstruct
     (campaign-email-message (:copier common-lisp:nil)
      (:conc-name "struct-shape-campaign-email-message-"))
   (body common-lisp:nil :type (common-lisp:or |__string| common-lisp:null))
   (from-address common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (html-body common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (title common-lisp:nil :type (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'campaign-email-message 'make-campaign-email-message))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          campaign-email-message))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          campaign-email-message))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'body))
      (common-lisp:list
       (common-lisp:cons "Body"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'from-address))
      (common-lisp:list
       (common-lisp:cons "FromAddress"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'html-body))
      (common-lisp:list
       (common-lisp:cons "HtmlBody"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'title))
      (common-lisp:list
       (common-lisp:cons "Title"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          campaign-email-message))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (campaign-limits (:copier common-lisp:nil)
      (:conc-name "struct-shape-campaign-limits-"))
   (daily common-lisp:nil :type (common-lisp:or |__integer| common-lisp:null))
   (total common-lisp:nil :type (common-lisp:or |__integer| common-lisp:null)))
 (common-lisp:export (common-lisp:list 'campaign-limits 'make-campaign-limits))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input campaign-limits))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input campaign-limits))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'daily))
      (common-lisp:list
       (common-lisp:cons "Daily"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'total))
      (common-lisp:list
       (common-lisp:cons "Total"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input campaign-limits))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (campaign-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-campaign-response-"))
   (additional-treatments common-lisp:nil :type
    (common-lisp:or list-of-treatment-resource common-lisp:null))
   (application-id common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (creation-date common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (default-state common-lisp:nil :type
    (common-lisp:or campaign-state common-lisp:null))
   (description common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (holdout-percent common-lisp:nil :type
    (common-lisp:or |__integer| common-lisp:null))
   (id common-lisp:nil :type (common-lisp:or |__string| common-lisp:null))
   (is-paused common-lisp:nil :type
    (common-lisp:or |__boolean| common-lisp:null))
   (last-modified-date common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (limits common-lisp:nil :type
    (common-lisp:or campaign-limits common-lisp:null))
   (message-configuration common-lisp:nil :type
    (common-lisp:or message-configuration common-lisp:null))
   (name common-lisp:nil :type (common-lisp:or |__string| common-lisp:null))
   (schedule common-lisp:nil :type (common-lisp:or schedule common-lisp:null))
   (segment-id common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (segment-version common-lisp:nil :type
    (common-lisp:or |__integer| common-lisp:null))
   (state common-lisp:nil :type
    (common-lisp:or campaign-state common-lisp:null))
   (treatment-description common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (treatment-name common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (version common-lisp:nil :type
    (common-lisp:or |__integer| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'campaign-response 'make-campaign-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input campaign-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input campaign-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'additional-treatments))
      (common-lisp:list
       (common-lisp:cons "AdditionalTreatments"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'application-id))
      (common-lisp:list
       (common-lisp:cons "ApplicationId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'creation-date))
      (common-lisp:list
       (common-lisp:cons "CreationDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'default-state))
      (common-lisp:list
       (common-lisp:cons "DefaultState"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'holdout-percent))
      (common-lisp:list
       (common-lisp:cons "HoldoutPercent"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "Id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'is-paused))
      (common-lisp:list
       (common-lisp:cons "IsPaused"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'last-modified-date))
      (common-lisp:list
       (common-lisp:cons "LastModifiedDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'limits))
      (common-lisp:list
       (common-lisp:cons "Limits"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'message-configuration))
      (common-lisp:list
       (common-lisp:cons "MessageConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'schedule))
      (common-lisp:list
       (common-lisp:cons "Schedule"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'segment-id))
      (common-lisp:list
       (common-lisp:cons "SegmentId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'segment-version))
      (common-lisp:list
       (common-lisp:cons "SegmentVersion"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'state))
      (common-lisp:list
       (common-lisp:cons "State"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'treatment-description))
      (common-lisp:list
       (common-lisp:cons "TreatmentDescription"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'treatment-name))
      (common-lisp:list
       (common-lisp:cons "TreatmentName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'version))
      (common-lisp:list
       (common-lisp:cons "Version"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input campaign-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (campaign-sms-message (:copier common-lisp:nil)
      (:conc-name "struct-shape-campaign-sms-message-"))
   (body common-lisp:nil :type (common-lisp:or |__string| common-lisp:null))
   (message-type common-lisp:nil :type
    (common-lisp:or message-type common-lisp:null))
   (sender-id common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'campaign-sms-message 'make-campaign-sms-message))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input campaign-sms-message))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input campaign-sms-message))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'body))
      (common-lisp:list
       (common-lisp:cons "Body"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'message-type))
      (common-lisp:list
       (common-lisp:cons "MessageType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'sender-id))
      (common-lisp:list
       (common-lisp:cons "SenderId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input campaign-sms-message))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (campaign-state (:copier common-lisp:nil)
      (:conc-name "struct-shape-campaign-state-"))
   (campaign-status common-lisp:nil :type
    (common-lisp:or campaign-status common-lisp:null)))
 (common-lisp:export (common-lisp:list 'campaign-state 'make-campaign-state))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input campaign-state))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input campaign-state))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'campaign-status))
      (common-lisp:list
       (common-lisp:cons "CampaignStatus"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input campaign-state))
   common-lisp:nil))
(common-lisp:deftype campaign-status () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (campaigns-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-campaigns-response-"))
   (item common-lisp:nil :type
    (common-lisp:or list-of-campaign-response common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'campaigns-response 'make-campaigns-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input campaigns-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input campaigns-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'item))
      (common-lisp:list
       (common-lisp:cons "Item"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input campaigns-response))
   common-lisp:nil))
(common-lisp:deftype channel-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (create-app-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-app-request-"))
   (create-application-request
    (common-lisp:error ":create-application-request is required") :type
    (common-lisp:or create-application-request common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-app-request 'make-create-app-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input create-app-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input create-app-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'create-application-request))
      (common-lisp:list
       (common-lisp:cons "CreateApplicationRequest"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input create-app-request))
   (common-lisp:slot-value aws-sdk/generator/shape::input
                           'create-application-request)))
(common-lisp:progn
 (common-lisp:defstruct
     (create-app-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-app-response-"))
   (application-response
    (common-lisp:error ":application-response is required") :type
    (common-lisp:or application-response common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-app-response 'make-create-app-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input create-app-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input create-app-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'application-response))
      (common-lisp:list
       (common-lisp:cons "ApplicationResponse"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input create-app-response))
   (common-lisp:slot-value aws-sdk/generator/shape::input
                           'application-response)))
(common-lisp:progn
 (common-lisp:defstruct
     (create-application-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-application-request-"))
   (name common-lisp:nil :type (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-application-request
                    'make-create-application-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-application-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-application-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-application-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-campaign-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-campaign-request-"))
   (application-id (common-lisp:error ":application-id is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (write-campaign-request
    (common-lisp:error ":write-campaign-request is required") :type
    (common-lisp:or write-campaign-request common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-campaign-request 'make-create-campaign-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-campaign-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-campaign-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'write-campaign-request))
      (common-lisp:list
       (common-lisp:cons "WriteCampaignRequest"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-campaign-request))
   (common-lisp:slot-value aws-sdk/generator/shape::input
                           'write-campaign-request)))
(common-lisp:progn
 (common-lisp:defstruct
     (create-campaign-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-campaign-response-"))
   (campaign-response (common-lisp:error ":campaign-response is required")
    :type (common-lisp:or campaign-response common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-campaign-response 'make-create-campaign-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-campaign-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-campaign-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'campaign-response))
      (common-lisp:list
       (common-lisp:cons "CampaignResponse"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-campaign-response))
   (common-lisp:slot-value aws-sdk/generator/shape::input 'campaign-response)))
(common-lisp:progn
 (common-lisp:defstruct
     (create-import-job-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-import-job-request-"))
   (application-id (common-lisp:error ":application-id is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (import-job-request (common-lisp:error ":import-job-request is required")
    :type (common-lisp:or import-job-request common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-import-job-request
                    'make-create-import-job-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-import-job-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-import-job-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'import-job-request))
      (common-lisp:list
       (common-lisp:cons "ImportJobRequest"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-import-job-request))
   (common-lisp:slot-value aws-sdk/generator/shape::input 'import-job-request)))
(common-lisp:progn
 (common-lisp:defstruct
     (create-import-job-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-import-job-response-"))
   (import-job-response (common-lisp:error ":import-job-response is required")
    :type (common-lisp:or import-job-response common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-import-job-response
                    'make-create-import-job-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-import-job-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-import-job-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'import-job-response))
      (common-lisp:list
       (common-lisp:cons "ImportJobResponse"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-import-job-response))
   (common-lisp:slot-value aws-sdk/generator/shape::input
                           'import-job-response)))
(common-lisp:progn
 (common-lisp:defstruct
     (create-segment-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-segment-request-"))
   (application-id (common-lisp:error ":application-id is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (write-segment-request
    (common-lisp:error ":write-segment-request is required") :type
    (common-lisp:or write-segment-request common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-segment-request 'make-create-segment-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-segment-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-segment-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'write-segment-request))
      (common-lisp:list
       (common-lisp:cons "WriteSegmentRequest"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-segment-request))
   (common-lisp:slot-value aws-sdk/generator/shape::input
                           'write-segment-request)))
(common-lisp:progn
 (common-lisp:defstruct
     (create-segment-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-segment-response-"))
   (segment-response (common-lisp:error ":segment-response is required") :type
    (common-lisp:or segment-response common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-segment-response 'make-create-segment-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-segment-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-segment-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'segment-response))
      (common-lisp:list
       (common-lisp:cons "SegmentResponse"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-segment-response))
   (common-lisp:slot-value aws-sdk/generator/shape::input 'segment-response)))
(common-lisp:progn
 (common-lisp:defstruct
     (default-message (:copier common-lisp:nil)
      (:conc-name "struct-shape-default-message-"))
   (body common-lisp:nil :type (common-lisp:or |__string| common-lisp:null))
   (substitutions common-lisp:nil :type
    (common-lisp:or map-of-list-of-string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'default-message 'make-default-message))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input default-message))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input default-message))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'body))
      (common-lisp:list
       (common-lisp:cons "Body"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'substitutions))
      (common-lisp:list
       (common-lisp:cons "Substitutions"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input default-message))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (default-push-notification-message (:copier common-lisp:nil)
      (:conc-name "struct-shape-default-push-notification-message-"))
   (action common-lisp:nil :type (common-lisp:or action common-lisp:null))
   (body common-lisp:nil :type (common-lisp:or |__string| common-lisp:null))
   (data common-lisp:nil :type (common-lisp:or map-of-string common-lisp:null))
   (silent-push common-lisp:nil :type
    (common-lisp:or |__boolean| common-lisp:null))
   (substitutions common-lisp:nil :type
    (common-lisp:or map-of-list-of-string common-lisp:null))
   (title common-lisp:nil :type (common-lisp:or |__string| common-lisp:null))
   (url common-lisp:nil :type (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'default-push-notification-message
                    'make-default-push-notification-message))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          default-push-notification-message))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          default-push-notification-message))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'action))
      (common-lisp:list
       (common-lisp:cons "Action"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'body))
      (common-lisp:list
       (common-lisp:cons "Body"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'data))
      (common-lisp:list
       (common-lisp:cons "Data"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'silent-push))
      (common-lisp:list
       (common-lisp:cons "SilentPush"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'substitutions))
      (common-lisp:list
       (common-lisp:cons "Substitutions"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'title))
      (common-lisp:list
       (common-lisp:cons "Title"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'url))
      (common-lisp:list
       (common-lisp:cons "Url"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          default-push-notification-message))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-apns-channel-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-apns-channel-request-"))
   (application-id (common-lisp:error ":application-id is required") :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-apns-channel-request
                    'make-delete-apns-channel-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-apns-channel-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-apns-channel-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-apns-channel-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-apns-channel-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-apns-channel-response-"))
   (apnschannel-response
    (common-lisp:error ":apnschannel-response is required") :type
    (common-lisp:or apnschannel-response common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-apns-channel-response
                    'make-delete-apns-channel-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-apns-channel-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-apns-channel-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'apnschannel-response))
      (common-lisp:list
       (common-lisp:cons "APNSChannelResponse"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-apns-channel-response))
   (common-lisp:slot-value aws-sdk/generator/shape::input
                           'apnschannel-response)))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-apns-sandbox-channel-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-apns-sandbox-channel-request-"))
   (application-id (common-lisp:error ":application-id is required") :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-apns-sandbox-channel-request
                    'make-delete-apns-sandbox-channel-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-apns-sandbox-channel-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-apns-sandbox-channel-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-apns-sandbox-channel-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-apns-sandbox-channel-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-apns-sandbox-channel-response-"))
   (apnssandbox-channel-response
    (common-lisp:error ":apnssandbox-channel-response is required") :type
    (common-lisp:or apnssandbox-channel-response common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-apns-sandbox-channel-response
                    'make-delete-apns-sandbox-channel-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-apns-sandbox-channel-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-apns-sandbox-channel-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'apnssandbox-channel-response))
      (common-lisp:list
       (common-lisp:cons "APNSSandboxChannelResponse"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-apns-sandbox-channel-response))
   (common-lisp:slot-value aws-sdk/generator/shape::input
                           'apnssandbox-channel-response)))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-app-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-app-request-"))
   (application-id (common-lisp:error ":application-id is required") :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-app-request 'make-delete-app-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input delete-app-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input delete-app-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input delete-app-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-app-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-app-response-"))
   (application-response
    (common-lisp:error ":application-response is required") :type
    (common-lisp:or application-response common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-app-response 'make-delete-app-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input delete-app-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input delete-app-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'application-response))
      (common-lisp:list
       (common-lisp:cons "ApplicationResponse"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input delete-app-response))
   (common-lisp:slot-value aws-sdk/generator/shape::input
                           'application-response)))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-campaign-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-campaign-request-"))
   (application-id (common-lisp:error ":application-id is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (campaign-id (common-lisp:error ":campaign-id is required") :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-campaign-request 'make-delete-campaign-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-campaign-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-campaign-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-campaign-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-campaign-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-campaign-response-"))
   (campaign-response (common-lisp:error ":campaign-response is required")
    :type (common-lisp:or campaign-response common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-campaign-response 'make-delete-campaign-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-campaign-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-campaign-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'campaign-response))
      (common-lisp:list
       (common-lisp:cons "CampaignResponse"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-campaign-response))
   (common-lisp:slot-value aws-sdk/generator/shape::input 'campaign-response)))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-email-channel-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-email-channel-request-"))
   (application-id (common-lisp:error ":application-id is required") :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-email-channel-request
                    'make-delete-email-channel-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-email-channel-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-email-channel-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-email-channel-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-email-channel-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-email-channel-response-"))
   (email-channel-response
    (common-lisp:error ":email-channel-response is required") :type
    (common-lisp:or email-channel-response common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-email-channel-response
                    'make-delete-email-channel-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-email-channel-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-email-channel-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'email-channel-response))
      (common-lisp:list
       (common-lisp:cons "EmailChannelResponse"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-email-channel-response))
   (common-lisp:slot-value aws-sdk/generator/shape::input
                           'email-channel-response)))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-event-stream-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-event-stream-request-"))
   (application-id (common-lisp:error ":application-id is required") :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-event-stream-request
                    'make-delete-event-stream-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-event-stream-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-event-stream-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-event-stream-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-event-stream-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-event-stream-response-"))
   (event-stream (common-lisp:error ":event-stream is required") :type
    (common-lisp:or event-stream common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-event-stream-response
                    'make-delete-event-stream-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-event-stream-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-event-stream-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'event-stream))
      (common-lisp:list
       (common-lisp:cons "EventStream"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-event-stream-response))
   (common-lisp:slot-value aws-sdk/generator/shape::input 'event-stream)))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-gcm-channel-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-gcm-channel-request-"))
   (application-id (common-lisp:error ":application-id is required") :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-gcm-channel-request
                    'make-delete-gcm-channel-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-gcm-channel-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-gcm-channel-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-gcm-channel-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-gcm-channel-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-gcm-channel-response-"))
   (gcmchannel-response (common-lisp:error ":gcmchannel-response is required")
    :type (common-lisp:or gcmchannel-response common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-gcm-channel-response
                    'make-delete-gcm-channel-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-gcm-channel-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-gcm-channel-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'gcmchannel-response))
      (common-lisp:list
       (common-lisp:cons "GCMChannelResponse"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-gcm-channel-response))
   (common-lisp:slot-value aws-sdk/generator/shape::input
                           'gcmchannel-response)))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-segment-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-segment-request-"))
   (application-id (common-lisp:error ":application-id is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (segment-id (common-lisp:error ":segment-id is required") :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-segment-request 'make-delete-segment-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-segment-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-segment-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-segment-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-segment-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-segment-response-"))
   (segment-response (common-lisp:error ":segment-response is required") :type
    (common-lisp:or segment-response common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-segment-response 'make-delete-segment-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-segment-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-segment-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'segment-response))
      (common-lisp:list
       (common-lisp:cons "SegmentResponse"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-segment-response))
   (common-lisp:slot-value aws-sdk/generator/shape::input 'segment-response)))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-sms-channel-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-sms-channel-request-"))
   (application-id (common-lisp:error ":application-id is required") :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-sms-channel-request
                    'make-delete-sms-channel-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-sms-channel-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-sms-channel-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-sms-channel-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-sms-channel-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-sms-channel-response-"))
   (smschannel-response (common-lisp:error ":smschannel-response is required")
    :type (common-lisp:or smschannel-response common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-sms-channel-response
                    'make-delete-sms-channel-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-sms-channel-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-sms-channel-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'smschannel-response))
      (common-lisp:list
       (common-lisp:cons "SMSChannelResponse"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-sms-channel-response))
   (common-lisp:slot-value aws-sdk/generator/shape::input
                           'smschannel-response)))
(common-lisp:deftype delivery-status () 'common-lisp:string)
(common-lisp:deftype dimension-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (direct-message-configuration (:copier common-lisp:nil)
      (:conc-name "struct-shape-direct-message-configuration-"))
   (apnsmessage common-lisp:nil :type
    (common-lisp:or apnsmessage common-lisp:null))
   (default-message common-lisp:nil :type
    (common-lisp:or default-message common-lisp:null))
   (default-push-notification-message common-lisp:nil :type
    (common-lisp:or default-push-notification-message common-lisp:null))
   (gcmmessage common-lisp:nil :type
    (common-lisp:or gcmmessage common-lisp:null))
   (smsmessage common-lisp:nil :type
    (common-lisp:or smsmessage common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'direct-message-configuration
                    'make-direct-message-configuration))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          direct-message-configuration))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          direct-message-configuration))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'apnsmessage))
      (common-lisp:list
       (common-lisp:cons "APNSMessage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'default-message))
      (common-lisp:list
       (common-lisp:cons "DefaultMessage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'default-push-notification-message))
      (common-lisp:list
       (common-lisp:cons "DefaultPushNotificationMessage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'gcmmessage))
      (common-lisp:list
       (common-lisp:cons "GCMMessage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'smsmessage))
      (common-lisp:list
       (common-lisp:cons "SMSMessage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          direct-message-configuration))
   common-lisp:nil))
(common-lisp:deftype duration () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (email-channel-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-email-channel-request-"))
   (enabled common-lisp:nil :type
    (common-lisp:or |__boolean| common-lisp:null))
   (from-address common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (identity common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (role-arn common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'email-channel-request 'make-email-channel-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          email-channel-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          email-channel-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'enabled))
      (common-lisp:list
       (common-lisp:cons "Enabled"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'from-address))
      (common-lisp:list
       (common-lisp:cons "FromAddress"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'identity))
      (common-lisp:list
       (common-lisp:cons "Identity"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'role-arn))
      (common-lisp:list
       (common-lisp:cons "RoleArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          email-channel-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (email-channel-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-email-channel-response-"))
   (application-id common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (creation-date common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (enabled common-lisp:nil :type
    (common-lisp:or |__boolean| common-lisp:null))
   (from-address common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (id common-lisp:nil :type (common-lisp:or |__string| common-lisp:null))
   (identity common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (is-archived common-lisp:nil :type
    (common-lisp:or |__boolean| common-lisp:null))
   (last-modified-by common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (last-modified-date common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (platform common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (role-arn common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (version common-lisp:nil :type
    (common-lisp:or |__integer| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'email-channel-response 'make-email-channel-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          email-channel-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          email-channel-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'application-id))
      (common-lisp:list
       (common-lisp:cons "ApplicationId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'creation-date))
      (common-lisp:list
       (common-lisp:cons "CreationDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'enabled))
      (common-lisp:list
       (common-lisp:cons "Enabled"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'from-address))
      (common-lisp:list
       (common-lisp:cons "FromAddress"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "Id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'identity))
      (common-lisp:list
       (common-lisp:cons "Identity"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'is-archived))
      (common-lisp:list
       (common-lisp:cons "IsArchived"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'last-modified-by))
      (common-lisp:list
       (common-lisp:cons "LastModifiedBy"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'last-modified-date))
      (common-lisp:list
       (common-lisp:cons "LastModifiedDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'platform))
      (common-lisp:list
       (common-lisp:cons "Platform"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'role-arn))
      (common-lisp:list
       (common-lisp:cons "RoleArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'version))
      (common-lisp:list
       (common-lisp:cons "Version"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          email-channel-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (endpoint-batch-item (:copier common-lisp:nil)
      (:conc-name "struct-shape-endpoint-batch-item-"))
   (address common-lisp:nil :type (common-lisp:or |__string| common-lisp:null))
   (attributes common-lisp:nil :type
    (common-lisp:or map-of-list-of-string common-lisp:null))
   (channel-type common-lisp:nil :type
    (common-lisp:or channel-type common-lisp:null))
   (demographic common-lisp:nil :type
    (common-lisp:or endpoint-demographic common-lisp:null))
   (effective-date common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (endpoint-status common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (id common-lisp:nil :type (common-lisp:or |__string| common-lisp:null))
   (location common-lisp:nil :type
    (common-lisp:or endpoint-location common-lisp:null))
   (metrics common-lisp:nil :type
    (common-lisp:or map-of-double common-lisp:null))
   (opt-out common-lisp:nil :type (common-lisp:or |__string| common-lisp:null))
   (request-id common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (user common-lisp:nil :type
    (common-lisp:or endpoint-user common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'endpoint-batch-item 'make-endpoint-batch-item))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input endpoint-batch-item))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input endpoint-batch-item))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'address))
      (common-lisp:list
       (common-lisp:cons "Address"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'attributes))
      (common-lisp:list
       (common-lisp:cons "Attributes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'channel-type))
      (common-lisp:list
       (common-lisp:cons "ChannelType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'demographic))
      (common-lisp:list
       (common-lisp:cons "Demographic"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'effective-date))
      (common-lisp:list
       (common-lisp:cons "EffectiveDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'endpoint-status))
      (common-lisp:list
       (common-lisp:cons "EndpointStatus"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "Id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'location))
      (common-lisp:list
       (common-lisp:cons "Location"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'metrics))
      (common-lisp:list
       (common-lisp:cons "Metrics"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'opt-out))
      (common-lisp:list
       (common-lisp:cons "OptOut"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'request-id))
      (common-lisp:list
       (common-lisp:cons "RequestId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'user))
      (common-lisp:list
       (common-lisp:cons "User"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input endpoint-batch-item))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (endpoint-batch-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-endpoint-batch-request-"))
   (item common-lisp:nil :type
    (common-lisp:or list-of-endpoint-batch-item common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'endpoint-batch-request 'make-endpoint-batch-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          endpoint-batch-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          endpoint-batch-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'item))
      (common-lisp:list
       (common-lisp:cons "Item"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          endpoint-batch-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (endpoint-demographic (:copier common-lisp:nil)
      (:conc-name "struct-shape-endpoint-demographic-"))
   (app-version common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (locale common-lisp:nil :type (common-lisp:or |__string| common-lisp:null))
   (make common-lisp:nil :type (common-lisp:or |__string| common-lisp:null))
   (model common-lisp:nil :type (common-lisp:or |__string| common-lisp:null))
   (model-version common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (platform common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (platform-version common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (timezone common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'endpoint-demographic 'make-endpoint-demographic))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input endpoint-demographic))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input endpoint-demographic))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'app-version))
      (common-lisp:list
       (common-lisp:cons "AppVersion"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'locale))
      (common-lisp:list
       (common-lisp:cons "Locale"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'make))
      (common-lisp:list
       (common-lisp:cons "Make"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'model))
      (common-lisp:list
       (common-lisp:cons "Model"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'model-version))
      (common-lisp:list
       (common-lisp:cons "ModelVersion"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'platform))
      (common-lisp:list
       (common-lisp:cons "Platform"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'platform-version))
      (common-lisp:list
       (common-lisp:cons "PlatformVersion"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'timezone))
      (common-lisp:list
       (common-lisp:cons "Timezone"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input endpoint-demographic))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (endpoint-location (:copier common-lisp:nil)
      (:conc-name "struct-shape-endpoint-location-"))
   (city common-lisp:nil :type (common-lisp:or |__string| common-lisp:null))
   (country common-lisp:nil :type (common-lisp:or |__string| common-lisp:null))
   (latitude common-lisp:nil :type
    (common-lisp:or |__double| common-lisp:null))
   (longitude common-lisp:nil :type
    (common-lisp:or |__double| common-lisp:null))
   (postal-code common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (region common-lisp:nil :type (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'endpoint-location 'make-endpoint-location))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input endpoint-location))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input endpoint-location))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'city))
      (common-lisp:list
       (common-lisp:cons "City"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'country))
      (common-lisp:list
       (common-lisp:cons "Country"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'latitude))
      (common-lisp:list
       (common-lisp:cons "Latitude"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'longitude))
      (common-lisp:list
       (common-lisp:cons "Longitude"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'postal-code))
      (common-lisp:list
       (common-lisp:cons "PostalCode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'region))
      (common-lisp:list
       (common-lisp:cons "Region"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input endpoint-location))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (endpoint-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-endpoint-request-"))
   (address common-lisp:nil :type (common-lisp:or |__string| common-lisp:null))
   (attributes common-lisp:nil :type
    (common-lisp:or map-of-list-of-string common-lisp:null))
   (channel-type common-lisp:nil :type
    (common-lisp:or channel-type common-lisp:null))
   (demographic common-lisp:nil :type
    (common-lisp:or endpoint-demographic common-lisp:null))
   (effective-date common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (endpoint-status common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (location common-lisp:nil :type
    (common-lisp:or endpoint-location common-lisp:null))
   (metrics common-lisp:nil :type
    (common-lisp:or map-of-double common-lisp:null))
   (opt-out common-lisp:nil :type (common-lisp:or |__string| common-lisp:null))
   (request-id common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (user common-lisp:nil :type
    (common-lisp:or endpoint-user common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'endpoint-request 'make-endpoint-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input endpoint-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input endpoint-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'address))
      (common-lisp:list
       (common-lisp:cons "Address"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'attributes))
      (common-lisp:list
       (common-lisp:cons "Attributes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'channel-type))
      (common-lisp:list
       (common-lisp:cons "ChannelType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'demographic))
      (common-lisp:list
       (common-lisp:cons "Demographic"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'effective-date))
      (common-lisp:list
       (common-lisp:cons "EffectiveDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'endpoint-status))
      (common-lisp:list
       (common-lisp:cons "EndpointStatus"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'location))
      (common-lisp:list
       (common-lisp:cons "Location"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'metrics))
      (common-lisp:list
       (common-lisp:cons "Metrics"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'opt-out))
      (common-lisp:list
       (common-lisp:cons "OptOut"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'request-id))
      (common-lisp:list
       (common-lisp:cons "RequestId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'user))
      (common-lisp:list
       (common-lisp:cons "User"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input endpoint-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (endpoint-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-endpoint-response-"))
   (address common-lisp:nil :type (common-lisp:or |__string| common-lisp:null))
   (application-id common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (attributes common-lisp:nil :type
    (common-lisp:or map-of-list-of-string common-lisp:null))
   (channel-type common-lisp:nil :type
    (common-lisp:or channel-type common-lisp:null))
   (cohort-id common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (creation-date common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (demographic common-lisp:nil :type
    (common-lisp:or endpoint-demographic common-lisp:null))
   (effective-date common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (endpoint-status common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (id common-lisp:nil :type (common-lisp:or |__string| common-lisp:null))
   (location common-lisp:nil :type
    (common-lisp:or endpoint-location common-lisp:null))
   (metrics common-lisp:nil :type
    (common-lisp:or map-of-double common-lisp:null))
   (opt-out common-lisp:nil :type (common-lisp:or |__string| common-lisp:null))
   (request-id common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (shard-id common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (user common-lisp:nil :type
    (common-lisp:or endpoint-user common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'endpoint-response 'make-endpoint-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input endpoint-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input endpoint-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'address))
      (common-lisp:list
       (common-lisp:cons "Address"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'application-id))
      (common-lisp:list
       (common-lisp:cons "ApplicationId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'attributes))
      (common-lisp:list
       (common-lisp:cons "Attributes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'channel-type))
      (common-lisp:list
       (common-lisp:cons "ChannelType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'cohort-id))
      (common-lisp:list
       (common-lisp:cons "CohortId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'creation-date))
      (common-lisp:list
       (common-lisp:cons "CreationDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'demographic))
      (common-lisp:list
       (common-lisp:cons "Demographic"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'effective-date))
      (common-lisp:list
       (common-lisp:cons "EffectiveDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'endpoint-status))
      (common-lisp:list
       (common-lisp:cons "EndpointStatus"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "Id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'location))
      (common-lisp:list
       (common-lisp:cons "Location"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'metrics))
      (common-lisp:list
       (common-lisp:cons "Metrics"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'opt-out))
      (common-lisp:list
       (common-lisp:cons "OptOut"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'request-id))
      (common-lisp:list
       (common-lisp:cons "RequestId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'shard-id))
      (common-lisp:list
       (common-lisp:cons "ShardId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'user))
      (common-lisp:list
       (common-lisp:cons "User"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input endpoint-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (endpoint-user (:copier common-lisp:nil)
      (:conc-name "struct-shape-endpoint-user-"))
   (user-attributes common-lisp:nil :type
    (common-lisp:or map-of-list-of-string common-lisp:null))
   (user-id common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export (common-lisp:list 'endpoint-user 'make-endpoint-user))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input endpoint-user))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input endpoint-user))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'user-attributes))
      (common-lisp:list
       (common-lisp:cons "UserAttributes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'user-id))
      (common-lisp:list
       (common-lisp:cons "UserId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input endpoint-user))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (event-stream (:copier common-lisp:nil)
      (:conc-name "struct-shape-event-stream-"))
   (application-id common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (destination-stream-arn common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (external-id common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (last-modified-date common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (last-updated-by common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (role-arn common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export (common-lisp:list 'event-stream 'make-event-stream))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input event-stream))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input event-stream))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'application-id))
      (common-lisp:list
       (common-lisp:cons "ApplicationId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'destination-stream-arn))
      (common-lisp:list
       (common-lisp:cons "DestinationStreamArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'external-id))
      (common-lisp:list
       (common-lisp:cons "ExternalId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'last-modified-date))
      (common-lisp:list
       (common-lisp:cons "LastModifiedDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'last-updated-by))
      (common-lisp:list
       (common-lisp:cons "LastUpdatedBy"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'role-arn))
      (common-lisp:list
       (common-lisp:cons "RoleArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input event-stream))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:define-condition forbidden-exception
     (pinpoint-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       forbidden-exception-message)
      (request-id :initarg :request-id :initform common-lisp:nil :reader
       forbidden-exception-request-id)))
 (common-lisp:export
  (common-lisp:list 'forbidden-exception 'forbidden-exception-message
                    'forbidden-exception-request-id)))
(common-lisp:deftype format () 'common-lisp:string)
(common-lisp:deftype frequency () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (gcmchannel-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-gcmchannel-request-"))
   (api-key common-lisp:nil :type (common-lisp:or |__string| common-lisp:null))
   (enabled common-lisp:nil :type
    (common-lisp:or |__boolean| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'gcmchannel-request 'make-gcmchannel-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input gcmchannel-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input gcmchannel-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'api-key))
      (common-lisp:list
       (common-lisp:cons "ApiKey"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'enabled))
      (common-lisp:list
       (common-lisp:cons "Enabled"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input gcmchannel-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (gcmchannel-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-gcmchannel-response-"))
   (application-id common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (creation-date common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (credential common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (enabled common-lisp:nil :type
    (common-lisp:or |__boolean| common-lisp:null))
   (id common-lisp:nil :type (common-lisp:or |__string| common-lisp:null))
   (is-archived common-lisp:nil :type
    (common-lisp:or |__boolean| common-lisp:null))
   (last-modified-by common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (last-modified-date common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (platform common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (version common-lisp:nil :type
    (common-lisp:or |__integer| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'gcmchannel-response 'make-gcmchannel-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input gcmchannel-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input gcmchannel-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'application-id))
      (common-lisp:list
       (common-lisp:cons "ApplicationId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'creation-date))
      (common-lisp:list
       (common-lisp:cons "CreationDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'credential))
      (common-lisp:list
       (common-lisp:cons "Credential"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'enabled))
      (common-lisp:list
       (common-lisp:cons "Enabled"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "Id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'is-archived))
      (common-lisp:list
       (common-lisp:cons "IsArchived"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'last-modified-by))
      (common-lisp:list
       (common-lisp:cons "LastModifiedBy"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'last-modified-date))
      (common-lisp:list
       (common-lisp:cons "LastModifiedDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'platform))
      (common-lisp:list
       (common-lisp:cons "Platform"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'version))
      (common-lisp:list
       (common-lisp:cons "Version"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input gcmchannel-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (gcmmessage (:copier common-lisp:nil)
      (:conc-name "struct-shape-gcmmessage-"))
   (action common-lisp:nil :type (common-lisp:or action common-lisp:null))
   (body common-lisp:nil :type (common-lisp:or |__string| common-lisp:null))
   (collapse-key common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (data common-lisp:nil :type (common-lisp:or map-of-string common-lisp:null))
   (icon-reference common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (image-icon-url common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (image-url common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (raw-content common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (restricted-package-name common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (silent-push common-lisp:nil :type
    (common-lisp:or |__boolean| common-lisp:null))
   (small-image-icon-url common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (sound common-lisp:nil :type (common-lisp:or |__string| common-lisp:null))
   (substitutions common-lisp:nil :type
    (common-lisp:or map-of-list-of-string common-lisp:null))
   (title common-lisp:nil :type (common-lisp:or |__string| common-lisp:null))
   (url common-lisp:nil :type (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export (common-lisp:list 'gcmmessage 'make-gcmmessage))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input gcmmessage))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input gcmmessage))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'action))
      (common-lisp:list
       (common-lisp:cons "Action"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'body))
      (common-lisp:list
       (common-lisp:cons "Body"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'collapse-key))
      (common-lisp:list
       (common-lisp:cons "CollapseKey"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'data))
      (common-lisp:list
       (common-lisp:cons "Data"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'icon-reference))
      (common-lisp:list
       (common-lisp:cons "IconReference"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'image-icon-url))
      (common-lisp:list
       (common-lisp:cons "ImageIconUrl"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'image-url))
      (common-lisp:list
       (common-lisp:cons "ImageUrl"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'raw-content))
      (common-lisp:list
       (common-lisp:cons "RawContent"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'restricted-package-name))
      (common-lisp:list
       (common-lisp:cons "RestrictedPackageName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'silent-push))
      (common-lisp:list
       (common-lisp:cons "SilentPush"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'small-image-icon-url))
      (common-lisp:list
       (common-lisp:cons "SmallImageIconUrl"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'sound))
      (common-lisp:list
       (common-lisp:cons "Sound"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'substitutions))
      (common-lisp:list
       (common-lisp:cons "Substitutions"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'title))
      (common-lisp:list
       (common-lisp:cons "Title"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'url))
      (common-lisp:list
       (common-lisp:cons "Url"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input gcmmessage))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-apns-channel-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-apns-channel-request-"))
   (application-id (common-lisp:error ":application-id is required") :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-apns-channel-request 'make-get-apns-channel-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-apns-channel-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-apns-channel-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-apns-channel-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-apns-channel-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-apns-channel-response-"))
   (apnschannel-response
    (common-lisp:error ":apnschannel-response is required") :type
    (common-lisp:or apnschannel-response common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-apns-channel-response
                    'make-get-apns-channel-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-apns-channel-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-apns-channel-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'apnschannel-response))
      (common-lisp:list
       (common-lisp:cons "APNSChannelResponse"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-apns-channel-response))
   (common-lisp:slot-value aws-sdk/generator/shape::input
                           'apnschannel-response)))
(common-lisp:progn
 (common-lisp:defstruct
     (get-apns-sandbox-channel-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-apns-sandbox-channel-request-"))
   (application-id (common-lisp:error ":application-id is required") :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-apns-sandbox-channel-request
                    'make-get-apns-sandbox-channel-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-apns-sandbox-channel-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-apns-sandbox-channel-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-apns-sandbox-channel-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-apns-sandbox-channel-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-apns-sandbox-channel-response-"))
   (apnssandbox-channel-response
    (common-lisp:error ":apnssandbox-channel-response is required") :type
    (common-lisp:or apnssandbox-channel-response common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-apns-sandbox-channel-response
                    'make-get-apns-sandbox-channel-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-apns-sandbox-channel-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-apns-sandbox-channel-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'apnssandbox-channel-response))
      (common-lisp:list
       (common-lisp:cons "APNSSandboxChannelResponse"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-apns-sandbox-channel-response))
   (common-lisp:slot-value aws-sdk/generator/shape::input
                           'apnssandbox-channel-response)))
(common-lisp:progn
 (common-lisp:defstruct
     (get-app-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-app-request-"))
   (application-id (common-lisp:error ":application-id is required") :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export (common-lisp:list 'get-app-request 'make-get-app-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input get-app-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input get-app-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input get-app-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-app-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-app-response-"))
   (application-response
    (common-lisp:error ":application-response is required") :type
    (common-lisp:or application-response common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-app-response 'make-get-app-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input get-app-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input get-app-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'application-response))
      (common-lisp:list
       (common-lisp:cons "ApplicationResponse"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input get-app-response))
   (common-lisp:slot-value aws-sdk/generator/shape::input
                           'application-response)))
(common-lisp:progn
 (common-lisp:defstruct
     (get-application-settings-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-application-settings-request-"))
   (application-id (common-lisp:error ":application-id is required") :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-application-settings-request
                    'make-get-application-settings-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-application-settings-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-application-settings-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-application-settings-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-application-settings-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-application-settings-response-"))
   (application-settings-resource
    (common-lisp:error ":application-settings-resource is required") :type
    (common-lisp:or application-settings-resource common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-application-settings-response
                    'make-get-application-settings-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-application-settings-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-application-settings-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'application-settings-resource))
      (common-lisp:list
       (common-lisp:cons "ApplicationSettingsResource"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-application-settings-response))
   (common-lisp:slot-value aws-sdk/generator/shape::input
                           'application-settings-resource)))
(common-lisp:progn
 (common-lisp:defstruct
     (get-apps-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-apps-request-"))
   (page-size common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (token common-lisp:nil :type (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-apps-request 'make-get-apps-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input get-apps-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input get-apps-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input get-apps-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-apps-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-apps-response-"))
   (applications-response
    (common-lisp:error ":applications-response is required") :type
    (common-lisp:or applications-response common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-apps-response 'make-get-apps-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input get-apps-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input get-apps-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'applications-response))
      (common-lisp:list
       (common-lisp:cons "ApplicationsResponse"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input get-apps-response))
   (common-lisp:slot-value aws-sdk/generator/shape::input
                           'applications-response)))
(common-lisp:progn
 (common-lisp:defstruct
     (get-campaign-activities-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-campaign-activities-request-"))
   (application-id (common-lisp:error ":application-id is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (campaign-id (common-lisp:error ":campaign-id is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (page-size common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (token common-lisp:nil :type (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-campaign-activities-request
                    'make-get-campaign-activities-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-campaign-activities-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-campaign-activities-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-campaign-activities-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-campaign-activities-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-campaign-activities-response-"))
   (activities-response (common-lisp:error ":activities-response is required")
    :type (common-lisp:or activities-response common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-campaign-activities-response
                    'make-get-campaign-activities-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-campaign-activities-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-campaign-activities-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'activities-response))
      (common-lisp:list
       (common-lisp:cons "ActivitiesResponse"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-campaign-activities-response))
   (common-lisp:slot-value aws-sdk/generator/shape::input
                           'activities-response)))
(common-lisp:progn
 (common-lisp:defstruct
     (get-campaign-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-campaign-request-"))
   (application-id (common-lisp:error ":application-id is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (campaign-id (common-lisp:error ":campaign-id is required") :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-campaign-request 'make-get-campaign-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input get-campaign-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input get-campaign-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input get-campaign-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-campaign-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-campaign-response-"))
   (campaign-response (common-lisp:error ":campaign-response is required")
    :type (common-lisp:or campaign-response common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-campaign-response 'make-get-campaign-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-campaign-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-campaign-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'campaign-response))
      (common-lisp:list
       (common-lisp:cons "CampaignResponse"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-campaign-response))
   (common-lisp:slot-value aws-sdk/generator/shape::input 'campaign-response)))
(common-lisp:progn
 (common-lisp:defstruct
     (get-campaign-version-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-campaign-version-request-"))
   (application-id (common-lisp:error ":application-id is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (campaign-id (common-lisp:error ":campaign-id is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (version (common-lisp:error ":version is required") :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-campaign-version-request
                    'make-get-campaign-version-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-campaign-version-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-campaign-version-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-campaign-version-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-campaign-version-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-campaign-version-response-"))
   (campaign-response (common-lisp:error ":campaign-response is required")
    :type (common-lisp:or campaign-response common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-campaign-version-response
                    'make-get-campaign-version-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-campaign-version-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-campaign-version-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'campaign-response))
      (common-lisp:list
       (common-lisp:cons "CampaignResponse"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-campaign-version-response))
   (common-lisp:slot-value aws-sdk/generator/shape::input 'campaign-response)))
(common-lisp:progn
 (common-lisp:defstruct
     (get-campaign-versions-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-campaign-versions-request-"))
   (application-id (common-lisp:error ":application-id is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (campaign-id (common-lisp:error ":campaign-id is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (page-size common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (token common-lisp:nil :type (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-campaign-versions-request
                    'make-get-campaign-versions-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-campaign-versions-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-campaign-versions-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-campaign-versions-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-campaign-versions-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-campaign-versions-response-"))
   (campaigns-response (common-lisp:error ":campaigns-response is required")
    :type (common-lisp:or campaigns-response common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-campaign-versions-response
                    'make-get-campaign-versions-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-campaign-versions-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-campaign-versions-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'campaigns-response))
      (common-lisp:list
       (common-lisp:cons "CampaignsResponse"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-campaign-versions-response))
   (common-lisp:slot-value aws-sdk/generator/shape::input 'campaigns-response)))
(common-lisp:progn
 (common-lisp:defstruct
     (get-campaigns-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-campaigns-request-"))
   (application-id (common-lisp:error ":application-id is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (page-size common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (token common-lisp:nil :type (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-campaigns-request 'make-get-campaigns-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-campaigns-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-campaigns-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-campaigns-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-campaigns-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-campaigns-response-"))
   (campaigns-response (common-lisp:error ":campaigns-response is required")
    :type (common-lisp:or campaigns-response common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-campaigns-response 'make-get-campaigns-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-campaigns-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-campaigns-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'campaigns-response))
      (common-lisp:list
       (common-lisp:cons "CampaignsResponse"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-campaigns-response))
   (common-lisp:slot-value aws-sdk/generator/shape::input 'campaigns-response)))
(common-lisp:progn
 (common-lisp:defstruct
     (get-email-channel-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-email-channel-request-"))
   (application-id (common-lisp:error ":application-id is required") :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-email-channel-request
                    'make-get-email-channel-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-email-channel-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-email-channel-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-email-channel-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-email-channel-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-email-channel-response-"))
   (email-channel-response
    (common-lisp:error ":email-channel-response is required") :type
    (common-lisp:or email-channel-response common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-email-channel-response
                    'make-get-email-channel-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-email-channel-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-email-channel-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'email-channel-response))
      (common-lisp:list
       (common-lisp:cons "EmailChannelResponse"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-email-channel-response))
   (common-lisp:slot-value aws-sdk/generator/shape::input
                           'email-channel-response)))
(common-lisp:progn
 (common-lisp:defstruct
     (get-endpoint-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-endpoint-request-"))
   (application-id (common-lisp:error ":application-id is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (endpoint-id (common-lisp:error ":endpoint-id is required") :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-endpoint-request 'make-get-endpoint-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input get-endpoint-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input get-endpoint-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input get-endpoint-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-endpoint-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-endpoint-response-"))
   (endpoint-response (common-lisp:error ":endpoint-response is required")
    :type (common-lisp:or endpoint-response common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-endpoint-response 'make-get-endpoint-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-endpoint-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-endpoint-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'endpoint-response))
      (common-lisp:list
       (common-lisp:cons "EndpointResponse"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-endpoint-response))
   (common-lisp:slot-value aws-sdk/generator/shape::input 'endpoint-response)))
(common-lisp:progn
 (common-lisp:defstruct
     (get-event-stream-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-event-stream-request-"))
   (application-id (common-lisp:error ":application-id is required") :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-event-stream-request 'make-get-event-stream-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-event-stream-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-event-stream-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-event-stream-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-event-stream-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-event-stream-response-"))
   (event-stream (common-lisp:error ":event-stream is required") :type
    (common-lisp:or event-stream common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-event-stream-response
                    'make-get-event-stream-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-event-stream-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-event-stream-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'event-stream))
      (common-lisp:list
       (common-lisp:cons "EventStream"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-event-stream-response))
   (common-lisp:slot-value aws-sdk/generator/shape::input 'event-stream)))
(common-lisp:progn
 (common-lisp:defstruct
     (get-gcm-channel-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-gcm-channel-request-"))
   (application-id (common-lisp:error ":application-id is required") :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-gcm-channel-request 'make-get-gcm-channel-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-gcm-channel-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-gcm-channel-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-gcm-channel-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-gcm-channel-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-gcm-channel-response-"))
   (gcmchannel-response (common-lisp:error ":gcmchannel-response is required")
    :type (common-lisp:or gcmchannel-response common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-gcm-channel-response 'make-get-gcm-channel-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-gcm-channel-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-gcm-channel-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'gcmchannel-response))
      (common-lisp:list
       (common-lisp:cons "GCMChannelResponse"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-gcm-channel-response))
   (common-lisp:slot-value aws-sdk/generator/shape::input
                           'gcmchannel-response)))
(common-lisp:progn
 (common-lisp:defstruct
     (get-import-job-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-import-job-request-"))
   (application-id (common-lisp:error ":application-id is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (job-id (common-lisp:error ":job-id is required") :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-import-job-request 'make-get-import-job-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-import-job-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-import-job-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-import-job-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-import-job-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-import-job-response-"))
   (import-job-response (common-lisp:error ":import-job-response is required")
    :type (common-lisp:or import-job-response common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-import-job-response 'make-get-import-job-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-import-job-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-import-job-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'import-job-response))
      (common-lisp:list
       (common-lisp:cons "ImportJobResponse"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-import-job-response))
   (common-lisp:slot-value aws-sdk/generator/shape::input
                           'import-job-response)))
(common-lisp:progn
 (common-lisp:defstruct
     (get-import-jobs-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-import-jobs-request-"))
   (application-id (common-lisp:error ":application-id is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (page-size common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (token common-lisp:nil :type (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-import-jobs-request 'make-get-import-jobs-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-import-jobs-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-import-jobs-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-import-jobs-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-import-jobs-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-import-jobs-response-"))
   (import-jobs-response
    (common-lisp:error ":import-jobs-response is required") :type
    (common-lisp:or import-jobs-response common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-import-jobs-response 'make-get-import-jobs-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-import-jobs-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-import-jobs-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'import-jobs-response))
      (common-lisp:list
       (common-lisp:cons "ImportJobsResponse"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-import-jobs-response))
   (common-lisp:slot-value aws-sdk/generator/shape::input
                           'import-jobs-response)))
(common-lisp:progn
 (common-lisp:defstruct
     (get-segment-import-jobs-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-segment-import-jobs-request-"))
   (application-id (common-lisp:error ":application-id is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (page-size common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (segment-id (common-lisp:error ":segment-id is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (token common-lisp:nil :type (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-segment-import-jobs-request
                    'make-get-segment-import-jobs-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-segment-import-jobs-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-segment-import-jobs-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-segment-import-jobs-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-segment-import-jobs-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-segment-import-jobs-response-"))
   (import-jobs-response
    (common-lisp:error ":import-jobs-response is required") :type
    (common-lisp:or import-jobs-response common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-segment-import-jobs-response
                    'make-get-segment-import-jobs-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-segment-import-jobs-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-segment-import-jobs-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'import-jobs-response))
      (common-lisp:list
       (common-lisp:cons "ImportJobsResponse"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-segment-import-jobs-response))
   (common-lisp:slot-value aws-sdk/generator/shape::input
                           'import-jobs-response)))
(common-lisp:progn
 (common-lisp:defstruct
     (get-segment-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-segment-request-"))
   (application-id (common-lisp:error ":application-id is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (segment-id (common-lisp:error ":segment-id is required") :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-segment-request 'make-get-segment-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input get-segment-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input get-segment-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input get-segment-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-segment-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-segment-response-"))
   (segment-response (common-lisp:error ":segment-response is required") :type
    (common-lisp:or segment-response common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-segment-response 'make-get-segment-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input get-segment-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input get-segment-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'segment-response))
      (common-lisp:list
       (common-lisp:cons "SegmentResponse"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input get-segment-response))
   (common-lisp:slot-value aws-sdk/generator/shape::input 'segment-response)))
(common-lisp:progn
 (common-lisp:defstruct
     (get-segment-version-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-segment-version-request-"))
   (application-id (common-lisp:error ":application-id is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (segment-id (common-lisp:error ":segment-id is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (version (common-lisp:error ":version is required") :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-segment-version-request
                    'make-get-segment-version-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-segment-version-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-segment-version-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-segment-version-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-segment-version-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-segment-version-response-"))
   (segment-response (common-lisp:error ":segment-response is required") :type
    (common-lisp:or segment-response common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-segment-version-response
                    'make-get-segment-version-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-segment-version-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-segment-version-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'segment-response))
      (common-lisp:list
       (common-lisp:cons "SegmentResponse"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-segment-version-response))
   (common-lisp:slot-value aws-sdk/generator/shape::input 'segment-response)))
(common-lisp:progn
 (common-lisp:defstruct
     (get-segment-versions-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-segment-versions-request-"))
   (application-id (common-lisp:error ":application-id is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (page-size common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (segment-id (common-lisp:error ":segment-id is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (token common-lisp:nil :type (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-segment-versions-request
                    'make-get-segment-versions-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-segment-versions-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-segment-versions-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-segment-versions-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-segment-versions-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-segment-versions-response-"))
   (segments-response (common-lisp:error ":segments-response is required")
    :type (common-lisp:or segments-response common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-segment-versions-response
                    'make-get-segment-versions-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-segment-versions-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-segment-versions-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'segments-response))
      (common-lisp:list
       (common-lisp:cons "SegmentsResponse"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-segment-versions-response))
   (common-lisp:slot-value aws-sdk/generator/shape::input 'segments-response)))
(common-lisp:progn
 (common-lisp:defstruct
     (get-segments-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-segments-request-"))
   (application-id (common-lisp:error ":application-id is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (page-size common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (token common-lisp:nil :type (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-segments-request 'make-get-segments-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input get-segments-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input get-segments-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input get-segments-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-segments-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-segments-response-"))
   (segments-response (common-lisp:error ":segments-response is required")
    :type (common-lisp:or segments-response common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-segments-response 'make-get-segments-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-segments-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-segments-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'segments-response))
      (common-lisp:list
       (common-lisp:cons "SegmentsResponse"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-segments-response))
   (common-lisp:slot-value aws-sdk/generator/shape::input 'segments-response)))
(common-lisp:progn
 (common-lisp:defstruct
     (get-sms-channel-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-sms-channel-request-"))
   (application-id (common-lisp:error ":application-id is required") :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-sms-channel-request 'make-get-sms-channel-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-sms-channel-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-sms-channel-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-sms-channel-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-sms-channel-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-sms-channel-response-"))
   (smschannel-response (common-lisp:error ":smschannel-response is required")
    :type (common-lisp:or smschannel-response common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-sms-channel-response 'make-get-sms-channel-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-sms-channel-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-sms-channel-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'smschannel-response))
      (common-lisp:list
       (common-lisp:cons "SMSChannelResponse"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-sms-channel-response))
   (common-lisp:slot-value aws-sdk/generator/shape::input
                           'smschannel-response)))
(common-lisp:progn
 (common-lisp:defstruct
     (import-job-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-import-job-request-"))
   (define-segment common-lisp:nil :type
    (common-lisp:or |__boolean| common-lisp:null))
   (external-id common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (format common-lisp:nil :type (common-lisp:or format common-lisp:null))
   (register-endpoints common-lisp:nil :type
    (common-lisp:or |__boolean| common-lisp:null))
   (role-arn common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (s3url common-lisp:nil :type (common-lisp:or |__string| common-lisp:null))
   (segment-id common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (segment-name common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'import-job-request 'make-import-job-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input import-job-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input import-job-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'define-segment))
      (common-lisp:list
       (common-lisp:cons "DefineSegment"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'external-id))
      (common-lisp:list
       (common-lisp:cons "ExternalId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'format))
      (common-lisp:list
       (common-lisp:cons "Format"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'register-endpoints))
      (common-lisp:list
       (common-lisp:cons "RegisterEndpoints"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'role-arn))
      (common-lisp:list
       (common-lisp:cons "RoleArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 's3url))
      (common-lisp:list
       (common-lisp:cons "S3Url"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'segment-id))
      (common-lisp:list
       (common-lisp:cons "SegmentId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'segment-name))
      (common-lisp:list
       (common-lisp:cons "SegmentName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input import-job-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (import-job-resource (:copier common-lisp:nil)
      (:conc-name "struct-shape-import-job-resource-"))
   (define-segment common-lisp:nil :type
    (common-lisp:or |__boolean| common-lisp:null))
   (external-id common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (format common-lisp:nil :type (common-lisp:or format common-lisp:null))
   (register-endpoints common-lisp:nil :type
    (common-lisp:or |__boolean| common-lisp:null))
   (role-arn common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (s3url common-lisp:nil :type (common-lisp:or |__string| common-lisp:null))
   (segment-id common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (segment-name common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'import-job-resource 'make-import-job-resource))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input import-job-resource))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input import-job-resource))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'define-segment))
      (common-lisp:list
       (common-lisp:cons "DefineSegment"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'external-id))
      (common-lisp:list
       (common-lisp:cons "ExternalId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'format))
      (common-lisp:list
       (common-lisp:cons "Format"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'register-endpoints))
      (common-lisp:list
       (common-lisp:cons "RegisterEndpoints"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'role-arn))
      (common-lisp:list
       (common-lisp:cons "RoleArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 's3url))
      (common-lisp:list
       (common-lisp:cons "S3Url"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'segment-id))
      (common-lisp:list
       (common-lisp:cons "SegmentId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'segment-name))
      (common-lisp:list
       (common-lisp:cons "SegmentName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input import-job-resource))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (import-job-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-import-job-response-"))
   (application-id common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (completed-pieces common-lisp:nil :type
    (common-lisp:or |__integer| common-lisp:null))
   (completion-date common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (creation-date common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (definition common-lisp:nil :type
    (common-lisp:or import-job-resource common-lisp:null))
   (failed-pieces common-lisp:nil :type
    (common-lisp:or |__integer| common-lisp:null))
   (failures common-lisp:nil :type
    (common-lisp:or list-of-string common-lisp:null))
   (id common-lisp:nil :type (common-lisp:or |__string| common-lisp:null))
   (job-status common-lisp:nil :type
    (common-lisp:or job-status common-lisp:null))
   (total-failures common-lisp:nil :type
    (common-lisp:or |__integer| common-lisp:null))
   (total-pieces common-lisp:nil :type
    (common-lisp:or |__integer| common-lisp:null))
   (total-processed common-lisp:nil :type
    (common-lisp:or |__integer| common-lisp:null))
   (type common-lisp:nil :type (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'import-job-response 'make-import-job-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input import-job-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input import-job-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'application-id))
      (common-lisp:list
       (common-lisp:cons "ApplicationId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'completed-pieces))
      (common-lisp:list
       (common-lisp:cons "CompletedPieces"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'completion-date))
      (common-lisp:list
       (common-lisp:cons "CompletionDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'creation-date))
      (common-lisp:list
       (common-lisp:cons "CreationDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'definition))
      (common-lisp:list
       (common-lisp:cons "Definition"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'failed-pieces))
      (common-lisp:list
       (common-lisp:cons "FailedPieces"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'failures))
      (common-lisp:list
       (common-lisp:cons "Failures"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "Id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-status))
      (common-lisp:list
       (common-lisp:cons "JobStatus"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'total-failures))
      (common-lisp:list
       (common-lisp:cons "TotalFailures"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'total-pieces))
      (common-lisp:list
       (common-lisp:cons "TotalPieces"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'total-processed))
      (common-lisp:list
       (common-lisp:cons "TotalProcessed"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'type))
      (common-lisp:list
       (common-lisp:cons "Type"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input import-job-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (import-jobs-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-import-jobs-response-"))
   (item common-lisp:nil :type
    (common-lisp:or list-of-import-job-response common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'import-jobs-response 'make-import-jobs-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input import-jobs-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input import-jobs-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'item))
      (common-lisp:list
       (common-lisp:cons "Item"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input import-jobs-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:define-condition internal-server-error-exception
     (pinpoint-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       internal-server-error-exception-message)
      (request-id :initarg :request-id :initform common-lisp:nil :reader
       internal-server-error-exception-request-id)))
 (common-lisp:export
  (common-lisp:list 'internal-server-error-exception
                    'internal-server-error-exception-message
                    'internal-server-error-exception-request-id)))
(common-lisp:deftype job-status () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype list-of-activity-response ()
   '(trivial-types:proper-list activity-response))
 (common-lisp:defun |make-list-of-activity-response|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list activity-response))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype list-of-application-response ()
   '(trivial-types:proper-list application-response))
 (common-lisp:defun |make-list-of-application-response|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list application-response))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype list-of-campaign-response ()
   '(trivial-types:proper-list campaign-response))
 (common-lisp:defun |make-list-of-campaign-response|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list campaign-response))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype list-of-endpoint-batch-item ()
   '(trivial-types:proper-list endpoint-batch-item))
 (common-lisp:defun |make-list-of-endpoint-batch-item|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list endpoint-batch-item))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype list-of-import-job-response ()
   '(trivial-types:proper-list import-job-response))
 (common-lisp:defun |make-list-of-import-job-response|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list import-job-response))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype list-of-segment-response ()
   '(trivial-types:proper-list segment-response))
 (common-lisp:defun |make-list-of-segment-response|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list segment-response))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype list-of-treatment-resource ()
   '(trivial-types:proper-list treatment-resource))
 (common-lisp:defun |make-list-of-treatment-resource|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list treatment-resource))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype list-of-write-treatment-resource ()
   '(trivial-types:proper-list write-treatment-resource))
 (common-lisp:defun |make-list-of-write-treatment-resource|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            write-treatment-resource))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype list-of-string ()
   '(trivial-types:proper-list |__string|))
 (common-lisp:defun |make-list-of-string|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list |__string|))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype map-of-address-configuration () 'common-lisp:hash-table)
 (common-lisp:defun |make-map-of-address-configuration|
                    (aws-sdk/generator/shape::key-values)
   (common-lisp:etypecase aws-sdk/generator/shape::key-values
     (common-lisp:hash-table aws-sdk/generator/shape::key-values)
     (common-lisp:list
      (alexandria:alist-hash-table aws-sdk/generator/shape::key-values)))))
(common-lisp:progn
 (common-lisp:deftype map-of-attribute-dimension () 'common-lisp:hash-table)
 (common-lisp:defun |make-map-of-attribute-dimension|
                    (aws-sdk/generator/shape::key-values)
   (common-lisp:etypecase aws-sdk/generator/shape::key-values
     (common-lisp:hash-table aws-sdk/generator/shape::key-values)
     (common-lisp:list
      (alexandria:alist-hash-table aws-sdk/generator/shape::key-values)))))
(common-lisp:progn
 (common-lisp:deftype map-of-list-of-string () 'common-lisp:hash-table)
 (common-lisp:defun |make-map-of-list-of-string|
                    (aws-sdk/generator/shape::key-values)
   (common-lisp:etypecase aws-sdk/generator/shape::key-values
     (common-lisp:hash-table aws-sdk/generator/shape::key-values)
     (common-lisp:list
      (alexandria:alist-hash-table aws-sdk/generator/shape::key-values)))))
(common-lisp:progn
 (common-lisp:deftype map-of-message-result () 'common-lisp:hash-table)
 (common-lisp:defun |make-map-of-message-result|
                    (aws-sdk/generator/shape::key-values)
   (common-lisp:etypecase aws-sdk/generator/shape::key-values
     (common-lisp:hash-table aws-sdk/generator/shape::key-values)
     (common-lisp:list
      (alexandria:alist-hash-table aws-sdk/generator/shape::key-values)))))
(common-lisp:progn
 (common-lisp:deftype map-of-double () 'common-lisp:hash-table)
 (common-lisp:defun |make-map-of-double| (aws-sdk/generator/shape::key-values)
   (common-lisp:etypecase aws-sdk/generator/shape::key-values
     (common-lisp:hash-table aws-sdk/generator/shape::key-values)
     (common-lisp:list
      (alexandria:alist-hash-table aws-sdk/generator/shape::key-values)))))
(common-lisp:progn
 (common-lisp:deftype map-of-integer () 'common-lisp:hash-table)
 (common-lisp:defun |make-map-of-integer| (aws-sdk/generator/shape::key-values)
   (common-lisp:etypecase aws-sdk/generator/shape::key-values
     (common-lisp:hash-table aws-sdk/generator/shape::key-values)
     (common-lisp:list
      (alexandria:alist-hash-table aws-sdk/generator/shape::key-values)))))
(common-lisp:progn
 (common-lisp:deftype map-of-string () 'common-lisp:hash-table)
 (common-lisp:defun |make-map-of-string| (aws-sdk/generator/shape::key-values)
   (common-lisp:etypecase aws-sdk/generator/shape::key-values
     (common-lisp:hash-table aws-sdk/generator/shape::key-values)
     (common-lisp:list
      (alexandria:alist-hash-table aws-sdk/generator/shape::key-values)))))
(common-lisp:progn
 (common-lisp:defstruct
     (message (:copier common-lisp:nil) (:conc-name "struct-shape-message-"))
   (action common-lisp:nil :type (common-lisp:or action common-lisp:null))
   (body common-lisp:nil :type (common-lisp:or |__string| common-lisp:null))
   (image-icon-url common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (image-small-icon-url common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (image-url common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (json-body common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (media-url common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (raw-content common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (silent-push common-lisp:nil :type
    (common-lisp:or |__boolean| common-lisp:null))
   (title common-lisp:nil :type (common-lisp:or |__string| common-lisp:null))
   (url common-lisp:nil :type (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export (common-lisp:list 'message 'make-message))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input message))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input message))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'action))
      (common-lisp:list
       (common-lisp:cons "Action"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'body))
      (common-lisp:list
       (common-lisp:cons "Body"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'image-icon-url))
      (common-lisp:list
       (common-lisp:cons "ImageIconUrl"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'image-small-icon-url))
      (common-lisp:list
       (common-lisp:cons "ImageSmallIconUrl"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'image-url))
      (common-lisp:list
       (common-lisp:cons "ImageUrl"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'json-body))
      (common-lisp:list
       (common-lisp:cons "JsonBody"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'media-url))
      (common-lisp:list
       (common-lisp:cons "MediaUrl"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'raw-content))
      (common-lisp:list
       (common-lisp:cons "RawContent"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'silent-push))
      (common-lisp:list
       (common-lisp:cons "SilentPush"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'title))
      (common-lisp:list
       (common-lisp:cons "Title"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'url))
      (common-lisp:list
       (common-lisp:cons "Url"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input message))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (message-body (:copier common-lisp:nil)
      (:conc-name "struct-shape-message-body-"))
   (message common-lisp:nil :type (common-lisp:or |__string| common-lisp:null))
   (request-id common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export (common-lisp:list 'message-body 'make-message-body))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input message-body))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input message-body))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'message))
      (common-lisp:list
       (common-lisp:cons "Message"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'request-id))
      (common-lisp:list
       (common-lisp:cons "RequestID"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input message-body))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (message-configuration (:copier common-lisp:nil)
      (:conc-name "struct-shape-message-configuration-"))
   (apnsmessage common-lisp:nil :type
    (common-lisp:or message common-lisp:null))
   (default-message common-lisp:nil :type
    (common-lisp:or message common-lisp:null))
   (email-message common-lisp:nil :type
    (common-lisp:or campaign-email-message common-lisp:null))
   (gcmmessage common-lisp:nil :type (common-lisp:or message common-lisp:null))
   (smsmessage common-lisp:nil :type
    (common-lisp:or campaign-sms-message common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'message-configuration 'make-message-configuration))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          message-configuration))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          message-configuration))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'apnsmessage))
      (common-lisp:list
       (common-lisp:cons "APNSMessage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'default-message))
      (common-lisp:list
       (common-lisp:cons "DefaultMessage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'email-message))
      (common-lisp:list
       (common-lisp:cons "EmailMessage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'gcmmessage))
      (common-lisp:list
       (common-lisp:cons "GCMMessage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'smsmessage))
      (common-lisp:list
       (common-lisp:cons "SMSMessage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          message-configuration))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (message-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-message-request-"))
   (addresses common-lisp:nil :type
    (common-lisp:or map-of-address-configuration common-lisp:null))
   (context common-lisp:nil :type
    (common-lisp:or map-of-string common-lisp:null))
   (message-configuration common-lisp:nil :type
    (common-lisp:or direct-message-configuration common-lisp:null)))
 (common-lisp:export (common-lisp:list 'message-request 'make-message-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input message-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input message-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'addresses))
      (common-lisp:list
       (common-lisp:cons "Addresses"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'context))
      (common-lisp:list
       (common-lisp:cons "Context"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'message-configuration))
      (common-lisp:list
       (common-lisp:cons "MessageConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input message-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (message-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-message-response-"))
   (application-id common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (request-id common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (result common-lisp:nil :type
    (common-lisp:or map-of-message-result common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'message-response 'make-message-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input message-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input message-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'application-id))
      (common-lisp:list
       (common-lisp:cons "ApplicationId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'request-id))
      (common-lisp:list
       (common-lisp:cons "RequestId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'result))
      (common-lisp:list
       (common-lisp:cons "Result"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input message-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (message-result (:copier common-lisp:nil)
      (:conc-name "struct-shape-message-result-"))
   (delivery-status common-lisp:nil :type
    (common-lisp:or delivery-status common-lisp:null))
   (status-code common-lisp:nil :type
    (common-lisp:or |__integer| common-lisp:null))
   (status-message common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (updated-token common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export (common-lisp:list 'message-result 'make-message-result))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input message-result))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input message-result))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'delivery-status))
      (common-lisp:list
       (common-lisp:cons "DeliveryStatus"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status-code))
      (common-lisp:list
       (common-lisp:cons "StatusCode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status-message))
      (common-lisp:list
       (common-lisp:cons "StatusMessage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'updated-token))
      (common-lisp:list
       (common-lisp:cons "UpdatedToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input message-result))
   common-lisp:nil))
(common-lisp:deftype message-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:define-condition method-not-allowed-exception
     (pinpoint-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       method-not-allowed-exception-message)
      (request-id :initarg :request-id :initform common-lisp:nil :reader
       method-not-allowed-exception-request-id)))
 (common-lisp:export
  (common-lisp:list 'method-not-allowed-exception
                    'method-not-allowed-exception-message
                    'method-not-allowed-exception-request-id)))
(common-lisp:progn
 (common-lisp:define-condition not-found-exception
     (pinpoint-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       not-found-exception-message)
      (request-id :initarg :request-id :initform common-lisp:nil :reader
       not-found-exception-request-id)))
 (common-lisp:export
  (common-lisp:list 'not-found-exception 'not-found-exception-message
                    'not-found-exception-request-id)))
(common-lisp:progn
 (common-lisp:defstruct
     (put-event-stream-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-put-event-stream-request-"))
   (application-id (common-lisp:error ":application-id is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (write-event-stream (common-lisp:error ":write-event-stream is required")
    :type (common-lisp:or write-event-stream common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'put-event-stream-request 'make-put-event-stream-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          put-event-stream-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          put-event-stream-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'write-event-stream))
      (common-lisp:list
       (common-lisp:cons "WriteEventStream"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          put-event-stream-request))
   (common-lisp:slot-value aws-sdk/generator/shape::input 'write-event-stream)))
(common-lisp:progn
 (common-lisp:defstruct
     (put-event-stream-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-put-event-stream-response-"))
   (event-stream (common-lisp:error ":event-stream is required") :type
    (common-lisp:or event-stream common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'put-event-stream-response
                    'make-put-event-stream-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          put-event-stream-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          put-event-stream-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'event-stream))
      (common-lisp:list
       (common-lisp:cons "EventStream"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          put-event-stream-response))
   (common-lisp:slot-value aws-sdk/generator/shape::input 'event-stream)))
(common-lisp:progn
 (common-lisp:defstruct
     (quiet-time (:copier common-lisp:nil)
      (:conc-name "struct-shape-quiet-time-"))
   (end common-lisp:nil :type (common-lisp:or |__string| common-lisp:null))
   (start common-lisp:nil :type (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export (common-lisp:list 'quiet-time 'make-quiet-time))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input quiet-time))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input quiet-time))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'end))
      (common-lisp:list
       (common-lisp:cons "End"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'start))
      (common-lisp:list
       (common-lisp:cons "Start"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input quiet-time))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (recency-dimension (:copier common-lisp:nil)
      (:conc-name "struct-shape-recency-dimension-"))
   (duration common-lisp:nil :type (common-lisp:or duration common-lisp:null))
   (recency-type common-lisp:nil :type
    (common-lisp:or recency-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'recency-dimension 'make-recency-dimension))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input recency-dimension))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input recency-dimension))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'duration))
      (common-lisp:list
       (common-lisp:cons "Duration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'recency-type))
      (common-lisp:list
       (common-lisp:cons "RecencyType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input recency-dimension))
   common-lisp:nil))
(common-lisp:deftype recency-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (smschannel-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-smschannel-request-"))
   (enabled common-lisp:nil :type
    (common-lisp:or |__boolean| common-lisp:null))
   (sender-id common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'smschannel-request 'make-smschannel-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input smschannel-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input smschannel-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'enabled))
      (common-lisp:list
       (common-lisp:cons "Enabled"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'sender-id))
      (common-lisp:list
       (common-lisp:cons "SenderId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input smschannel-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (smschannel-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-smschannel-response-"))
   (application-id common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (creation-date common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (enabled common-lisp:nil :type
    (common-lisp:or |__boolean| common-lisp:null))
   (id common-lisp:nil :type (common-lisp:or |__string| common-lisp:null))
   (is-archived common-lisp:nil :type
    (common-lisp:or |__boolean| common-lisp:null))
   (last-modified-by common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (last-modified-date common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (platform common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (sender-id common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (short-code common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (version common-lisp:nil :type
    (common-lisp:or |__integer| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'smschannel-response 'make-smschannel-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input smschannel-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input smschannel-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'application-id))
      (common-lisp:list
       (common-lisp:cons "ApplicationId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'creation-date))
      (common-lisp:list
       (common-lisp:cons "CreationDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'enabled))
      (common-lisp:list
       (common-lisp:cons "Enabled"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "Id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'is-archived))
      (common-lisp:list
       (common-lisp:cons "IsArchived"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'last-modified-by))
      (common-lisp:list
       (common-lisp:cons "LastModifiedBy"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'last-modified-date))
      (common-lisp:list
       (common-lisp:cons "LastModifiedDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'platform))
      (common-lisp:list
       (common-lisp:cons "Platform"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'sender-id))
      (common-lisp:list
       (common-lisp:cons "SenderId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'short-code))
      (common-lisp:list
       (common-lisp:cons "ShortCode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'version))
      (common-lisp:list
       (common-lisp:cons "Version"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input smschannel-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (smsmessage (:copier common-lisp:nil)
      (:conc-name "struct-shape-smsmessage-"))
   (body common-lisp:nil :type (common-lisp:or |__string| common-lisp:null))
   (message-type common-lisp:nil :type
    (common-lisp:or message-type common-lisp:null))
   (sender-id common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (substitutions common-lisp:nil :type
    (common-lisp:or map-of-list-of-string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'smsmessage 'make-smsmessage))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input smsmessage))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input smsmessage))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'body))
      (common-lisp:list
       (common-lisp:cons "Body"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'message-type))
      (common-lisp:list
       (common-lisp:cons "MessageType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'sender-id))
      (common-lisp:list
       (common-lisp:cons "SenderId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'substitutions))
      (common-lisp:list
       (common-lisp:cons "Substitutions"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input smsmessage))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (schedule (:copier common-lisp:nil) (:conc-name "struct-shape-schedule-"))
   (end-time common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (frequency common-lisp:nil :type
    (common-lisp:or frequency common-lisp:null))
   (is-local-time common-lisp:nil :type
    (common-lisp:or |__boolean| common-lisp:null))
   (quiet-time common-lisp:nil :type
    (common-lisp:or quiet-time common-lisp:null))
   (start-time common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (timezone common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export (common-lisp:list 'schedule 'make-schedule))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input schedule))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input schedule))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'end-time))
      (common-lisp:list
       (common-lisp:cons "EndTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'frequency))
      (common-lisp:list
       (common-lisp:cons "Frequency"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'is-local-time))
      (common-lisp:list
       (common-lisp:cons "IsLocalTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'quiet-time))
      (common-lisp:list
       (common-lisp:cons "QuietTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'start-time))
      (common-lisp:list
       (common-lisp:cons "StartTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'timezone))
      (common-lisp:list
       (common-lisp:cons "Timezone"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input schedule))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (segment-behaviors (:copier common-lisp:nil)
      (:conc-name "struct-shape-segment-behaviors-"))
   (recency common-lisp:nil :type
    (common-lisp:or recency-dimension common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'segment-behaviors 'make-segment-behaviors))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input segment-behaviors))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input segment-behaviors))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'recency))
      (common-lisp:list
       (common-lisp:cons "Recency"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input segment-behaviors))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (segment-demographics (:copier common-lisp:nil)
      (:conc-name "struct-shape-segment-demographics-"))
   (app-version common-lisp:nil :type
    (common-lisp:or set-dimension common-lisp:null))
   (channel common-lisp:nil :type
    (common-lisp:or set-dimension common-lisp:null))
   (device-type common-lisp:nil :type
    (common-lisp:or set-dimension common-lisp:null))
   (make common-lisp:nil :type (common-lisp:or set-dimension common-lisp:null))
   (model common-lisp:nil :type
    (common-lisp:or set-dimension common-lisp:null))
   (platform common-lisp:nil :type
    (common-lisp:or set-dimension common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'segment-demographics 'make-segment-demographics))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input segment-demographics))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input segment-demographics))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'app-version))
      (common-lisp:list
       (common-lisp:cons "AppVersion"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'channel))
      (common-lisp:list
       (common-lisp:cons "Channel"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'device-type))
      (common-lisp:list
       (common-lisp:cons "DeviceType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'make))
      (common-lisp:list
       (common-lisp:cons "Make"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'model))
      (common-lisp:list
       (common-lisp:cons "Model"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'platform))
      (common-lisp:list
       (common-lisp:cons "Platform"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input segment-demographics))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (segment-dimensions (:copier common-lisp:nil)
      (:conc-name "struct-shape-segment-dimensions-"))
   (attributes common-lisp:nil :type
    (common-lisp:or map-of-attribute-dimension common-lisp:null))
   (behavior common-lisp:nil :type
    (common-lisp:or segment-behaviors common-lisp:null))
   (demographic common-lisp:nil :type
    (common-lisp:or segment-demographics common-lisp:null))
   (location common-lisp:nil :type
    (common-lisp:or segment-location common-lisp:null))
   (user-attributes common-lisp:nil :type
    (common-lisp:or map-of-attribute-dimension common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'segment-dimensions 'make-segment-dimensions))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input segment-dimensions))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input segment-dimensions))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'attributes))
      (common-lisp:list
       (common-lisp:cons "Attributes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'behavior))
      (common-lisp:list
       (common-lisp:cons "Behavior"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'demographic))
      (common-lisp:list
       (common-lisp:cons "Demographic"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'location))
      (common-lisp:list
       (common-lisp:cons "Location"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'user-attributes))
      (common-lisp:list
       (common-lisp:cons "UserAttributes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input segment-dimensions))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (segment-import-resource (:copier common-lisp:nil)
      (:conc-name "struct-shape-segment-import-resource-"))
   (channel-counts common-lisp:nil :type
    (common-lisp:or map-of-integer common-lisp:null))
   (external-id common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (format common-lisp:nil :type (common-lisp:or format common-lisp:null))
   (role-arn common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (s3url common-lisp:nil :type (common-lisp:or |__string| common-lisp:null))
   (size common-lisp:nil :type (common-lisp:or |__integer| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'segment-import-resource 'make-segment-import-resource))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          segment-import-resource))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          segment-import-resource))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'channel-counts))
      (common-lisp:list
       (common-lisp:cons "ChannelCounts"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'external-id))
      (common-lisp:list
       (common-lisp:cons "ExternalId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'format))
      (common-lisp:list
       (common-lisp:cons "Format"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'role-arn))
      (common-lisp:list
       (common-lisp:cons "RoleArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 's3url))
      (common-lisp:list
       (common-lisp:cons "S3Url"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'size))
      (common-lisp:list
       (common-lisp:cons "Size"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          segment-import-resource))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (segment-location (:copier common-lisp:nil)
      (:conc-name "struct-shape-segment-location-"))
   (country common-lisp:nil :type
    (common-lisp:or set-dimension common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'segment-location 'make-segment-location))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input segment-location))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input segment-location))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'country))
      (common-lisp:list
       (common-lisp:cons "Country"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input segment-location))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (segment-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-segment-response-"))
   (application-id common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (creation-date common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (dimensions common-lisp:nil :type
    (common-lisp:or segment-dimensions common-lisp:null))
   (id common-lisp:nil :type (common-lisp:or |__string| common-lisp:null))
   (import-definition common-lisp:nil :type
    (common-lisp:or segment-import-resource common-lisp:null))
   (last-modified-date common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (name common-lisp:nil :type (common-lisp:or |__string| common-lisp:null))
   (segment-type common-lisp:nil :type
    (common-lisp:or segment-type common-lisp:null))
   (version common-lisp:nil :type
    (common-lisp:or |__integer| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'segment-response 'make-segment-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input segment-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input segment-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'application-id))
      (common-lisp:list
       (common-lisp:cons "ApplicationId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'creation-date))
      (common-lisp:list
       (common-lisp:cons "CreationDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'dimensions))
      (common-lisp:list
       (common-lisp:cons "Dimensions"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "Id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'import-definition))
      (common-lisp:list
       (common-lisp:cons "ImportDefinition"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'last-modified-date))
      (common-lisp:list
       (common-lisp:cons "LastModifiedDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'segment-type))
      (common-lisp:list
       (common-lisp:cons "SegmentType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'version))
      (common-lisp:list
       (common-lisp:cons "Version"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input segment-response))
   common-lisp:nil))
(common-lisp:deftype segment-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (segments-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-segments-response-"))
   (item common-lisp:nil :type
    (common-lisp:or list-of-segment-response common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'segments-response 'make-segments-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input segments-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input segments-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'item))
      (common-lisp:list
       (common-lisp:cons "Item"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input segments-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (send-messages-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-send-messages-request-"))
   (application-id (common-lisp:error ":application-id is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (message-request (common-lisp:error ":message-request is required") :type
    (common-lisp:or message-request common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'send-messages-request 'make-send-messages-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          send-messages-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          send-messages-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'message-request))
      (common-lisp:list
       (common-lisp:cons "MessageRequest"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          send-messages-request))
   (common-lisp:slot-value aws-sdk/generator/shape::input 'message-request)))
(common-lisp:progn
 (common-lisp:defstruct
     (send-messages-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-send-messages-response-"))
   (message-response (common-lisp:error ":message-response is required") :type
    (common-lisp:or message-response common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'send-messages-response 'make-send-messages-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          send-messages-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          send-messages-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'message-response))
      (common-lisp:list
       (common-lisp:cons "MessageResponse"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          send-messages-response))
   (common-lisp:slot-value aws-sdk/generator/shape::input 'message-response)))
(common-lisp:progn
 (common-lisp:defstruct
     (set-dimension (:copier common-lisp:nil)
      (:conc-name "struct-shape-set-dimension-"))
   (dimension-type common-lisp:nil :type
    (common-lisp:or dimension-type common-lisp:null))
   (values common-lisp:nil :type
    (common-lisp:or list-of-string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'set-dimension 'make-set-dimension))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input set-dimension))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input set-dimension))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'dimension-type))
      (common-lisp:list
       (common-lisp:cons "DimensionType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'values))
      (common-lisp:list
       (common-lisp:cons "Values"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input set-dimension))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:define-condition too-many-requests-exception
     (pinpoint-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       too-many-requests-exception-message)
      (request-id :initarg :request-id :initform common-lisp:nil :reader
       too-many-requests-exception-request-id)))
 (common-lisp:export
  (common-lisp:list 'too-many-requests-exception
                    'too-many-requests-exception-message
                    'too-many-requests-exception-request-id)))
(common-lisp:progn
 (common-lisp:defstruct
     (treatment-resource (:copier common-lisp:nil)
      (:conc-name "struct-shape-treatment-resource-"))
   (id common-lisp:nil :type (common-lisp:or |__string| common-lisp:null))
   (message-configuration common-lisp:nil :type
    (common-lisp:or message-configuration common-lisp:null))
   (schedule common-lisp:nil :type (common-lisp:or schedule common-lisp:null))
   (size-percent common-lisp:nil :type
    (common-lisp:or |__integer| common-lisp:null))
   (state common-lisp:nil :type
    (common-lisp:or campaign-state common-lisp:null))
   (treatment-description common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (treatment-name common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'treatment-resource 'make-treatment-resource))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input treatment-resource))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input treatment-resource))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "Id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'message-configuration))
      (common-lisp:list
       (common-lisp:cons "MessageConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'schedule))
      (common-lisp:list
       (common-lisp:cons "Schedule"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'size-percent))
      (common-lisp:list
       (common-lisp:cons "SizePercent"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'state))
      (common-lisp:list
       (common-lisp:cons "State"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'treatment-description))
      (common-lisp:list
       (common-lisp:cons "TreatmentDescription"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'treatment-name))
      (common-lisp:list
       (common-lisp:cons "TreatmentName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input treatment-resource))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-apns-channel-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-apns-channel-request-"))
   (apnschannel-request (common-lisp:error ":apnschannel-request is required")
    :type (common-lisp:or apnschannel-request common-lisp:null))
   (application-id (common-lisp:error ":application-id is required") :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-apns-channel-request
                    'make-update-apns-channel-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-apns-channel-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-apns-channel-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'apnschannel-request))
      (common-lisp:list
       (common-lisp:cons "APNSChannelRequest"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-apns-channel-request))
   (common-lisp:slot-value aws-sdk/generator/shape::input
                           'apnschannel-request)))
(common-lisp:progn
 (common-lisp:defstruct
     (update-apns-channel-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-apns-channel-response-"))
   (apnschannel-response
    (common-lisp:error ":apnschannel-response is required") :type
    (common-lisp:or apnschannel-response common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-apns-channel-response
                    'make-update-apns-channel-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-apns-channel-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-apns-channel-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'apnschannel-response))
      (common-lisp:list
       (common-lisp:cons "APNSChannelResponse"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-apns-channel-response))
   (common-lisp:slot-value aws-sdk/generator/shape::input
                           'apnschannel-response)))
(common-lisp:progn
 (common-lisp:defstruct
     (update-apns-sandbox-channel-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-apns-sandbox-channel-request-"))
   (apnssandbox-channel-request
    (common-lisp:error ":apnssandbox-channel-request is required") :type
    (common-lisp:or apnssandbox-channel-request common-lisp:null))
   (application-id (common-lisp:error ":application-id is required") :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-apns-sandbox-channel-request
                    'make-update-apns-sandbox-channel-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-apns-sandbox-channel-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-apns-sandbox-channel-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'apnssandbox-channel-request))
      (common-lisp:list
       (common-lisp:cons "APNSSandboxChannelRequest"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-apns-sandbox-channel-request))
   (common-lisp:slot-value aws-sdk/generator/shape::input
                           'apnssandbox-channel-request)))
(common-lisp:progn
 (common-lisp:defstruct
     (update-apns-sandbox-channel-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-apns-sandbox-channel-response-"))
   (apnssandbox-channel-response
    (common-lisp:error ":apnssandbox-channel-response is required") :type
    (common-lisp:or apnssandbox-channel-response common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-apns-sandbox-channel-response
                    'make-update-apns-sandbox-channel-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-apns-sandbox-channel-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-apns-sandbox-channel-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'apnssandbox-channel-response))
      (common-lisp:list
       (common-lisp:cons "APNSSandboxChannelResponse"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-apns-sandbox-channel-response))
   (common-lisp:slot-value aws-sdk/generator/shape::input
                           'apnssandbox-channel-response)))
(common-lisp:progn
 (common-lisp:defstruct
     (update-application-settings-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-application-settings-request-"))
   (application-id (common-lisp:error ":application-id is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (write-application-settings-request
    (common-lisp:error ":write-application-settings-request is required") :type
    (common-lisp:or write-application-settings-request common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-application-settings-request
                    'make-update-application-settings-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-application-settings-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-application-settings-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'write-application-settings-request))
      (common-lisp:list
       (common-lisp:cons "WriteApplicationSettingsRequest"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-application-settings-request))
   (common-lisp:slot-value aws-sdk/generator/shape::input
                           'write-application-settings-request)))
(common-lisp:progn
 (common-lisp:defstruct
     (update-application-settings-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-application-settings-response-"))
   (application-settings-resource
    (common-lisp:error ":application-settings-resource is required") :type
    (common-lisp:or application-settings-resource common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-application-settings-response
                    'make-update-application-settings-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-application-settings-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-application-settings-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'application-settings-resource))
      (common-lisp:list
       (common-lisp:cons "ApplicationSettingsResource"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-application-settings-response))
   (common-lisp:slot-value aws-sdk/generator/shape::input
                           'application-settings-resource)))
(common-lisp:progn
 (common-lisp:defstruct
     (update-campaign-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-campaign-request-"))
   (application-id (common-lisp:error ":application-id is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (campaign-id (common-lisp:error ":campaign-id is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (write-campaign-request
    (common-lisp:error ":write-campaign-request is required") :type
    (common-lisp:or write-campaign-request common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-campaign-request 'make-update-campaign-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-campaign-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-campaign-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'write-campaign-request))
      (common-lisp:list
       (common-lisp:cons "WriteCampaignRequest"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-campaign-request))
   (common-lisp:slot-value aws-sdk/generator/shape::input
                           'write-campaign-request)))
(common-lisp:progn
 (common-lisp:defstruct
     (update-campaign-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-campaign-response-"))
   (campaign-response (common-lisp:error ":campaign-response is required")
    :type (common-lisp:or campaign-response common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-campaign-response 'make-update-campaign-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-campaign-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-campaign-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'campaign-response))
      (common-lisp:list
       (common-lisp:cons "CampaignResponse"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-campaign-response))
   (common-lisp:slot-value aws-sdk/generator/shape::input 'campaign-response)))
(common-lisp:progn
 (common-lisp:defstruct
     (update-email-channel-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-email-channel-request-"))
   (application-id (common-lisp:error ":application-id is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (email-channel-request
    (common-lisp:error ":email-channel-request is required") :type
    (common-lisp:or email-channel-request common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-email-channel-request
                    'make-update-email-channel-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-email-channel-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-email-channel-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'email-channel-request))
      (common-lisp:list
       (common-lisp:cons "EmailChannelRequest"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-email-channel-request))
   (common-lisp:slot-value aws-sdk/generator/shape::input
                           'email-channel-request)))
(common-lisp:progn
 (common-lisp:defstruct
     (update-email-channel-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-email-channel-response-"))
   (email-channel-response
    (common-lisp:error ":email-channel-response is required") :type
    (common-lisp:or email-channel-response common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-email-channel-response
                    'make-update-email-channel-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-email-channel-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-email-channel-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'email-channel-response))
      (common-lisp:list
       (common-lisp:cons "EmailChannelResponse"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-email-channel-response))
   (common-lisp:slot-value aws-sdk/generator/shape::input
                           'email-channel-response)))
(common-lisp:progn
 (common-lisp:defstruct
     (update-endpoint-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-endpoint-request-"))
   (application-id (common-lisp:error ":application-id is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (endpoint-id (common-lisp:error ":endpoint-id is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (endpoint-request (common-lisp:error ":endpoint-request is required") :type
    (common-lisp:or endpoint-request common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-endpoint-request 'make-update-endpoint-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-endpoint-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-endpoint-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'endpoint-request))
      (common-lisp:list
       (common-lisp:cons "EndpointRequest"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-endpoint-request))
   (common-lisp:slot-value aws-sdk/generator/shape::input 'endpoint-request)))
(common-lisp:progn
 (common-lisp:defstruct
     (update-endpoint-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-endpoint-response-"))
   (message-body (common-lisp:error ":message-body is required") :type
    (common-lisp:or message-body common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-endpoint-response 'make-update-endpoint-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-endpoint-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-endpoint-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'message-body))
      (common-lisp:list
       (common-lisp:cons "MessageBody"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-endpoint-response))
   (common-lisp:slot-value aws-sdk/generator/shape::input 'message-body)))
(common-lisp:progn
 (common-lisp:defstruct
     (update-endpoints-batch-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-endpoints-batch-request-"))
   (application-id (common-lisp:error ":application-id is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (endpoint-batch-request
    (common-lisp:error ":endpoint-batch-request is required") :type
    (common-lisp:or endpoint-batch-request common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-endpoints-batch-request
                    'make-update-endpoints-batch-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-endpoints-batch-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-endpoints-batch-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'endpoint-batch-request))
      (common-lisp:list
       (common-lisp:cons "EndpointBatchRequest"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-endpoints-batch-request))
   (common-lisp:slot-value aws-sdk/generator/shape::input
                           'endpoint-batch-request)))
(common-lisp:progn
 (common-lisp:defstruct
     (update-endpoints-batch-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-endpoints-batch-response-"))
   (message-body (common-lisp:error ":message-body is required") :type
    (common-lisp:or message-body common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-endpoints-batch-response
                    'make-update-endpoints-batch-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-endpoints-batch-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-endpoints-batch-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'message-body))
      (common-lisp:list
       (common-lisp:cons "MessageBody"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-endpoints-batch-response))
   (common-lisp:slot-value aws-sdk/generator/shape::input 'message-body)))
(common-lisp:progn
 (common-lisp:defstruct
     (update-gcm-channel-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-gcm-channel-request-"))
   (application-id (common-lisp:error ":application-id is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (gcmchannel-request (common-lisp:error ":gcmchannel-request is required")
    :type (common-lisp:or gcmchannel-request common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-gcm-channel-request
                    'make-update-gcm-channel-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-gcm-channel-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-gcm-channel-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'gcmchannel-request))
      (common-lisp:list
       (common-lisp:cons "GCMChannelRequest"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-gcm-channel-request))
   (common-lisp:slot-value aws-sdk/generator/shape::input 'gcmchannel-request)))
(common-lisp:progn
 (common-lisp:defstruct
     (update-gcm-channel-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-gcm-channel-response-"))
   (gcmchannel-response (common-lisp:error ":gcmchannel-response is required")
    :type (common-lisp:or gcmchannel-response common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-gcm-channel-response
                    'make-update-gcm-channel-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-gcm-channel-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-gcm-channel-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'gcmchannel-response))
      (common-lisp:list
       (common-lisp:cons "GCMChannelResponse"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-gcm-channel-response))
   (common-lisp:slot-value aws-sdk/generator/shape::input
                           'gcmchannel-response)))
(common-lisp:progn
 (common-lisp:defstruct
     (update-segment-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-segment-request-"))
   (application-id (common-lisp:error ":application-id is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (segment-id (common-lisp:error ":segment-id is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (write-segment-request
    (common-lisp:error ":write-segment-request is required") :type
    (common-lisp:or write-segment-request common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-segment-request 'make-update-segment-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-segment-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-segment-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'write-segment-request))
      (common-lisp:list
       (common-lisp:cons "WriteSegmentRequest"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-segment-request))
   (common-lisp:slot-value aws-sdk/generator/shape::input
                           'write-segment-request)))
(common-lisp:progn
 (common-lisp:defstruct
     (update-segment-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-segment-response-"))
   (segment-response (common-lisp:error ":segment-response is required") :type
    (common-lisp:or segment-response common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-segment-response 'make-update-segment-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-segment-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-segment-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'segment-response))
      (common-lisp:list
       (common-lisp:cons "SegmentResponse"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-segment-response))
   (common-lisp:slot-value aws-sdk/generator/shape::input 'segment-response)))
(common-lisp:progn
 (common-lisp:defstruct
     (update-sms-channel-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-sms-channel-request-"))
   (application-id (common-lisp:error ":application-id is required") :type
    (common-lisp:or |__string| common-lisp:null))
   (smschannel-request (common-lisp:error ":smschannel-request is required")
    :type (common-lisp:or smschannel-request common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-sms-channel-request
                    'make-update-sms-channel-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-sms-channel-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-sms-channel-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'smschannel-request))
      (common-lisp:list
       (common-lisp:cons "SMSChannelRequest"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-sms-channel-request))
   (common-lisp:slot-value aws-sdk/generator/shape::input 'smschannel-request)))
(common-lisp:progn
 (common-lisp:defstruct
     (update-sms-channel-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-sms-channel-response-"))
   (smschannel-response (common-lisp:error ":smschannel-response is required")
    :type (common-lisp:or smschannel-response common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-sms-channel-response
                    'make-update-sms-channel-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-sms-channel-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-sms-channel-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'smschannel-response))
      (common-lisp:list
       (common-lisp:cons "SMSChannelResponse"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-sms-channel-response))
   (common-lisp:slot-value aws-sdk/generator/shape::input
                           'smschannel-response)))
(common-lisp:progn
 (common-lisp:defstruct
     (write-application-settings-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-write-application-settings-request-"))
   (limits common-lisp:nil :type
    (common-lisp:or campaign-limits common-lisp:null))
   (quiet-time common-lisp:nil :type
    (common-lisp:or quiet-time common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'write-application-settings-request
                    'make-write-application-settings-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          write-application-settings-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          write-application-settings-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'limits))
      (common-lisp:list
       (common-lisp:cons "Limits"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'quiet-time))
      (common-lisp:list
       (common-lisp:cons "QuietTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          write-application-settings-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (write-campaign-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-write-campaign-request-"))
   (additional-treatments common-lisp:nil :type
    (common-lisp:or list-of-write-treatment-resource common-lisp:null))
   (description common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (holdout-percent common-lisp:nil :type
    (common-lisp:or |__integer| common-lisp:null))
   (is-paused common-lisp:nil :type
    (common-lisp:or |__boolean| common-lisp:null))
   (limits common-lisp:nil :type
    (common-lisp:or campaign-limits common-lisp:null))
   (message-configuration common-lisp:nil :type
    (common-lisp:or message-configuration common-lisp:null))
   (name common-lisp:nil :type (common-lisp:or |__string| common-lisp:null))
   (schedule common-lisp:nil :type (common-lisp:or schedule common-lisp:null))
   (segment-id common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (segment-version common-lisp:nil :type
    (common-lisp:or |__integer| common-lisp:null))
   (treatment-description common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (treatment-name common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'write-campaign-request 'make-write-campaign-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          write-campaign-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          write-campaign-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'additional-treatments))
      (common-lisp:list
       (common-lisp:cons "AdditionalTreatments"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'holdout-percent))
      (common-lisp:list
       (common-lisp:cons "HoldoutPercent"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'is-paused))
      (common-lisp:list
       (common-lisp:cons "IsPaused"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'limits))
      (common-lisp:list
       (common-lisp:cons "Limits"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'message-configuration))
      (common-lisp:list
       (common-lisp:cons "MessageConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'schedule))
      (common-lisp:list
       (common-lisp:cons "Schedule"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'segment-id))
      (common-lisp:list
       (common-lisp:cons "SegmentId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'segment-version))
      (common-lisp:list
       (common-lisp:cons "SegmentVersion"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'treatment-description))
      (common-lisp:list
       (common-lisp:cons "TreatmentDescription"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'treatment-name))
      (common-lisp:list
       (common-lisp:cons "TreatmentName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          write-campaign-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (write-event-stream (:copier common-lisp:nil)
      (:conc-name "struct-shape-write-event-stream-"))
   (destination-stream-arn common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (role-arn common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'write-event-stream 'make-write-event-stream))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input write-event-stream))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input write-event-stream))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'destination-stream-arn))
      (common-lisp:list
       (common-lisp:cons "DestinationStreamArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'role-arn))
      (common-lisp:list
       (common-lisp:cons "RoleArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input write-event-stream))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (write-segment-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-write-segment-request-"))
   (dimensions common-lisp:nil :type
    (common-lisp:or segment-dimensions common-lisp:null))
   (name common-lisp:nil :type (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'write-segment-request 'make-write-segment-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          write-segment-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          write-segment-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'dimensions))
      (common-lisp:list
       (common-lisp:cons "Dimensions"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          write-segment-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (write-treatment-resource (:copier common-lisp:nil)
      (:conc-name "struct-shape-write-treatment-resource-"))
   (message-configuration common-lisp:nil :type
    (common-lisp:or message-configuration common-lisp:null))
   (schedule common-lisp:nil :type (common-lisp:or schedule common-lisp:null))
   (size-percent common-lisp:nil :type
    (common-lisp:or |__integer| common-lisp:null))
   (treatment-description common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (treatment-name common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'write-treatment-resource 'make-write-treatment-resource))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          write-treatment-resource))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          write-treatment-resource))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'message-configuration))
      (common-lisp:list
       (common-lisp:cons "MessageConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'schedule))
      (common-lisp:list
       (common-lisp:cons "Schedule"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'size-percent))
      (common-lisp:list
       (common-lisp:cons "SizePercent"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'treatment-description))
      (common-lisp:list
       (common-lisp:cons "TreatmentDescription"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'treatment-name))
      (common-lisp:list
       (common-lisp:cons "TreatmentName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          write-treatment-resource))
   common-lisp:nil))
(common-lisp:deftype |__boolean| () 'common-lisp:boolean)
(common-lisp:deftype |__double| () 'common-lisp:double-float)
(common-lisp:deftype |__integer| () 'common-lisp:integer)
(common-lisp:deftype |__string| () 'common-lisp:string)
(common-lisp:deftype |__timestamp| () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defun create-app
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key create-application-request)
   (common-lisp:declare (common-lisp:ignorable create-application-request))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-app-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'pinpoint-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/v1/apps"
                                                        "CreateApp"
                                                        "2016-12-01"))
      "structure" common-lisp:nil
      '(("BadRequestException" . bad-request-exception)
        ("ForbiddenException" . forbidden-exception)
        ("InternalServerErrorException" . internal-server-error-exception)
        ("MethodNotAllowedException" . method-not-allowed-exception)
        ("NotFoundException" . not-found-exception)
        ("TooManyRequestsException" . too-many-requests-exception)))))
 (common-lisp:export 'create-app))
(common-lisp:progn
 (common-lisp:defun create-campaign
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key application-id write-campaign-request)
   (common-lisp:declare
    (common-lisp:ignorable application-id write-campaign-request))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-campaign-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'pinpoint-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v1/apps/~A/campaigns"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'application-id))))
                                                        "CreateCampaign"
                                                        "2016-12-01"))
      "structure" common-lisp:nil
      '(("BadRequestException" . bad-request-exception)
        ("ForbiddenException" . forbidden-exception)
        ("InternalServerErrorException" . internal-server-error-exception)
        ("MethodNotAllowedException" . method-not-allowed-exception)
        ("NotFoundException" . not-found-exception)
        ("TooManyRequestsException" . too-many-requests-exception)))))
 (common-lisp:export 'create-campaign))
(common-lisp:progn
 (common-lisp:defun create-import-job
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key application-id import-job-request)
   (common-lisp:declare
    (common-lisp:ignorable application-id import-job-request))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-import-job-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'pinpoint-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v1/apps/~A/jobs/import"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'application-id))))
                                                        "CreateImportJob"
                                                        "2016-12-01"))
      "structure" common-lisp:nil
      '(("BadRequestException" . bad-request-exception)
        ("ForbiddenException" . forbidden-exception)
        ("InternalServerErrorException" . internal-server-error-exception)
        ("MethodNotAllowedException" . method-not-allowed-exception)
        ("NotFoundException" . not-found-exception)
        ("TooManyRequestsException" . too-many-requests-exception)))))
 (common-lisp:export 'create-import-job))
(common-lisp:progn
 (common-lisp:defun create-segment
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key application-id write-segment-request)
   (common-lisp:declare
    (common-lisp:ignorable application-id write-segment-request))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-segment-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'pinpoint-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v1/apps/~A/segments"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'application-id))))
                                                        "CreateSegment"
                                                        "2016-12-01"))
      "structure" common-lisp:nil
      '(("BadRequestException" . bad-request-exception)
        ("ForbiddenException" . forbidden-exception)
        ("InternalServerErrorException" . internal-server-error-exception)
        ("MethodNotAllowedException" . method-not-allowed-exception)
        ("NotFoundException" . not-found-exception)
        ("TooManyRequestsException" . too-many-requests-exception)))))
 (common-lisp:export 'create-segment))
(common-lisp:progn
 (common-lisp:defun delete-apns-channel
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key application-id)
   (common-lisp:declare (common-lisp:ignorable application-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-apns-channel-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'pinpoint-request
                                                        aws-sdk/generator/operation::input
                                                        "DELETE"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v1/apps/~A/channels/apns"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'application-id))))
                                                        "DeleteApnsChannel"
                                                        "2016-12-01"))
      "structure" common-lisp:nil
      '(("BadRequestException" . bad-request-exception)
        ("ForbiddenException" . forbidden-exception)
        ("InternalServerErrorException" . internal-server-error-exception)
        ("MethodNotAllowedException" . method-not-allowed-exception)
        ("NotFoundException" . not-found-exception)
        ("TooManyRequestsException" . too-many-requests-exception)))))
 (common-lisp:export 'delete-apns-channel))
(common-lisp:progn
 (common-lisp:defun delete-apns-sandbox-channel
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key application-id)
   (common-lisp:declare (common-lisp:ignorable application-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-delete-apns-sandbox-channel-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'pinpoint-request
                                                        aws-sdk/generator/operation::input
                                                        "DELETE"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v1/apps/~A/channels/apns_sandbox"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'application-id))))
                                                        "DeleteApnsSandboxChannel"
                                                        "2016-12-01"))
      "structure" common-lisp:nil
      '(("BadRequestException" . bad-request-exception)
        ("ForbiddenException" . forbidden-exception)
        ("InternalServerErrorException" . internal-server-error-exception)
        ("MethodNotAllowedException" . method-not-allowed-exception)
        ("NotFoundException" . not-found-exception)
        ("TooManyRequestsException" . too-many-requests-exception)))))
 (common-lisp:export 'delete-apns-sandbox-channel))
(common-lisp:progn
 (common-lisp:defun delete-app
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key application-id)
   (common-lisp:declare (common-lisp:ignorable application-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-app-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'pinpoint-request
                                                        aws-sdk/generator/operation::input
                                                        "DELETE"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v1/apps/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'application-id))))
                                                        "DeleteApp"
                                                        "2016-12-01"))
      "structure" common-lisp:nil
      '(("BadRequestException" . bad-request-exception)
        ("ForbiddenException" . forbidden-exception)
        ("InternalServerErrorException" . internal-server-error-exception)
        ("MethodNotAllowedException" . method-not-allowed-exception)
        ("NotFoundException" . not-found-exception)
        ("TooManyRequestsException" . too-many-requests-exception)))))
 (common-lisp:export 'delete-app))
(common-lisp:progn
 (common-lisp:defun delete-campaign
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key application-id campaign-id)
   (common-lisp:declare (common-lisp:ignorable application-id campaign-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-campaign-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'pinpoint-request
                                                        aws-sdk/generator/operation::input
                                                        "DELETE"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v1/apps/~A/campaigns/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'application-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'campaign-id))))
                                                        "DeleteCampaign"
                                                        "2016-12-01"))
      "structure" common-lisp:nil
      '(("BadRequestException" . bad-request-exception)
        ("ForbiddenException" . forbidden-exception)
        ("InternalServerErrorException" . internal-server-error-exception)
        ("MethodNotAllowedException" . method-not-allowed-exception)
        ("NotFoundException" . not-found-exception)
        ("TooManyRequestsException" . too-many-requests-exception)))))
 (common-lisp:export 'delete-campaign))
(common-lisp:progn
 (common-lisp:defun delete-email-channel
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key application-id)
   (common-lisp:declare (common-lisp:ignorable application-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-email-channel-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'pinpoint-request
                                                        aws-sdk/generator/operation::input
                                                        "DELETE"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v1/apps/~A/channels/email"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'application-id))))
                                                        "DeleteEmailChannel"
                                                        "2016-12-01"))
      "structure" common-lisp:nil
      '(("BadRequestException" . bad-request-exception)
        ("ForbiddenException" . forbidden-exception)
        ("InternalServerErrorException" . internal-server-error-exception)
        ("MethodNotAllowedException" . method-not-allowed-exception)
        ("NotFoundException" . not-found-exception)
        ("TooManyRequestsException" . too-many-requests-exception)))))
 (common-lisp:export 'delete-email-channel))
(common-lisp:progn
 (common-lisp:defun delete-event-stream
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key application-id)
   (common-lisp:declare (common-lisp:ignorable application-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-event-stream-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'pinpoint-request
                                                        aws-sdk/generator/operation::input
                                                        "DELETE"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v1/apps/~A/eventstream"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'application-id))))
                                                        "DeleteEventStream"
                                                        "2016-12-01"))
      "structure" common-lisp:nil
      '(("BadRequestException" . bad-request-exception)
        ("ForbiddenException" . forbidden-exception)
        ("InternalServerErrorException" . internal-server-error-exception)
        ("MethodNotAllowedException" . method-not-allowed-exception)
        ("NotFoundException" . not-found-exception)
        ("TooManyRequestsException" . too-many-requests-exception)))))
 (common-lisp:export 'delete-event-stream))
(common-lisp:progn
 (common-lisp:defun delete-gcm-channel
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key application-id)
   (common-lisp:declare (common-lisp:ignorable application-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-gcm-channel-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'pinpoint-request
                                                        aws-sdk/generator/operation::input
                                                        "DELETE"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v1/apps/~A/channels/gcm"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'application-id))))
                                                        "DeleteGcmChannel"
                                                        "2016-12-01"))
      "structure" common-lisp:nil
      '(("BadRequestException" . bad-request-exception)
        ("ForbiddenException" . forbidden-exception)
        ("InternalServerErrorException" . internal-server-error-exception)
        ("MethodNotAllowedException" . method-not-allowed-exception)
        ("NotFoundException" . not-found-exception)
        ("TooManyRequestsException" . too-many-requests-exception)))))
 (common-lisp:export 'delete-gcm-channel))
(common-lisp:progn
 (common-lisp:defun delete-segment
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key application-id segment-id)
   (common-lisp:declare (common-lisp:ignorable application-id segment-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-segment-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'pinpoint-request
                                                        aws-sdk/generator/operation::input
                                                        "DELETE"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v1/apps/~A/segments/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'application-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'segment-id))))
                                                        "DeleteSegment"
                                                        "2016-12-01"))
      "structure" common-lisp:nil
      '(("BadRequestException" . bad-request-exception)
        ("ForbiddenException" . forbidden-exception)
        ("InternalServerErrorException" . internal-server-error-exception)
        ("MethodNotAllowedException" . method-not-allowed-exception)
        ("NotFoundException" . not-found-exception)
        ("TooManyRequestsException" . too-many-requests-exception)))))
 (common-lisp:export 'delete-segment))
(common-lisp:progn
 (common-lisp:defun delete-sms-channel
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key application-id)
   (common-lisp:declare (common-lisp:ignorable application-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-sms-channel-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'pinpoint-request
                                                        aws-sdk/generator/operation::input
                                                        "DELETE"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v1/apps/~A/channels/sms"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'application-id))))
                                                        "DeleteSmsChannel"
                                                        "2016-12-01"))
      "structure" common-lisp:nil
      '(("BadRequestException" . bad-request-exception)
        ("ForbiddenException" . forbidden-exception)
        ("InternalServerErrorException" . internal-server-error-exception)
        ("MethodNotAllowedException" . method-not-allowed-exception)
        ("NotFoundException" . not-found-exception)
        ("TooManyRequestsException" . too-many-requests-exception)))))
 (common-lisp:export 'delete-sms-channel))
(common-lisp:progn
 (common-lisp:defun get-apns-channel
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key application-id)
   (common-lisp:declare (common-lisp:ignorable application-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-apns-channel-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'pinpoint-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v1/apps/~A/channels/apns"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'application-id))))
                                                        "GetApnsChannel"
                                                        "2016-12-01"))
      "structure" common-lisp:nil
      '(("BadRequestException" . bad-request-exception)
        ("ForbiddenException" . forbidden-exception)
        ("InternalServerErrorException" . internal-server-error-exception)
        ("MethodNotAllowedException" . method-not-allowed-exception)
        ("NotFoundException" . not-found-exception)
        ("TooManyRequestsException" . too-many-requests-exception)))))
 (common-lisp:export 'get-apns-channel))
(common-lisp:progn
 (common-lisp:defun get-apns-sandbox-channel
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key application-id)
   (common-lisp:declare (common-lisp:ignorable application-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-apns-sandbox-channel-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'pinpoint-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v1/apps/~A/channels/apns_sandbox"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'application-id))))
                                                        "GetApnsSandboxChannel"
                                                        "2016-12-01"))
      "structure" common-lisp:nil
      '(("BadRequestException" . bad-request-exception)
        ("ForbiddenException" . forbidden-exception)
        ("InternalServerErrorException" . internal-server-error-exception)
        ("MethodNotAllowedException" . method-not-allowed-exception)
        ("NotFoundException" . not-found-exception)
        ("TooManyRequestsException" . too-many-requests-exception)))))
 (common-lisp:export 'get-apns-sandbox-channel))
(common-lisp:progn
 (common-lisp:defun get-app
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key application-id)
   (common-lisp:declare (common-lisp:ignorable application-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-app-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'pinpoint-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v1/apps/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'application-id))))
                                                        "GetApp" "2016-12-01"))
      "structure" common-lisp:nil
      '(("BadRequestException" . bad-request-exception)
        ("ForbiddenException" . forbidden-exception)
        ("InternalServerErrorException" . internal-server-error-exception)
        ("MethodNotAllowedException" . method-not-allowed-exception)
        ("NotFoundException" . not-found-exception)
        ("TooManyRequestsException" . too-many-requests-exception)))))
 (common-lisp:export 'get-app))
(common-lisp:progn
 (common-lisp:defun get-application-settings
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key application-id)
   (common-lisp:declare (common-lisp:ignorable application-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-application-settings-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'pinpoint-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v1/apps/~A/settings"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'application-id))))
                                                        "GetApplicationSettings"
                                                        "2016-12-01"))
      "structure" common-lisp:nil
      '(("BadRequestException" . bad-request-exception)
        ("ForbiddenException" . forbidden-exception)
        ("InternalServerErrorException" . internal-server-error-exception)
        ("MethodNotAllowedException" . method-not-allowed-exception)
        ("NotFoundException" . not-found-exception)
        ("TooManyRequestsException" . too-many-requests-exception)))))
 (common-lisp:export 'get-application-settings))
(common-lisp:progn
 (common-lisp:defun get-apps
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key page-size token)
   (common-lisp:declare (common-lisp:ignorable page-size token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-apps-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'pinpoint-request
                                                        aws-sdk/generator/operation::input
                                                        "GET" "/v1/apps"
                                                        "GetApps"
                                                        "2016-12-01"))
      "structure" common-lisp:nil
      '(("BadRequestException" . bad-request-exception)
        ("ForbiddenException" . forbidden-exception)
        ("InternalServerErrorException" . internal-server-error-exception)
        ("MethodNotAllowedException" . method-not-allowed-exception)
        ("NotFoundException" . not-found-exception)
        ("TooManyRequestsException" . too-many-requests-exception)))))
 (common-lisp:export 'get-apps))
(common-lisp:progn
 (common-lisp:defun get-campaign
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key application-id campaign-id)
   (common-lisp:declare (common-lisp:ignorable application-id campaign-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-campaign-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'pinpoint-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v1/apps/~A/campaigns/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'application-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'campaign-id))))
                                                        "GetCampaign"
                                                        "2016-12-01"))
      "structure" common-lisp:nil
      '(("BadRequestException" . bad-request-exception)
        ("ForbiddenException" . forbidden-exception)
        ("InternalServerErrorException" . internal-server-error-exception)
        ("MethodNotAllowedException" . method-not-allowed-exception)
        ("NotFoundException" . not-found-exception)
        ("TooManyRequestsException" . too-many-requests-exception)))))
 (common-lisp:export 'get-campaign))
(common-lisp:progn
 (common-lisp:defun get-campaign-activities
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key application-id campaign-id page-size
                     token)
   (common-lisp:declare
    (common-lisp:ignorable application-id campaign-id page-size token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-campaign-activities-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'pinpoint-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v1/apps/~A/campaigns/~A/activities"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'application-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'campaign-id))))
                                                        "GetCampaignActivities"
                                                        "2016-12-01"))
      "structure" common-lisp:nil
      '(("BadRequestException" . bad-request-exception)
        ("ForbiddenException" . forbidden-exception)
        ("InternalServerErrorException" . internal-server-error-exception)
        ("MethodNotAllowedException" . method-not-allowed-exception)
        ("NotFoundException" . not-found-exception)
        ("TooManyRequestsException" . too-many-requests-exception)))))
 (common-lisp:export 'get-campaign-activities))
(common-lisp:progn
 (common-lisp:defun get-campaign-version
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key application-id campaign-id version)
   (common-lisp:declare
    (common-lisp:ignorable application-id campaign-id version))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-campaign-version-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'pinpoint-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v1/apps/~A/campaigns/~A/versions/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'application-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'campaign-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'version))))
                                                        "GetCampaignVersion"
                                                        "2016-12-01"))
      "structure" common-lisp:nil
      '(("BadRequestException" . bad-request-exception)
        ("ForbiddenException" . forbidden-exception)
        ("InternalServerErrorException" . internal-server-error-exception)
        ("MethodNotAllowedException" . method-not-allowed-exception)
        ("NotFoundException" . not-found-exception)
        ("TooManyRequestsException" . too-many-requests-exception)))))
 (common-lisp:export 'get-campaign-version))
(common-lisp:progn
 (common-lisp:defun get-campaign-versions
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key application-id campaign-id page-size
                     token)
   (common-lisp:declare
    (common-lisp:ignorable application-id campaign-id page-size token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-campaign-versions-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'pinpoint-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v1/apps/~A/campaigns/~A/versions"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'application-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'campaign-id))))
                                                        "GetCampaignVersions"
                                                        "2016-12-01"))
      "structure" common-lisp:nil
      '(("BadRequestException" . bad-request-exception)
        ("ForbiddenException" . forbidden-exception)
        ("InternalServerErrorException" . internal-server-error-exception)
        ("MethodNotAllowedException" . method-not-allowed-exception)
        ("NotFoundException" . not-found-exception)
        ("TooManyRequestsException" . too-many-requests-exception)))))
 (common-lisp:export 'get-campaign-versions))
(common-lisp:progn
 (common-lisp:defun get-campaigns
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key application-id page-size token)
   (common-lisp:declare (common-lisp:ignorable application-id page-size token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-campaigns-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'pinpoint-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v1/apps/~A/campaigns"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'application-id))))
                                                        "GetCampaigns"
                                                        "2016-12-01"))
      "structure" common-lisp:nil
      '(("BadRequestException" . bad-request-exception)
        ("ForbiddenException" . forbidden-exception)
        ("InternalServerErrorException" . internal-server-error-exception)
        ("MethodNotAllowedException" . method-not-allowed-exception)
        ("NotFoundException" . not-found-exception)
        ("TooManyRequestsException" . too-many-requests-exception)))))
 (common-lisp:export 'get-campaigns))
(common-lisp:progn
 (common-lisp:defun get-email-channel
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key application-id)
   (common-lisp:declare (common-lisp:ignorable application-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-email-channel-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'pinpoint-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v1/apps/~A/channels/email"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'application-id))))
                                                        "GetEmailChannel"
                                                        "2016-12-01"))
      "structure" common-lisp:nil
      '(("BadRequestException" . bad-request-exception)
        ("ForbiddenException" . forbidden-exception)
        ("InternalServerErrorException" . internal-server-error-exception)
        ("MethodNotAllowedException" . method-not-allowed-exception)
        ("NotFoundException" . not-found-exception)
        ("TooManyRequestsException" . too-many-requests-exception)))))
 (common-lisp:export 'get-email-channel))
(common-lisp:progn
 (common-lisp:defun get-endpoint
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key application-id endpoint-id)
   (common-lisp:declare (common-lisp:ignorable application-id endpoint-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-endpoint-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'pinpoint-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v1/apps/~A/endpoints/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'application-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'endpoint-id))))
                                                        "GetEndpoint"
                                                        "2016-12-01"))
      "structure" common-lisp:nil
      '(("BadRequestException" . bad-request-exception)
        ("ForbiddenException" . forbidden-exception)
        ("InternalServerErrorException" . internal-server-error-exception)
        ("MethodNotAllowedException" . method-not-allowed-exception)
        ("NotFoundException" . not-found-exception)
        ("TooManyRequestsException" . too-many-requests-exception)))))
 (common-lisp:export 'get-endpoint))
(common-lisp:progn
 (common-lisp:defun get-event-stream
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key application-id)
   (common-lisp:declare (common-lisp:ignorable application-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-event-stream-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'pinpoint-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v1/apps/~A/eventstream"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'application-id))))
                                                        "GetEventStream"
                                                        "2016-12-01"))
      "structure" common-lisp:nil
      '(("BadRequestException" . bad-request-exception)
        ("ForbiddenException" . forbidden-exception)
        ("InternalServerErrorException" . internal-server-error-exception)
        ("MethodNotAllowedException" . method-not-allowed-exception)
        ("NotFoundException" . not-found-exception)
        ("TooManyRequestsException" . too-many-requests-exception)))))
 (common-lisp:export 'get-event-stream))
(common-lisp:progn
 (common-lisp:defun get-gcm-channel
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key application-id)
   (common-lisp:declare (common-lisp:ignorable application-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-gcm-channel-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'pinpoint-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v1/apps/~A/channels/gcm"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'application-id))))
                                                        "GetGcmChannel"
                                                        "2016-12-01"))
      "structure" common-lisp:nil
      '(("BadRequestException" . bad-request-exception)
        ("ForbiddenException" . forbidden-exception)
        ("InternalServerErrorException" . internal-server-error-exception)
        ("MethodNotAllowedException" . method-not-allowed-exception)
        ("NotFoundException" . not-found-exception)
        ("TooManyRequestsException" . too-many-requests-exception)))))
 (common-lisp:export 'get-gcm-channel))
(common-lisp:progn
 (common-lisp:defun get-import-job
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key application-id job-id)
   (common-lisp:declare (common-lisp:ignorable application-id job-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-import-job-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'pinpoint-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v1/apps/~A/jobs/import/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'application-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'job-id))))
                                                        "GetImportJob"
                                                        "2016-12-01"))
      "structure" common-lisp:nil
      '(("BadRequestException" . bad-request-exception)
        ("ForbiddenException" . forbidden-exception)
        ("InternalServerErrorException" . internal-server-error-exception)
        ("MethodNotAllowedException" . method-not-allowed-exception)
        ("NotFoundException" . not-found-exception)
        ("TooManyRequestsException" . too-many-requests-exception)))))
 (common-lisp:export 'get-import-job))
(common-lisp:progn
 (common-lisp:defun get-import-jobs
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key application-id page-size token)
   (common-lisp:declare (common-lisp:ignorable application-id page-size token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-import-jobs-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'pinpoint-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v1/apps/~A/jobs/import"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'application-id))))
                                                        "GetImportJobs"
                                                        "2016-12-01"))
      "structure" common-lisp:nil
      '(("BadRequestException" . bad-request-exception)
        ("ForbiddenException" . forbidden-exception)
        ("InternalServerErrorException" . internal-server-error-exception)
        ("MethodNotAllowedException" . method-not-allowed-exception)
        ("NotFoundException" . not-found-exception)
        ("TooManyRequestsException" . too-many-requests-exception)))))
 (common-lisp:export 'get-import-jobs))
(common-lisp:progn
 (common-lisp:defun get-segment
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key application-id segment-id)
   (common-lisp:declare (common-lisp:ignorable application-id segment-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-segment-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'pinpoint-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v1/apps/~A/segments/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'application-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'segment-id))))
                                                        "GetSegment"
                                                        "2016-12-01"))
      "structure" common-lisp:nil
      '(("BadRequestException" . bad-request-exception)
        ("ForbiddenException" . forbidden-exception)
        ("InternalServerErrorException" . internal-server-error-exception)
        ("MethodNotAllowedException" . method-not-allowed-exception)
        ("NotFoundException" . not-found-exception)
        ("TooManyRequestsException" . too-many-requests-exception)))))
 (common-lisp:export 'get-segment))
(common-lisp:progn
 (common-lisp:defun get-segment-import-jobs
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key application-id page-size segment-id
                     token)
   (common-lisp:declare
    (common-lisp:ignorable application-id page-size segment-id token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-segment-import-jobs-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'pinpoint-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v1/apps/~A/segments/~A/jobs/import"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'application-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'segment-id))))
                                                        "GetSegmentImportJobs"
                                                        "2016-12-01"))
      "structure" common-lisp:nil
      '(("BadRequestException" . bad-request-exception)
        ("ForbiddenException" . forbidden-exception)
        ("InternalServerErrorException" . internal-server-error-exception)
        ("MethodNotAllowedException" . method-not-allowed-exception)
        ("NotFoundException" . not-found-exception)
        ("TooManyRequestsException" . too-many-requests-exception)))))
 (common-lisp:export 'get-segment-import-jobs))
(common-lisp:progn
 (common-lisp:defun get-segment-version
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key application-id segment-id version)
   (common-lisp:declare
    (common-lisp:ignorable application-id segment-id version))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-segment-version-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'pinpoint-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v1/apps/~A/segments/~A/versions/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'application-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'segment-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'version))))
                                                        "GetSegmentVersion"
                                                        "2016-12-01"))
      "structure" common-lisp:nil
      '(("BadRequestException" . bad-request-exception)
        ("ForbiddenException" . forbidden-exception)
        ("InternalServerErrorException" . internal-server-error-exception)
        ("MethodNotAllowedException" . method-not-allowed-exception)
        ("NotFoundException" . not-found-exception)
        ("TooManyRequestsException" . too-many-requests-exception)))))
 (common-lisp:export 'get-segment-version))
(common-lisp:progn
 (common-lisp:defun get-segment-versions
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key application-id page-size segment-id
                     token)
   (common-lisp:declare
    (common-lisp:ignorable application-id page-size segment-id token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-segment-versions-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'pinpoint-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v1/apps/~A/segments/~A/versions"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'application-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'segment-id))))
                                                        "GetSegmentVersions"
                                                        "2016-12-01"))
      "structure" common-lisp:nil
      '(("BadRequestException" . bad-request-exception)
        ("ForbiddenException" . forbidden-exception)
        ("InternalServerErrorException" . internal-server-error-exception)
        ("MethodNotAllowedException" . method-not-allowed-exception)
        ("NotFoundException" . not-found-exception)
        ("TooManyRequestsException" . too-many-requests-exception)))))
 (common-lisp:export 'get-segment-versions))
(common-lisp:progn
 (common-lisp:defun get-segments
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key application-id page-size token)
   (common-lisp:declare (common-lisp:ignorable application-id page-size token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-segments-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'pinpoint-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v1/apps/~A/segments"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'application-id))))
                                                        "GetSegments"
                                                        "2016-12-01"))
      "structure" common-lisp:nil
      '(("BadRequestException" . bad-request-exception)
        ("ForbiddenException" . forbidden-exception)
        ("InternalServerErrorException" . internal-server-error-exception)
        ("MethodNotAllowedException" . method-not-allowed-exception)
        ("NotFoundException" . not-found-exception)
        ("TooManyRequestsException" . too-many-requests-exception)))))
 (common-lisp:export 'get-segments))
(common-lisp:progn
 (common-lisp:defun get-sms-channel
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key application-id)
   (common-lisp:declare (common-lisp:ignorable application-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-sms-channel-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'pinpoint-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v1/apps/~A/channels/sms"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'application-id))))
                                                        "GetSmsChannel"
                                                        "2016-12-01"))
      "structure" common-lisp:nil
      '(("BadRequestException" . bad-request-exception)
        ("ForbiddenException" . forbidden-exception)
        ("InternalServerErrorException" . internal-server-error-exception)
        ("MethodNotAllowedException" . method-not-allowed-exception)
        ("NotFoundException" . not-found-exception)
        ("TooManyRequestsException" . too-many-requests-exception)))))
 (common-lisp:export 'get-sms-channel))
(common-lisp:progn
 (common-lisp:defun put-event-stream
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key application-id write-event-stream)
   (common-lisp:declare
    (common-lisp:ignorable application-id write-event-stream))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-put-event-stream-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'pinpoint-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v1/apps/~A/eventstream"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'application-id))))
                                                        "PutEventStream"
                                                        "2016-12-01"))
      "structure" common-lisp:nil
      '(("BadRequestException" . bad-request-exception)
        ("ForbiddenException" . forbidden-exception)
        ("InternalServerErrorException" . internal-server-error-exception)
        ("MethodNotAllowedException" . method-not-allowed-exception)
        ("NotFoundException" . not-found-exception)
        ("TooManyRequestsException" . too-many-requests-exception)))))
 (common-lisp:export 'put-event-stream))
(common-lisp:progn
 (common-lisp:defun send-messages
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key application-id message-request)
   (common-lisp:declare (common-lisp:ignorable application-id message-request))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-send-messages-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'pinpoint-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v1/apps/~A/messages"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'application-id))))
                                                        "SendMessages"
                                                        "2016-12-01"))
      "structure" common-lisp:nil
      '(("BadRequestException" . bad-request-exception)
        ("ForbiddenException" . forbidden-exception)
        ("InternalServerErrorException" . internal-server-error-exception)
        ("MethodNotAllowedException" . method-not-allowed-exception)
        ("NotFoundException" . not-found-exception)
        ("TooManyRequestsException" . too-many-requests-exception)))))
 (common-lisp:export 'send-messages))
(common-lisp:progn
 (common-lisp:defun update-apns-channel
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key apnschannel-request application-id)
   (common-lisp:declare
    (common-lisp:ignorable apnschannel-request application-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-apns-channel-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'pinpoint-request
                                                        aws-sdk/generator/operation::input
                                                        "PUT"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v1/apps/~A/channels/apns"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'application-id))))
                                                        "UpdateApnsChannel"
                                                        "2016-12-01"))
      "structure" common-lisp:nil
      '(("BadRequestException" . bad-request-exception)
        ("ForbiddenException" . forbidden-exception)
        ("InternalServerErrorException" . internal-server-error-exception)
        ("MethodNotAllowedException" . method-not-allowed-exception)
        ("NotFoundException" . not-found-exception)
        ("TooManyRequestsException" . too-many-requests-exception)))))
 (common-lisp:export 'update-apns-channel))
(common-lisp:progn
 (common-lisp:defun update-apns-sandbox-channel
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key apnssandbox-channel-request
                     application-id)
   (common-lisp:declare
    (common-lisp:ignorable apnssandbox-channel-request application-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-update-apns-sandbox-channel-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'pinpoint-request
                                                        aws-sdk/generator/operation::input
                                                        "PUT"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v1/apps/~A/channels/apns_sandbox"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'application-id))))
                                                        "UpdateApnsSandboxChannel"
                                                        "2016-12-01"))
      "structure" common-lisp:nil
      '(("BadRequestException" . bad-request-exception)
        ("ForbiddenException" . forbidden-exception)
        ("InternalServerErrorException" . internal-server-error-exception)
        ("MethodNotAllowedException" . method-not-allowed-exception)
        ("NotFoundException" . not-found-exception)
        ("TooManyRequestsException" . too-many-requests-exception)))))
 (common-lisp:export 'update-apns-sandbox-channel))
(common-lisp:progn
 (common-lisp:defun update-application-settings
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key application-id
                     write-application-settings-request)
   (common-lisp:declare
    (common-lisp:ignorable application-id write-application-settings-request))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-update-application-settings-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'pinpoint-request
                                                        aws-sdk/generator/operation::input
                                                        "PUT"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v1/apps/~A/settings"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'application-id))))
                                                        "UpdateApplicationSettings"
                                                        "2016-12-01"))
      "structure" common-lisp:nil
      '(("BadRequestException" . bad-request-exception)
        ("ForbiddenException" . forbidden-exception)
        ("InternalServerErrorException" . internal-server-error-exception)
        ("MethodNotAllowedException" . method-not-allowed-exception)
        ("NotFoundException" . not-found-exception)
        ("TooManyRequestsException" . too-many-requests-exception)))))
 (common-lisp:export 'update-application-settings))
(common-lisp:progn
 (common-lisp:defun update-campaign
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key application-id campaign-id
                     write-campaign-request)
   (common-lisp:declare
    (common-lisp:ignorable application-id campaign-id write-campaign-request))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-campaign-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'pinpoint-request
                                                        aws-sdk/generator/operation::input
                                                        "PUT"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v1/apps/~A/campaigns/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'application-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'campaign-id))))
                                                        "UpdateCampaign"
                                                        "2016-12-01"))
      "structure" common-lisp:nil
      '(("BadRequestException" . bad-request-exception)
        ("ForbiddenException" . forbidden-exception)
        ("InternalServerErrorException" . internal-server-error-exception)
        ("MethodNotAllowedException" . method-not-allowed-exception)
        ("NotFoundException" . not-found-exception)
        ("TooManyRequestsException" . too-many-requests-exception)))))
 (common-lisp:export 'update-campaign))
(common-lisp:progn
 (common-lisp:defun update-email-channel
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key application-id email-channel-request)
   (common-lisp:declare
    (common-lisp:ignorable application-id email-channel-request))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-email-channel-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'pinpoint-request
                                                        aws-sdk/generator/operation::input
                                                        "PUT"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v1/apps/~A/channels/email"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'application-id))))
                                                        "UpdateEmailChannel"
                                                        "2016-12-01"))
      "structure" common-lisp:nil
      '(("BadRequestException" . bad-request-exception)
        ("ForbiddenException" . forbidden-exception)
        ("InternalServerErrorException" . internal-server-error-exception)
        ("MethodNotAllowedException" . method-not-allowed-exception)
        ("NotFoundException" . not-found-exception)
        ("TooManyRequestsException" . too-many-requests-exception)))))
 (common-lisp:export 'update-email-channel))
(common-lisp:progn
 (common-lisp:defun update-endpoint
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key application-id endpoint-id
                     endpoint-request)
   (common-lisp:declare
    (common-lisp:ignorable application-id endpoint-id endpoint-request))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-endpoint-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'pinpoint-request
                                                        aws-sdk/generator/operation::input
                                                        "PUT"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v1/apps/~A/endpoints/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'application-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'endpoint-id))))
                                                        "UpdateEndpoint"
                                                        "2016-12-01"))
      "structure" common-lisp:nil
      '(("BadRequestException" . bad-request-exception)
        ("ForbiddenException" . forbidden-exception)
        ("InternalServerErrorException" . internal-server-error-exception)
        ("MethodNotAllowedException" . method-not-allowed-exception)
        ("NotFoundException" . not-found-exception)
        ("TooManyRequestsException" . too-many-requests-exception)))))
 (common-lisp:export 'update-endpoint))
(common-lisp:progn
 (common-lisp:defun update-endpoints-batch
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key application-id endpoint-batch-request)
   (common-lisp:declare
    (common-lisp:ignorable application-id endpoint-batch-request))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-endpoints-batch-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'pinpoint-request
                                                        aws-sdk/generator/operation::input
                                                        "PUT"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v1/apps/~A/endpoints"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'application-id))))
                                                        "UpdateEndpointsBatch"
                                                        "2016-12-01"))
      "structure" common-lisp:nil
      '(("BadRequestException" . bad-request-exception)
        ("ForbiddenException" . forbidden-exception)
        ("InternalServerErrorException" . internal-server-error-exception)
        ("MethodNotAllowedException" . method-not-allowed-exception)
        ("NotFoundException" . not-found-exception)
        ("TooManyRequestsException" . too-many-requests-exception)))))
 (common-lisp:export 'update-endpoints-batch))
(common-lisp:progn
 (common-lisp:defun update-gcm-channel
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key application-id gcmchannel-request)
   (common-lisp:declare
    (common-lisp:ignorable application-id gcmchannel-request))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-gcm-channel-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'pinpoint-request
                                                        aws-sdk/generator/operation::input
                                                        "PUT"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v1/apps/~A/channels/gcm"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'application-id))))
                                                        "UpdateGcmChannel"
                                                        "2016-12-01"))
      "structure" common-lisp:nil
      '(("BadRequestException" . bad-request-exception)
        ("ForbiddenException" . forbidden-exception)
        ("InternalServerErrorException" . internal-server-error-exception)
        ("MethodNotAllowedException" . method-not-allowed-exception)
        ("NotFoundException" . not-found-exception)
        ("TooManyRequestsException" . too-many-requests-exception)))))
 (common-lisp:export 'update-gcm-channel))
(common-lisp:progn
 (common-lisp:defun update-segment
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key application-id segment-id
                     write-segment-request)
   (common-lisp:declare
    (common-lisp:ignorable application-id segment-id write-segment-request))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-segment-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'pinpoint-request
                                                        aws-sdk/generator/operation::input
                                                        "PUT"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v1/apps/~A/segments/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'application-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'segment-id))))
                                                        "UpdateSegment"
                                                        "2016-12-01"))
      "structure" common-lisp:nil
      '(("BadRequestException" . bad-request-exception)
        ("ForbiddenException" . forbidden-exception)
        ("InternalServerErrorException" . internal-server-error-exception)
        ("MethodNotAllowedException" . method-not-allowed-exception)
        ("NotFoundException" . not-found-exception)
        ("TooManyRequestsException" . too-many-requests-exception)))))
 (common-lisp:export 'update-segment))
(common-lisp:progn
 (common-lisp:defun update-sms-channel
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key application-id smschannel-request)
   (common-lisp:declare
    (common-lisp:ignorable application-id smschannel-request))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-sms-channel-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'pinpoint-request
                                                        aws-sdk/generator/operation::input
                                                        "PUT"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v1/apps/~A/channels/sms"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'application-id))))
                                                        "UpdateSmsChannel"
                                                        "2016-12-01"))
      "structure" common-lisp:nil
      '(("BadRequestException" . bad-request-exception)
        ("ForbiddenException" . forbidden-exception)
        ("InternalServerErrorException" . internal-server-error-exception)
        ("MethodNotAllowedException" . method-not-allowed-exception)
        ("NotFoundException" . not-found-exception)
        ("TooManyRequestsException" . too-many-requests-exception)))))
 (common-lisp:export 'update-sms-channel))
