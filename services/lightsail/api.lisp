;; DO NOT EDIT: File is generated by AWS-SDK/GENERATOR.

(common-lisp:defpackage #:aws-sdk/services/lightsail/api
  (:use)
  (:nicknames #:aws/lightsail)
  (:import-from #:aws-sdk/generator/shape)
  (:import-from #:aws-sdk/generator/operation)
  (:import-from #:aws-sdk/api)
  (:import-from #:aws-sdk/request)
  (:import-from #:aws-sdk/error))
(common-lisp:in-package #:aws-sdk/services/lightsail/api)
(common-lisp:progn
 (common-lisp:defclass lightsail-request (aws-sdk/request:request)
                       common-lisp:nil
                       (:default-initargs :service "lightsail"))
 (common-lisp:export 'lightsail-request))
(common-lisp:progn
 (common-lisp:define-condition lightsail-error
     (aws-sdk/error:aws-error)
     common-lisp:nil)
 (common-lisp:export 'lightsail-error))
(common-lisp:progn
 (common-lisp:define-condition access-denied-exception
     (lightsail-error)
     ((code :initarg :code :initform common-lisp:nil :reader
       access-denied-exception-code)
      (docs :initarg :docs :initform common-lisp:nil :reader
       access-denied-exception-docs)
      (message :initarg :message :initform common-lisp:nil :reader
       access-denied-exception-message)
      (tip :initarg :tip :initform common-lisp:nil :reader
       access-denied-exception-tip)))
 (common-lisp:export
  (common-lisp:list 'access-denied-exception 'access-denied-exception-code
                    'access-denied-exception-docs
                    'access-denied-exception-message
                    'access-denied-exception-tip)))
(common-lisp:deftype access-direction () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:define-condition account-setup-in-progress-exception
     (lightsail-error)
     ((code :initarg :code :initform common-lisp:nil :reader
       account-setup-in-progress-exception-code)
      (docs :initarg :docs :initform common-lisp:nil :reader
       account-setup-in-progress-exception-docs)
      (message :initarg :message :initform common-lisp:nil :reader
       account-setup-in-progress-exception-message)
      (tip :initarg :tip :initform common-lisp:nil :reader
       account-setup-in-progress-exception-tip)))
 (common-lisp:export
  (common-lisp:list 'account-setup-in-progress-exception
                    'account-setup-in-progress-exception-code
                    'account-setup-in-progress-exception-docs
                    'account-setup-in-progress-exception-message
                    'account-setup-in-progress-exception-tip)))
(common-lisp:progn
 (common-lisp:defstruct
     (allocate-static-ip-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-allocate-static-ip-request-"))
   (static-ip-name (common-lisp:error ":staticipname is required") :type
    (common-lisp:or resource-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'allocate-static-ip-request
                    'make-allocate-static-ip-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          allocate-static-ip-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          allocate-static-ip-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'static-ip-name))
      (common-lisp:list
       (common-lisp:cons "staticIpName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          allocate-static-ip-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (allocate-static-ip-result (:copier common-lisp:nil)
      (:conc-name "struct-shape-allocate-static-ip-result-"))
   (operations common-lisp:nil :type
    (common-lisp:or operation-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'allocate-static-ip-result
                    'make-allocate-static-ip-result))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          allocate-static-ip-result))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          allocate-static-ip-result))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'operations))
      (common-lisp:list
       (common-lisp:cons "operations"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          allocate-static-ip-result))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (attach-static-ip-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-attach-static-ip-request-"))
   (static-ip-name (common-lisp:error ":staticipname is required") :type
    (common-lisp:or resource-name common-lisp:null))
   (instance-name (common-lisp:error ":instancename is required") :type
    (common-lisp:or resource-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'attach-static-ip-request 'make-attach-static-ip-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          attach-static-ip-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          attach-static-ip-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'static-ip-name))
      (common-lisp:list
       (common-lisp:cons "staticIpName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'instance-name))
      (common-lisp:list
       (common-lisp:cons "instanceName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          attach-static-ip-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (attach-static-ip-result (:copier common-lisp:nil)
      (:conc-name "struct-shape-attach-static-ip-result-"))
   (operations common-lisp:nil :type
    (common-lisp:or operation-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'attach-static-ip-result 'make-attach-static-ip-result))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          attach-static-ip-result))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          attach-static-ip-result))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'operations))
      (common-lisp:list
       (common-lisp:cons "operations"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          attach-static-ip-result))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (availability-zone (:copier common-lisp:nil)
      (:conc-name "struct-shape-availability-zone-"))
   (zone-name common-lisp:nil :type
    (common-lisp:or non-empty-string common-lisp:null))
   (state common-lisp:nil :type
    (common-lisp:or non-empty-string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'availability-zone 'make-availability-zone))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input availability-zone))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input availability-zone))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'zone-name))
      (common-lisp:list
       (common-lisp:cons "zoneName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'state))
      (common-lisp:list
       (common-lisp:cons "state"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input availability-zone))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype availability-zone-list ()
   '(trivial-types:proper-list availability-zone))
 (common-lisp:defun |make-availability-zone-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list availability-zone))
   aws-sdk/generator/shape::members))
(common-lisp:deftype base64 () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (blueprint (:copier common-lisp:nil)
      (:conc-name "struct-shape-blueprint-"))
   (blueprint-id common-lisp:nil :type
    (common-lisp:or non-empty-string common-lisp:null))
   (name common-lisp:nil :type (common-lisp:or resource-name common-lisp:null))
   (group common-lisp:nil :type
    (common-lisp:or non-empty-string common-lisp:null))
   (type common-lisp:nil :type
    (common-lisp:or blueprint-type common-lisp:null))
   (description common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (is-active common-lisp:nil :type
    (common-lisp:or common-lisp:boolean common-lisp:null))
   (min-power common-lisp:nil :type
    (common-lisp:or common-lisp:integer common-lisp:null))
   (version common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (version-code common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (product-url common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (license-url common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'blueprint 'make-blueprint))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input blueprint))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input blueprint))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'blueprint-id))
      (common-lisp:list
       (common-lisp:cons "blueprintId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'group))
      (common-lisp:list
       (common-lisp:cons "group"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'type))
      (common-lisp:list
       (common-lisp:cons "type"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'is-active))
      (common-lisp:list
       (common-lisp:cons "isActive"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'min-power))
      (common-lisp:list
       (common-lisp:cons "minPower"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'version))
      (common-lisp:list
       (common-lisp:cons "version"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'version-code))
      (common-lisp:list
       (common-lisp:cons "versionCode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'product-url))
      (common-lisp:list
       (common-lisp:cons "productUrl"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'license-url))
      (common-lisp:list
       (common-lisp:cons "licenseUrl"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input blueprint))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype blueprint-list () '(trivial-types:proper-list blueprint))
 (common-lisp:defun |make-blueprint-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list blueprint))
   aws-sdk/generator/shape::members))
(common-lisp:deftype blueprint-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (bundle (:copier common-lisp:nil) (:conc-name "struct-shape-bundle-"))
   (price common-lisp:nil :type
    (common-lisp:or common-lisp:single-float common-lisp:null))
   (cpu-count common-lisp:nil :type
    (common-lisp:or common-lisp:integer common-lisp:null))
   (disk-size-in-gb common-lisp:nil :type
    (common-lisp:or common-lisp:integer common-lisp:null))
   (bundle-id common-lisp:nil :type
    (common-lisp:or non-empty-string common-lisp:null))
   (instance-type common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (is-active common-lisp:nil :type
    (common-lisp:or common-lisp:boolean common-lisp:null))
   (name common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (power common-lisp:nil :type
    (common-lisp:or common-lisp:integer common-lisp:null))
   (ram-size-in-gb common-lisp:nil :type
    (common-lisp:or common-lisp:single-float common-lisp:null))
   (transfer-per-month-in-gb common-lisp:nil :type
    (common-lisp:or common-lisp:integer common-lisp:null)))
 (common-lisp:export (common-lisp:list 'bundle 'make-bundle))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input bundle))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input bundle))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'price))
      (common-lisp:list
       (common-lisp:cons "price"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'cpu-count))
      (common-lisp:list
       (common-lisp:cons "cpuCount"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'disk-size-in-gb))
      (common-lisp:list
       (common-lisp:cons "diskSizeInGb"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'bundle-id))
      (common-lisp:list
       (common-lisp:cons "bundleId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'instance-type))
      (common-lisp:list
       (common-lisp:cons "instanceType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'is-active))
      (common-lisp:list
       (common-lisp:cons "isActive"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'power))
      (common-lisp:list
       (common-lisp:cons "power"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'ram-size-in-gb))
      (common-lisp:list
       (common-lisp:cons "ramSizeInGb"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'transfer-per-month-in-gb))
      (common-lisp:list
       (common-lisp:cons "transferPerMonthInGb"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input bundle))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype bundle-list () '(trivial-types:proper-list bundle))
 (common-lisp:defun |make-bundle-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list bundle))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (close-instance-public-ports-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-close-instance-public-ports-request-"))
   (port-info (common-lisp:error ":portinfo is required") :type
    (common-lisp:or port-info common-lisp:null))
   (instance-name (common-lisp:error ":instancename is required") :type
    (common-lisp:or resource-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'close-instance-public-ports-request
                    'make-close-instance-public-ports-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          close-instance-public-ports-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          close-instance-public-ports-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'port-info))
      (common-lisp:list
       (common-lisp:cons "portInfo"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'instance-name))
      (common-lisp:list
       (common-lisp:cons "instanceName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          close-instance-public-ports-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (close-instance-public-ports-result (:copier common-lisp:nil)
      (:conc-name "struct-shape-close-instance-public-ports-result-"))
   (operation common-lisp:nil :type
    (common-lisp:or operation common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'close-instance-public-ports-result
                    'make-close-instance-public-ports-result))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          close-instance-public-ports-result))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          close-instance-public-ports-result))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'operation))
      (common-lisp:list
       (common-lisp:cons "operation"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          close-instance-public-ports-result))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-domain-entry-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-domain-entry-request-"))
   (domain-name (common-lisp:error ":domainname is required") :type
    (common-lisp:or domain-name common-lisp:null))
   (domain-entry (common-lisp:error ":domainentry is required") :type
    (common-lisp:or domain-entry common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-domain-entry-request
                    'make-create-domain-entry-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-domain-entry-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-domain-entry-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'domain-name))
      (common-lisp:list
       (common-lisp:cons "domainName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'domain-entry))
      (common-lisp:list
       (common-lisp:cons "domainEntry"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-domain-entry-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-domain-entry-result (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-domain-entry-result-"))
   (operation common-lisp:nil :type
    (common-lisp:or operation common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-domain-entry-result
                    'make-create-domain-entry-result))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-domain-entry-result))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-domain-entry-result))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'operation))
      (common-lisp:list
       (common-lisp:cons "operation"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-domain-entry-result))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-domain-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-domain-request-"))
   (domain-name (common-lisp:error ":domainname is required") :type
    (common-lisp:or domain-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-domain-request 'make-create-domain-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-domain-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-domain-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'domain-name))
      (common-lisp:list
       (common-lisp:cons "domainName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-domain-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-domain-result (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-domain-result-"))
   (operation common-lisp:nil :type
    (common-lisp:or operation common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-domain-result 'make-create-domain-result))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input create-domain-result))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input create-domain-result))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'operation))
      (common-lisp:list
       (common-lisp:cons "operation"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input create-domain-result))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-instance-snapshot-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-instance-snapshot-request-"))
   (instance-snapshot-name
    (common-lisp:error ":instancesnapshotname is required") :type
    (common-lisp:or resource-name common-lisp:null))
   (instance-name (common-lisp:error ":instancename is required") :type
    (common-lisp:or resource-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-instance-snapshot-request
                    'make-create-instance-snapshot-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-instance-snapshot-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-instance-snapshot-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'instance-snapshot-name))
      (common-lisp:list
       (common-lisp:cons "instanceSnapshotName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'instance-name))
      (common-lisp:list
       (common-lisp:cons "instanceName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-instance-snapshot-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-instance-snapshot-result (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-instance-snapshot-result-"))
   (operations common-lisp:nil :type
    (common-lisp:or operation-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-instance-snapshot-result
                    'make-create-instance-snapshot-result))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-instance-snapshot-result))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-instance-snapshot-result))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'operations))
      (common-lisp:list
       (common-lisp:cons "operations"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-instance-snapshot-result))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-instances-from-snapshot-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-instances-from-snapshot-request-"))
   (instance-names (common-lisp:error ":instancenames is required") :type
    (common-lisp:or string-list common-lisp:null))
   (availability-zone (common-lisp:error ":availabilityzone is required") :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (instance-snapshot-name
    (common-lisp:error ":instancesnapshotname is required") :type
    (common-lisp:or resource-name common-lisp:null))
   (bundle-id (common-lisp:error ":bundleid is required") :type
    (common-lisp:or non-empty-string common-lisp:null))
   (user-data common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (key-pair-name common-lisp:nil :type
    (common-lisp:or resource-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-instances-from-snapshot-request
                    'make-create-instances-from-snapshot-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-instances-from-snapshot-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-instances-from-snapshot-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'instance-names))
      (common-lisp:list
       (common-lisp:cons "instanceNames"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'availability-zone))
      (common-lisp:list
       (common-lisp:cons "availabilityZone"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'instance-snapshot-name))
      (common-lisp:list
       (common-lisp:cons "instanceSnapshotName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'bundle-id))
      (common-lisp:list
       (common-lisp:cons "bundleId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'user-data))
      (common-lisp:list
       (common-lisp:cons "userData"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'key-pair-name))
      (common-lisp:list
       (common-lisp:cons "keyPairName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-instances-from-snapshot-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-instances-from-snapshot-result (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-instances-from-snapshot-result-"))
   (operations common-lisp:nil :type
    (common-lisp:or operation-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-instances-from-snapshot-result
                    'make-create-instances-from-snapshot-result))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-instances-from-snapshot-result))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-instances-from-snapshot-result))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'operations))
      (common-lisp:list
       (common-lisp:cons "operations"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-instances-from-snapshot-result))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-instances-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-instances-request-"))
   (instance-names (common-lisp:error ":instancenames is required") :type
    (common-lisp:or string-list common-lisp:null))
   (availability-zone (common-lisp:error ":availabilityzone is required") :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (custom-image-name common-lisp:nil :type
    (common-lisp:or resource-name common-lisp:null))
   (blueprint-id (common-lisp:error ":blueprintid is required") :type
    (common-lisp:or non-empty-string common-lisp:null))
   (bundle-id (common-lisp:error ":bundleid is required") :type
    (common-lisp:or non-empty-string common-lisp:null))
   (user-data common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (key-pair-name common-lisp:nil :type
    (common-lisp:or resource-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-instances-request 'make-create-instances-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-instances-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-instances-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'instance-names))
      (common-lisp:list
       (common-lisp:cons "instanceNames"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'availability-zone))
      (common-lisp:list
       (common-lisp:cons "availabilityZone"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'custom-image-name))
      (common-lisp:list
       (common-lisp:cons "customImageName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'blueprint-id))
      (common-lisp:list
       (common-lisp:cons "blueprintId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'bundle-id))
      (common-lisp:list
       (common-lisp:cons "bundleId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'user-data))
      (common-lisp:list
       (common-lisp:cons "userData"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'key-pair-name))
      (common-lisp:list
       (common-lisp:cons "keyPairName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-instances-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-instances-result (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-instances-result-"))
   (operations common-lisp:nil :type
    (common-lisp:or operation-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-instances-result 'make-create-instances-result))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-instances-result))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-instances-result))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'operations))
      (common-lisp:list
       (common-lisp:cons "operations"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-instances-result))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-key-pair-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-key-pair-request-"))
   (key-pair-name (common-lisp:error ":keypairname is required") :type
    (common-lisp:or resource-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-key-pair-request 'make-create-key-pair-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-key-pair-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-key-pair-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'key-pair-name))
      (common-lisp:list
       (common-lisp:cons "keyPairName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-key-pair-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-key-pair-result (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-key-pair-result-"))
   (key-pair common-lisp:nil :type (common-lisp:or key-pair common-lisp:null))
   (public-key-base64 common-lisp:nil :type
    (common-lisp:or base64 common-lisp:null))
   (private-key-base64 common-lisp:nil :type
    (common-lisp:or base64 common-lisp:null))
   (operation common-lisp:nil :type
    (common-lisp:or operation common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-key-pair-result 'make-create-key-pair-result))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-key-pair-result))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-key-pair-result))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'key-pair))
      (common-lisp:list
       (common-lisp:cons "keyPair"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'public-key-base64))
      (common-lisp:list
       (common-lisp:cons "publicKeyBase64"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'private-key-base64))
      (common-lisp:list
       (common-lisp:cons "privateKeyBase64"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'operation))
      (common-lisp:list
       (common-lisp:cons "operation"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-key-pair-result))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-domain-entry-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-domain-entry-request-"))
   (domain-name (common-lisp:error ":domainname is required") :type
    (common-lisp:or domain-name common-lisp:null))
   (domain-entry (common-lisp:error ":domainentry is required") :type
    (common-lisp:or domain-entry common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-domain-entry-request
                    'make-delete-domain-entry-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-domain-entry-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-domain-entry-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'domain-name))
      (common-lisp:list
       (common-lisp:cons "domainName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'domain-entry))
      (common-lisp:list
       (common-lisp:cons "domainEntry"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-domain-entry-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-domain-entry-result (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-domain-entry-result-"))
   (operation common-lisp:nil :type
    (common-lisp:or operation common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-domain-entry-result
                    'make-delete-domain-entry-result))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-domain-entry-result))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-domain-entry-result))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'operation))
      (common-lisp:list
       (common-lisp:cons "operation"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-domain-entry-result))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-domain-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-domain-request-"))
   (domain-name (common-lisp:error ":domainname is required") :type
    (common-lisp:or domain-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-domain-request 'make-delete-domain-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-domain-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-domain-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'domain-name))
      (common-lisp:list
       (common-lisp:cons "domainName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-domain-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-domain-result (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-domain-result-"))
   (operation common-lisp:nil :type
    (common-lisp:or operation common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-domain-result 'make-delete-domain-result))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input delete-domain-result))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input delete-domain-result))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'operation))
      (common-lisp:list
       (common-lisp:cons "operation"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input delete-domain-result))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-instance-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-instance-request-"))
   (instance-name (common-lisp:error ":instancename is required") :type
    (common-lisp:or resource-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-instance-request 'make-delete-instance-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-instance-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-instance-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'instance-name))
      (common-lisp:list
       (common-lisp:cons "instanceName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-instance-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-instance-result (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-instance-result-"))
   (operations common-lisp:nil :type
    (common-lisp:or operation-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-instance-result 'make-delete-instance-result))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-instance-result))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-instance-result))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'operations))
      (common-lisp:list
       (common-lisp:cons "operations"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-instance-result))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-instance-snapshot-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-instance-snapshot-request-"))
   (instance-snapshot-name
    (common-lisp:error ":instancesnapshotname is required") :type
    (common-lisp:or resource-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-instance-snapshot-request
                    'make-delete-instance-snapshot-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-instance-snapshot-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-instance-snapshot-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'instance-snapshot-name))
      (common-lisp:list
       (common-lisp:cons "instanceSnapshotName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-instance-snapshot-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-instance-snapshot-result (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-instance-snapshot-result-"))
   (operations common-lisp:nil :type
    (common-lisp:or operation-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-instance-snapshot-result
                    'make-delete-instance-snapshot-result))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-instance-snapshot-result))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-instance-snapshot-result))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'operations))
      (common-lisp:list
       (common-lisp:cons "operations"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-instance-snapshot-result))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-key-pair-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-key-pair-request-"))
   (key-pair-name (common-lisp:error ":keypairname is required") :type
    (common-lisp:or resource-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-key-pair-request 'make-delete-key-pair-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-key-pair-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-key-pair-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'key-pair-name))
      (common-lisp:list
       (common-lisp:cons "keyPairName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-key-pair-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-key-pair-result (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-key-pair-result-"))
   (operation common-lisp:nil :type
    (common-lisp:or operation common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-key-pair-result 'make-delete-key-pair-result))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-key-pair-result))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-key-pair-result))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'operation))
      (common-lisp:list
       (common-lisp:cons "operation"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-key-pair-result))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (detach-static-ip-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-detach-static-ip-request-"))
   (static-ip-name (common-lisp:error ":staticipname is required") :type
    (common-lisp:or resource-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'detach-static-ip-request 'make-detach-static-ip-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          detach-static-ip-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          detach-static-ip-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'static-ip-name))
      (common-lisp:list
       (common-lisp:cons "staticIpName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          detach-static-ip-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (detach-static-ip-result (:copier common-lisp:nil)
      (:conc-name "struct-shape-detach-static-ip-result-"))
   (operations common-lisp:nil :type
    (common-lisp:or operation-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'detach-static-ip-result 'make-detach-static-ip-result))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          detach-static-ip-result))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          detach-static-ip-result))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'operations))
      (common-lisp:list
       (common-lisp:cons "operations"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          detach-static-ip-result))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (disk (:copier common-lisp:nil) (:conc-name "struct-shape-disk-"))
   (name common-lisp:nil :type (common-lisp:or resource-name common-lisp:null))
   (arn common-lisp:nil :type
    (common-lisp:or non-empty-string common-lisp:null))
   (support-code common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (created-at common-lisp:nil :type
    (common-lisp:or iso-date common-lisp:null))
   (location common-lisp:nil :type
    (common-lisp:or resource-location common-lisp:null))
   (resource-type common-lisp:nil :type
    (common-lisp:or resource-type common-lisp:null))
   (size-in-gb common-lisp:nil :type
    (common-lisp:or common-lisp:integer common-lisp:null))
   (gb-in-use common-lisp:nil :type
    (common-lisp:or common-lisp:integer common-lisp:null))
   (is-system-disk common-lisp:nil :type
    (common-lisp:or common-lisp:boolean common-lisp:null))
   (iops common-lisp:nil :type
    (common-lisp:or common-lisp:integer common-lisp:null))
   (path common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (attached-to common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (is-attached common-lisp:nil :type
    (common-lisp:or common-lisp:boolean common-lisp:null))
   (attachment-state common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'disk 'make-disk))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input disk))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input disk))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'support-code))
      (common-lisp:list
       (common-lisp:cons "supportCode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created-at))
      (common-lisp:list
       (common-lisp:cons "createdAt"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'location))
      (common-lisp:list
       (common-lisp:cons "location"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-type))
      (common-lisp:list
       (common-lisp:cons "resourceType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'size-in-gb))
      (common-lisp:list
       (common-lisp:cons "sizeInGb"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'gb-in-use))
      (common-lisp:list
       (common-lisp:cons "gbInUse"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'is-system-disk))
      (common-lisp:list
       (common-lisp:cons "isSystemDisk"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'iops))
      (common-lisp:list
       (common-lisp:cons "iops"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'path))
      (common-lisp:list
       (common-lisp:cons "path"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'attached-to))
      (common-lisp:list
       (common-lisp:cons "attachedTo"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'is-attached))
      (common-lisp:list
       (common-lisp:cons "isAttached"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'attachment-state))
      (common-lisp:list
       (common-lisp:cons "attachmentState"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input disk))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype disk-list () '(trivial-types:proper-list disk))
 (common-lisp:defun |make-disk-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list disk))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (domain (:copier common-lisp:nil) (:conc-name "struct-shape-domain-"))
   (name common-lisp:nil :type (common-lisp:or resource-name common-lisp:null))
   (arn common-lisp:nil :type
    (common-lisp:or non-empty-string common-lisp:null))
   (support-code common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (created-at common-lisp:nil :type
    (common-lisp:or iso-date common-lisp:null))
   (location common-lisp:nil :type
    (common-lisp:or resource-location common-lisp:null))
   (resource-type common-lisp:nil :type
    (common-lisp:or resource-type common-lisp:null))
   (domain-entries common-lisp:nil :type
    (common-lisp:or domain-entry-list common-lisp:null)))
 (common-lisp:export (common-lisp:list 'domain 'make-domain))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input domain))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input domain))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'support-code))
      (common-lisp:list
       (common-lisp:cons "supportCode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created-at))
      (common-lisp:list
       (common-lisp:cons "createdAt"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'location))
      (common-lisp:list
       (common-lisp:cons "location"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-type))
      (common-lisp:list
       (common-lisp:cons "resourceType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'domain-entries))
      (common-lisp:list
       (common-lisp:cons "domainEntries"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input domain))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (domain-entry (:copier common-lisp:nil)
      (:conc-name "struct-shape-domain-entry-"))
   (id common-lisp:nil :type
    (common-lisp:or non-empty-string common-lisp:null))
   (name common-lisp:nil :type (common-lisp:or domain-name common-lisp:null))
   (target common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (type common-lisp:nil :type
    (common-lisp:or domain-entry-type common-lisp:null))
   (options common-lisp:nil :type
    (common-lisp:or domain-entry-options common-lisp:null)))
 (common-lisp:export (common-lisp:list 'domain-entry 'make-domain-entry))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input domain-entry))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input domain-entry))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'target))
      (common-lisp:list
       (common-lisp:cons "target"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'type))
      (common-lisp:list
       (common-lisp:cons "type"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'options))
      (common-lisp:list
       (common-lisp:cons "options"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input domain-entry))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype domain-entry-list ()
   '(trivial-types:proper-list domain-entry))
 (common-lisp:defun |make-domain-entry-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list domain-entry))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype domain-entry-options () 'common-lisp:hash-table)
 (common-lisp:defun |make-domain-entry-options|
                    (aws-sdk/generator/shape::key-values)
   (common-lisp:etypecase aws-sdk/generator/shape::key-values
     (common-lisp:hash-table aws-sdk/generator/shape::key-values)
     (common-lisp:list
      (alexandria:alist-hash-table aws-sdk/generator/shape::key-values)))))
(common-lisp:deftype domain-entry-options-keys () 'common-lisp:string)
(common-lisp:deftype domain-entry-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype domain-list () '(trivial-types:proper-list domain))
 (common-lisp:defun |make-domain-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list domain))
   aws-sdk/generator/shape::members))
(common-lisp:deftype domain-name () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (download-default-key-pair-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-download-default-key-pair-request-")))
 (common-lisp:export
  (common-lisp:list 'download-default-key-pair-request
                    'make-download-default-key-pair-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          download-default-key-pair-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          download-default-key-pair-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          download-default-key-pair-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (download-default-key-pair-result (:copier common-lisp:nil)
      (:conc-name "struct-shape-download-default-key-pair-result-"))
   (public-key-base64 common-lisp:nil :type
    (common-lisp:or base64 common-lisp:null))
   (private-key-base64 common-lisp:nil :type
    (common-lisp:or base64 common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'download-default-key-pair-result
                    'make-download-default-key-pair-result))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          download-default-key-pair-result))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          download-default-key-pair-result))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'public-key-base64))
      (common-lisp:list
       (common-lisp:cons "publicKeyBase64"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'private-key-base64))
      (common-lisp:list
       (common-lisp:cons "privateKeyBase64"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          download-default-key-pair-result))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-active-names-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-active-names-request-"))
   (page-token common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-active-names-request 'make-get-active-names-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-active-names-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-active-names-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'page-token))
      (common-lisp:list
       (common-lisp:cons "pageToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-active-names-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-active-names-result (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-active-names-result-"))
   (active-names common-lisp:nil :type
    (common-lisp:or string-list common-lisp:null))
   (next-page-token common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-active-names-result 'make-get-active-names-result))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-active-names-result))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-active-names-result))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'active-names))
      (common-lisp:list
       (common-lisp:cons "activeNames"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-page-token))
      (common-lisp:list
       (common-lisp:cons "nextPageToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-active-names-result))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-blueprints-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-blueprints-request-"))
   (include-inactive common-lisp:nil :type
    (common-lisp:or common-lisp:boolean common-lisp:null))
   (page-token common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-blueprints-request 'make-get-blueprints-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-blueprints-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-blueprints-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'include-inactive))
      (common-lisp:list
       (common-lisp:cons "includeInactive"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'page-token))
      (common-lisp:list
       (common-lisp:cons "pageToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-blueprints-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-blueprints-result (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-blueprints-result-"))
   (blueprints common-lisp:nil :type
    (common-lisp:or blueprint-list common-lisp:null))
   (next-page-token common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-blueprints-result 'make-get-blueprints-result))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-blueprints-result))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-blueprints-result))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'blueprints))
      (common-lisp:list
       (common-lisp:cons "blueprints"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-page-token))
      (common-lisp:list
       (common-lisp:cons "nextPageToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-blueprints-result))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-bundles-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-bundles-request-"))
   (include-inactive common-lisp:nil :type
    (common-lisp:or common-lisp:boolean common-lisp:null))
   (page-token common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-bundles-request 'make-get-bundles-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input get-bundles-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input get-bundles-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'include-inactive))
      (common-lisp:list
       (common-lisp:cons "includeInactive"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'page-token))
      (common-lisp:list
       (common-lisp:cons "pageToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input get-bundles-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-bundles-result (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-bundles-result-"))
   (bundles common-lisp:nil :type
    (common-lisp:or bundle-list common-lisp:null))
   (next-page-token common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-bundles-result 'make-get-bundles-result))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input get-bundles-result))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input get-bundles-result))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'bundles))
      (common-lisp:list
       (common-lisp:cons "bundles"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-page-token))
      (common-lisp:list
       (common-lisp:cons "nextPageToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input get-bundles-result))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-domain-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-domain-request-"))
   (domain-name (common-lisp:error ":domainname is required") :type
    (common-lisp:or domain-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-domain-request 'make-get-domain-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input get-domain-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input get-domain-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'domain-name))
      (common-lisp:list
       (common-lisp:cons "domainName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input get-domain-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-domain-result (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-domain-result-"))
   (domain common-lisp:nil :type (common-lisp:or domain common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-domain-result 'make-get-domain-result))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input get-domain-result))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input get-domain-result))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'domain))
      (common-lisp:list
       (common-lisp:cons "domain"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input get-domain-result))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-domains-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-domains-request-"))
   (page-token common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-domains-request 'make-get-domains-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input get-domains-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input get-domains-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'page-token))
      (common-lisp:list
       (common-lisp:cons "pageToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input get-domains-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-domains-result (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-domains-result-"))
   (domains common-lisp:nil :type
    (common-lisp:or domain-list common-lisp:null))
   (next-page-token common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-domains-result 'make-get-domains-result))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input get-domains-result))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input get-domains-result))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'domains))
      (common-lisp:list
       (common-lisp:cons "domains"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-page-token))
      (common-lisp:list
       (common-lisp:cons "nextPageToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input get-domains-result))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-instance-access-details-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-instance-access-details-request-"))
   (instance-name (common-lisp:error ":instancename is required") :type
    (common-lisp:or resource-name common-lisp:null))
   (protocol common-lisp:nil :type
    (common-lisp:or instance-access-protocol common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-instance-access-details-request
                    'make-get-instance-access-details-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-instance-access-details-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-instance-access-details-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'instance-name))
      (common-lisp:list
       (common-lisp:cons "instanceName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'protocol))
      (common-lisp:list
       (common-lisp:cons "protocol"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-instance-access-details-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-instance-access-details-result (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-instance-access-details-result-"))
   (access-details common-lisp:nil :type
    (common-lisp:or instance-access-details common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-instance-access-details-result
                    'make-get-instance-access-details-result))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-instance-access-details-result))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-instance-access-details-result))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'access-details))
      (common-lisp:list
       (common-lisp:cons "accessDetails"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-instance-access-details-result))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-instance-metric-data-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-instance-metric-data-request-"))
   (instance-name (common-lisp:error ":instancename is required") :type
    (common-lisp:or resource-name common-lisp:null))
   (metric-name (common-lisp:error ":metricname is required") :type
    (common-lisp:or instance-metric-name common-lisp:null))
   (period (common-lisp:error ":period is required") :type
    (common-lisp:or metric-period common-lisp:null))
   (start-time (common-lisp:error ":starttime is required") :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (end-time (common-lisp:error ":endtime is required") :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (unit (common-lisp:error ":unit is required") :type
    (common-lisp:or metric-unit common-lisp:null))
   (statistics (common-lisp:error ":statistics is required") :type
    (common-lisp:or metric-statistic-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-instance-metric-data-request
                    'make-get-instance-metric-data-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-instance-metric-data-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-instance-metric-data-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'instance-name))
      (common-lisp:list
       (common-lisp:cons "instanceName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'metric-name))
      (common-lisp:list
       (common-lisp:cons "metricName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'period))
      (common-lisp:list
       (common-lisp:cons "period"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'start-time))
      (common-lisp:list
       (common-lisp:cons "startTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'end-time))
      (common-lisp:list
       (common-lisp:cons "endTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'unit))
      (common-lisp:list
       (common-lisp:cons "unit"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'statistics))
      (common-lisp:list
       (common-lisp:cons "statistics"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-instance-metric-data-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-instance-metric-data-result (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-instance-metric-data-result-"))
   (metric-name common-lisp:nil :type
    (common-lisp:or instance-metric-name common-lisp:null))
   (metric-data common-lisp:nil :type
    (common-lisp:or metric-datapoint-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-instance-metric-data-result
                    'make-get-instance-metric-data-result))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-instance-metric-data-result))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-instance-metric-data-result))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'metric-name))
      (common-lisp:list
       (common-lisp:cons "metricName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'metric-data))
      (common-lisp:list
       (common-lisp:cons "metricData"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-instance-metric-data-result))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-instance-port-states-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-instance-port-states-request-"))
   (instance-name (common-lisp:error ":instancename is required") :type
    (common-lisp:or resource-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-instance-port-states-request
                    'make-get-instance-port-states-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-instance-port-states-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-instance-port-states-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'instance-name))
      (common-lisp:list
       (common-lisp:cons "instanceName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-instance-port-states-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-instance-port-states-result (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-instance-port-states-result-"))
   (port-states common-lisp:nil :type
    (common-lisp:or instance-port-state-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-instance-port-states-result
                    'make-get-instance-port-states-result))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-instance-port-states-result))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-instance-port-states-result))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'port-states))
      (common-lisp:list
       (common-lisp:cons "portStates"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-instance-port-states-result))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-instance-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-instance-request-"))
   (instance-name (common-lisp:error ":instancename is required") :type
    (common-lisp:or resource-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-instance-request 'make-get-instance-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input get-instance-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input get-instance-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'instance-name))
      (common-lisp:list
       (common-lisp:cons "instanceName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input get-instance-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-instance-result (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-instance-result-"))
   (instance common-lisp:nil :type (common-lisp:or instance common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-instance-result 'make-get-instance-result))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input get-instance-result))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input get-instance-result))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'instance))
      (common-lisp:list
       (common-lisp:cons "instance"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input get-instance-result))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-instance-snapshot-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-instance-snapshot-request-"))
   (instance-snapshot-name
    (common-lisp:error ":instancesnapshotname is required") :type
    (common-lisp:or resource-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-instance-snapshot-request
                    'make-get-instance-snapshot-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-instance-snapshot-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-instance-snapshot-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'instance-snapshot-name))
      (common-lisp:list
       (common-lisp:cons "instanceSnapshotName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-instance-snapshot-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-instance-snapshot-result (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-instance-snapshot-result-"))
   (instance-snapshot common-lisp:nil :type
    (common-lisp:or instance-snapshot common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-instance-snapshot-result
                    'make-get-instance-snapshot-result))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-instance-snapshot-result))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-instance-snapshot-result))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'instance-snapshot))
      (common-lisp:list
       (common-lisp:cons "instanceSnapshot"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-instance-snapshot-result))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-instance-snapshots-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-instance-snapshots-request-"))
   (page-token common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-instance-snapshots-request
                    'make-get-instance-snapshots-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-instance-snapshots-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-instance-snapshots-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'page-token))
      (common-lisp:list
       (common-lisp:cons "pageToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-instance-snapshots-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-instance-snapshots-result (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-instance-snapshots-result-"))
   (instance-snapshots common-lisp:nil :type
    (common-lisp:or instance-snapshot-list common-lisp:null))
   (next-page-token common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-instance-snapshots-result
                    'make-get-instance-snapshots-result))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-instance-snapshots-result))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-instance-snapshots-result))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'instance-snapshots))
      (common-lisp:list
       (common-lisp:cons "instanceSnapshots"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-page-token))
      (common-lisp:list
       (common-lisp:cons "nextPageToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-instance-snapshots-result))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-instance-state-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-instance-state-request-"))
   (instance-name (common-lisp:error ":instancename is required") :type
    (common-lisp:or resource-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-instance-state-request
                    'make-get-instance-state-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-instance-state-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-instance-state-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'instance-name))
      (common-lisp:list
       (common-lisp:cons "instanceName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-instance-state-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-instance-state-result (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-instance-state-result-"))
   (state common-lisp:nil :type
    (common-lisp:or instance-state common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-instance-state-result
                    'make-get-instance-state-result))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-instance-state-result))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-instance-state-result))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'state))
      (common-lisp:list
       (common-lisp:cons "state"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-instance-state-result))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-instances-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-instances-request-"))
   (page-token common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-instances-request 'make-get-instances-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-instances-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-instances-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'page-token))
      (common-lisp:list
       (common-lisp:cons "pageToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-instances-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-instances-result (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-instances-result-"))
   (instances common-lisp:nil :type
    (common-lisp:or instance-list common-lisp:null))
   (next-page-token common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-instances-result 'make-get-instances-result))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input get-instances-result))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input get-instances-result))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'instances))
      (common-lisp:list
       (common-lisp:cons "instances"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-page-token))
      (common-lisp:list
       (common-lisp:cons "nextPageToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input get-instances-result))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-key-pair-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-key-pair-request-"))
   (key-pair-name (common-lisp:error ":keypairname is required") :type
    (common-lisp:or resource-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-key-pair-request 'make-get-key-pair-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input get-key-pair-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input get-key-pair-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'key-pair-name))
      (common-lisp:list
       (common-lisp:cons "keyPairName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input get-key-pair-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-key-pair-result (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-key-pair-result-"))
   (key-pair common-lisp:nil :type (common-lisp:or key-pair common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-key-pair-result 'make-get-key-pair-result))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input get-key-pair-result))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input get-key-pair-result))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'key-pair))
      (common-lisp:list
       (common-lisp:cons "keyPair"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input get-key-pair-result))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-key-pairs-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-key-pairs-request-"))
   (page-token common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-key-pairs-request 'make-get-key-pairs-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-key-pairs-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-key-pairs-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'page-token))
      (common-lisp:list
       (common-lisp:cons "pageToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-key-pairs-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-key-pairs-result (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-key-pairs-result-"))
   (key-pairs common-lisp:nil :type
    (common-lisp:or key-pair-list common-lisp:null))
   (next-page-token common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-key-pairs-result 'make-get-key-pairs-result))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input get-key-pairs-result))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input get-key-pairs-result))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'key-pairs))
      (common-lisp:list
       (common-lisp:cons "keyPairs"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-page-token))
      (common-lisp:list
       (common-lisp:cons "nextPageToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input get-key-pairs-result))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-operation-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-operation-request-"))
   (operation-id (common-lisp:error ":operationid is required") :type
    (common-lisp:or non-empty-string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-operation-request 'make-get-operation-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-operation-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-operation-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'operation-id))
      (common-lisp:list
       (common-lisp:cons "operationId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-operation-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-operation-result (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-operation-result-"))
   (operation common-lisp:nil :type
    (common-lisp:or operation common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-operation-result 'make-get-operation-result))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input get-operation-result))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input get-operation-result))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'operation))
      (common-lisp:list
       (common-lisp:cons "operation"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input get-operation-result))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-operations-for-resource-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-operations-for-resource-request-"))
   (resource-name (common-lisp:error ":resourcename is required") :type
    (common-lisp:or resource-name common-lisp:null))
   (page-token common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-operations-for-resource-request
                    'make-get-operations-for-resource-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-operations-for-resource-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-operations-for-resource-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-name))
      (common-lisp:list
       (common-lisp:cons "resourceName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'page-token))
      (common-lisp:list
       (common-lisp:cons "pageToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-operations-for-resource-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-operations-for-resource-result (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-operations-for-resource-result-"))
   (operations common-lisp:nil :type
    (common-lisp:or operation-list common-lisp:null))
   (next-page-count common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (next-page-token common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-operations-for-resource-result
                    'make-get-operations-for-resource-result))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-operations-for-resource-result))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-operations-for-resource-result))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'operations))
      (common-lisp:list
       (common-lisp:cons "operations"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-page-count))
      (common-lisp:list
       (common-lisp:cons "nextPageCount"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-page-token))
      (common-lisp:list
       (common-lisp:cons "nextPageToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-operations-for-resource-result))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-operations-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-operations-request-"))
   (page-token common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-operations-request 'make-get-operations-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-operations-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-operations-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'page-token))
      (common-lisp:list
       (common-lisp:cons "pageToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-operations-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-operations-result (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-operations-result-"))
   (operations common-lisp:nil :type
    (common-lisp:or operation-list common-lisp:null))
   (next-page-token common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-operations-result 'make-get-operations-result))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-operations-result))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-operations-result))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'operations))
      (common-lisp:list
       (common-lisp:cons "operations"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-page-token))
      (common-lisp:list
       (common-lisp:cons "nextPageToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-operations-result))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-regions-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-regions-request-"))
   (include-availability-zones common-lisp:nil :type
    (common-lisp:or common-lisp:boolean common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-regions-request 'make-get-regions-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input get-regions-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input get-regions-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'include-availability-zones))
      (common-lisp:list
       (common-lisp:cons "includeAvailabilityZones"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input get-regions-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-regions-result (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-regions-result-"))
   (regions common-lisp:nil :type
    (common-lisp:or region-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-regions-result 'make-get-regions-result))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input get-regions-result))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input get-regions-result))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'regions))
      (common-lisp:list
       (common-lisp:cons "regions"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input get-regions-result))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-static-ip-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-static-ip-request-"))
   (static-ip-name (common-lisp:error ":staticipname is required") :type
    (common-lisp:or resource-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-static-ip-request 'make-get-static-ip-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-static-ip-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-static-ip-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'static-ip-name))
      (common-lisp:list
       (common-lisp:cons "staticIpName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-static-ip-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-static-ip-result (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-static-ip-result-"))
   (static-ip common-lisp:nil :type
    (common-lisp:or static-ip common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-static-ip-result 'make-get-static-ip-result))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input get-static-ip-result))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input get-static-ip-result))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'static-ip))
      (common-lisp:list
       (common-lisp:cons "staticIp"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input get-static-ip-result))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-static-ips-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-static-ips-request-"))
   (page-token common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-static-ips-request 'make-get-static-ips-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-static-ips-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-static-ips-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'page-token))
      (common-lisp:list
       (common-lisp:cons "pageToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-static-ips-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-static-ips-result (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-static-ips-result-"))
   (static-ips common-lisp:nil :type
    (common-lisp:or static-ip-list common-lisp:null))
   (next-page-token common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-static-ips-result 'make-get-static-ips-result))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-static-ips-result))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-static-ips-result))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'static-ips))
      (common-lisp:list
       (common-lisp:cons "staticIps"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-page-token))
      (common-lisp:list
       (common-lisp:cons "nextPageToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-static-ips-result))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (import-key-pair-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-import-key-pair-request-"))
   (key-pair-name (common-lisp:error ":keypairname is required") :type
    (common-lisp:or resource-name common-lisp:null))
   (public-key-base64 (common-lisp:error ":publickeybase64 is required") :type
    (common-lisp:or base64 common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'import-key-pair-request 'make-import-key-pair-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          import-key-pair-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          import-key-pair-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'key-pair-name))
      (common-lisp:list
       (common-lisp:cons "keyPairName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'public-key-base64))
      (common-lisp:list
       (common-lisp:cons "publicKeyBase64"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          import-key-pair-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (import-key-pair-result (:copier common-lisp:nil)
      (:conc-name "struct-shape-import-key-pair-result-"))
   (operation common-lisp:nil :type
    (common-lisp:or operation common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'import-key-pair-result 'make-import-key-pair-result))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          import-key-pair-result))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          import-key-pair-result))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'operation))
      (common-lisp:list
       (common-lisp:cons "operation"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          import-key-pair-result))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (instance (:copier common-lisp:nil) (:conc-name "struct-shape-instance-"))
   (name common-lisp:nil :type (common-lisp:or resource-name common-lisp:null))
   (arn common-lisp:nil :type
    (common-lisp:or non-empty-string common-lisp:null))
   (support-code common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (created-at common-lisp:nil :type
    (common-lisp:or iso-date common-lisp:null))
   (location common-lisp:nil :type
    (common-lisp:or resource-location common-lisp:null))
   (resource-type common-lisp:nil :type
    (common-lisp:or resource-type common-lisp:null))
   (blueprint-id common-lisp:nil :type
    (common-lisp:or non-empty-string common-lisp:null))
   (blueprint-name common-lisp:nil :type
    (common-lisp:or non-empty-string common-lisp:null))
   (bundle-id common-lisp:nil :type
    (common-lisp:or non-empty-string common-lisp:null))
   (is-static-ip common-lisp:nil :type
    (common-lisp:or common-lisp:boolean common-lisp:null))
   (private-ip-address common-lisp:nil :type
    (common-lisp:or ip-address common-lisp:null))
   (public-ip-address common-lisp:nil :type
    (common-lisp:or ip-address common-lisp:null))
   (ipv6address common-lisp:nil :type
    (common-lisp:or ip-v6address common-lisp:null))
   (hardware common-lisp:nil :type
    (common-lisp:or instance-hardware common-lisp:null))
   (networking common-lisp:nil :type
    (common-lisp:or instance-networking common-lisp:null))
   (state common-lisp:nil :type
    (common-lisp:or instance-state common-lisp:null))
   (username common-lisp:nil :type
    (common-lisp:or non-empty-string common-lisp:null))
   (ssh-key-name common-lisp:nil :type
    (common-lisp:or resource-name common-lisp:null)))
 (common-lisp:export (common-lisp:list 'instance 'make-instance))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input instance))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input instance))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'support-code))
      (common-lisp:list
       (common-lisp:cons "supportCode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created-at))
      (common-lisp:list
       (common-lisp:cons "createdAt"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'location))
      (common-lisp:list
       (common-lisp:cons "location"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-type))
      (common-lisp:list
       (common-lisp:cons "resourceType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'blueprint-id))
      (common-lisp:list
       (common-lisp:cons "blueprintId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'blueprint-name))
      (common-lisp:list
       (common-lisp:cons "blueprintName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'bundle-id))
      (common-lisp:list
       (common-lisp:cons "bundleId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'is-static-ip))
      (common-lisp:list
       (common-lisp:cons "isStaticIp"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'private-ip-address))
      (common-lisp:list
       (common-lisp:cons "privateIpAddress"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'public-ip-address))
      (common-lisp:list
       (common-lisp:cons "publicIpAddress"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'ipv6address))
      (common-lisp:list
       (common-lisp:cons "ipv6Address"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'hardware))
      (common-lisp:list
       (common-lisp:cons "hardware"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'networking))
      (common-lisp:list
       (common-lisp:cons "networking"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'state))
      (common-lisp:list
       (common-lisp:cons "state"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'username))
      (common-lisp:list
       (common-lisp:cons "username"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'ssh-key-name))
      (common-lisp:list
       (common-lisp:cons "sshKeyName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input instance))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (instance-access-details (:copier common-lisp:nil)
      (:conc-name "struct-shape-instance-access-details-"))
   (cert-key common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (expires-at common-lisp:nil :type
    (common-lisp:or iso-date common-lisp:null))
   (ip-address common-lisp:nil :type
    (common-lisp:or ip-address common-lisp:null))
   (password common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (private-key common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (protocol common-lisp:nil :type
    (common-lisp:or instance-access-protocol common-lisp:null))
   (instance-name common-lisp:nil :type
    (common-lisp:or resource-name common-lisp:null))
   (username common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'instance-access-details 'make-instance-access-details))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          instance-access-details))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          instance-access-details))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'cert-key))
      (common-lisp:list
       (common-lisp:cons "certKey"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'expires-at))
      (common-lisp:list
       (common-lisp:cons "expiresAt"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'ip-address))
      (common-lisp:list
       (common-lisp:cons "ipAddress"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'password))
      (common-lisp:list
       (common-lisp:cons "password"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'private-key))
      (common-lisp:list
       (common-lisp:cons "privateKey"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'protocol))
      (common-lisp:list
       (common-lisp:cons "protocol"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'instance-name))
      (common-lisp:list
       (common-lisp:cons "instanceName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'username))
      (common-lisp:list
       (common-lisp:cons "username"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          instance-access-details))
   common-lisp:nil))
(common-lisp:deftype instance-access-protocol () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (instance-hardware (:copier common-lisp:nil)
      (:conc-name "struct-shape-instance-hardware-"))
   (cpu-count common-lisp:nil :type
    (common-lisp:or common-lisp:integer common-lisp:null))
   (disks common-lisp:nil :type (common-lisp:or disk-list common-lisp:null))
   (ram-size-in-gb common-lisp:nil :type
    (common-lisp:or common-lisp:single-float common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'instance-hardware 'make-instance-hardware))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input instance-hardware))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input instance-hardware))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'cpu-count))
      (common-lisp:list
       (common-lisp:cons "cpuCount"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'disks))
      (common-lisp:list
       (common-lisp:cons "disks"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'ram-size-in-gb))
      (common-lisp:list
       (common-lisp:cons "ramSizeInGb"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input instance-hardware))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype instance-list () '(trivial-types:proper-list instance))
 (common-lisp:defun |make-instance-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list instance))
   aws-sdk/generator/shape::members))
(common-lisp:deftype instance-metric-name () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (instance-networking (:copier common-lisp:nil)
      (:conc-name "struct-shape-instance-networking-"))
   (monthly-transfer common-lisp:nil :type
    (common-lisp:or monthly-transfer common-lisp:null))
   (ports common-lisp:nil :type
    (common-lisp:or instance-port-info-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'instance-networking 'make-instance-networking))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input instance-networking))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input instance-networking))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'monthly-transfer))
      (common-lisp:list
       (common-lisp:cons "monthlyTransfer"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'ports))
      (common-lisp:list
       (common-lisp:cons "ports"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input instance-networking))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (instance-port-info (:copier common-lisp:nil)
      (:conc-name "struct-shape-instance-port-info-"))
   (from-port common-lisp:nil :type (common-lisp:or port common-lisp:null))
   (to-port common-lisp:nil :type (common-lisp:or port common-lisp:null))
   (protocol common-lisp:nil :type
    (common-lisp:or network-protocol common-lisp:null))
   (access-from common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (access-type common-lisp:nil :type
    (common-lisp:or port-access-type common-lisp:null))
   (common-name common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (access-direction common-lisp:nil :type
    (common-lisp:or access-direction common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'instance-port-info 'make-instance-port-info))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input instance-port-info))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input instance-port-info))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'from-port))
      (common-lisp:list
       (common-lisp:cons "fromPort"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'to-port))
      (common-lisp:list
       (common-lisp:cons "toPort"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'protocol))
      (common-lisp:list
       (common-lisp:cons "protocol"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'access-from))
      (common-lisp:list
       (common-lisp:cons "accessFrom"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'access-type))
      (common-lisp:list
       (common-lisp:cons "accessType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'common-name))
      (common-lisp:list
       (common-lisp:cons "commonName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'access-direction))
      (common-lisp:list
       (common-lisp:cons "accessDirection"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input instance-port-info))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype instance-port-info-list ()
   '(trivial-types:proper-list instance-port-info))
 (common-lisp:defun |make-instance-port-info-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list instance-port-info))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (instance-port-state (:copier common-lisp:nil)
      (:conc-name "struct-shape-instance-port-state-"))
   (from-port common-lisp:nil :type (common-lisp:or port common-lisp:null))
   (to-port common-lisp:nil :type (common-lisp:or port common-lisp:null))
   (protocol common-lisp:nil :type
    (common-lisp:or network-protocol common-lisp:null))
   (state common-lisp:nil :type (common-lisp:or port-state common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'instance-port-state 'make-instance-port-state))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input instance-port-state))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input instance-port-state))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'from-port))
      (common-lisp:list
       (common-lisp:cons "fromPort"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'to-port))
      (common-lisp:list
       (common-lisp:cons "toPort"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'protocol))
      (common-lisp:list
       (common-lisp:cons "protocol"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'state))
      (common-lisp:list
       (common-lisp:cons "state"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input instance-port-state))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype instance-port-state-list ()
   '(trivial-types:proper-list instance-port-state))
 (common-lisp:defun |make-instance-port-state-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list instance-port-state))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (instance-snapshot (:copier common-lisp:nil)
      (:conc-name "struct-shape-instance-snapshot-"))
   (name common-lisp:nil :type (common-lisp:or resource-name common-lisp:null))
   (arn common-lisp:nil :type
    (common-lisp:or non-empty-string common-lisp:null))
   (support-code common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (created-at common-lisp:nil :type
    (common-lisp:or iso-date common-lisp:null))
   (location common-lisp:nil :type
    (common-lisp:or resource-location common-lisp:null))
   (resource-type common-lisp:nil :type
    (common-lisp:or resource-type common-lisp:null))
   (state common-lisp:nil :type
    (common-lisp:or instance-snapshot-state common-lisp:null))
   (progress common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (from-instance-name common-lisp:nil :type
    (common-lisp:or resource-name common-lisp:null))
   (from-instance-arn common-lisp:nil :type
    (common-lisp:or non-empty-string common-lisp:null))
   (from-blueprint-id common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (from-bundle-id common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (size-in-gb common-lisp:nil :type
    (common-lisp:or common-lisp:integer common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'instance-snapshot 'make-instance-snapshot))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input instance-snapshot))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input instance-snapshot))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'support-code))
      (common-lisp:list
       (common-lisp:cons "supportCode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created-at))
      (common-lisp:list
       (common-lisp:cons "createdAt"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'location))
      (common-lisp:list
       (common-lisp:cons "location"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-type))
      (common-lisp:list
       (common-lisp:cons "resourceType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'state))
      (common-lisp:list
       (common-lisp:cons "state"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'progress))
      (common-lisp:list
       (common-lisp:cons "progress"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'from-instance-name))
      (common-lisp:list
       (common-lisp:cons "fromInstanceName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'from-instance-arn))
      (common-lisp:list
       (common-lisp:cons "fromInstanceArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'from-blueprint-id))
      (common-lisp:list
       (common-lisp:cons "fromBlueprintId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'from-bundle-id))
      (common-lisp:list
       (common-lisp:cons "fromBundleId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'size-in-gb))
      (common-lisp:list
       (common-lisp:cons "sizeInGb"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input instance-snapshot))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype instance-snapshot-list ()
   '(trivial-types:proper-list instance-snapshot))
 (common-lisp:defun |make-instance-snapshot-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list instance-snapshot))
   aws-sdk/generator/shape::members))
(common-lisp:deftype instance-snapshot-state () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (instance-state (:copier common-lisp:nil)
      (:conc-name "struct-shape-instance-state-"))
   (code common-lisp:nil :type
    (common-lisp:or common-lisp:integer common-lisp:null))
   (name common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'instance-state 'make-instance-state))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input instance-state))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input instance-state))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'code))
      (common-lisp:list
       (common-lisp:cons "code"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input instance-state))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:define-condition invalid-input-exception
     (lightsail-error)
     ((code :initarg :code :initform common-lisp:nil :reader
       invalid-input-exception-code)
      (docs :initarg :docs :initform common-lisp:nil :reader
       invalid-input-exception-docs)
      (message :initarg :message :initform common-lisp:nil :reader
       invalid-input-exception-message)
      (tip :initarg :tip :initform common-lisp:nil :reader
       invalid-input-exception-tip)))
 (common-lisp:export
  (common-lisp:list 'invalid-input-exception 'invalid-input-exception-code
                    'invalid-input-exception-docs
                    'invalid-input-exception-message
                    'invalid-input-exception-tip)))
(common-lisp:deftype ip-address () 'common-lisp:string)
(common-lisp:deftype ip-v6address () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (is-vpc-peered-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-is-vpc-peered-request-")))
 (common-lisp:export
  (common-lisp:list 'is-vpc-peered-request 'make-is-vpc-peered-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          is-vpc-peered-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          is-vpc-peered-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          is-vpc-peered-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (is-vpc-peered-result (:copier common-lisp:nil)
      (:conc-name "struct-shape-is-vpc-peered-result-"))
   (is-peered common-lisp:nil :type
    (common-lisp:or common-lisp:boolean common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'is-vpc-peered-result 'make-is-vpc-peered-result))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input is-vpc-peered-result))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input is-vpc-peered-result))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'is-peered))
      (common-lisp:list
       (common-lisp:cons "isPeered"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input is-vpc-peered-result))
   common-lisp:nil))
(common-lisp:deftype iso-date () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (key-pair (:copier common-lisp:nil) (:conc-name "struct-shape-key-pair-"))
   (name common-lisp:nil :type (common-lisp:or resource-name common-lisp:null))
   (arn common-lisp:nil :type
    (common-lisp:or non-empty-string common-lisp:null))
   (support-code common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (created-at common-lisp:nil :type
    (common-lisp:or iso-date common-lisp:null))
   (location common-lisp:nil :type
    (common-lisp:or resource-location common-lisp:null))
   (resource-type common-lisp:nil :type
    (common-lisp:or resource-type common-lisp:null))
   (fingerprint common-lisp:nil :type
    (common-lisp:or base64 common-lisp:null)))
 (common-lisp:export (common-lisp:list 'key-pair 'make-key-pair))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input key-pair))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input key-pair))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'support-code))
      (common-lisp:list
       (common-lisp:cons "supportCode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created-at))
      (common-lisp:list
       (common-lisp:cons "createdAt"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'location))
      (common-lisp:list
       (common-lisp:cons "location"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-type))
      (common-lisp:list
       (common-lisp:cons "resourceType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'fingerprint))
      (common-lisp:list
       (common-lisp:cons "fingerprint"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input key-pair))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype key-pair-list () '(trivial-types:proper-list key-pair))
 (common-lisp:defun |make-key-pair-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list key-pair))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (metric-datapoint (:copier common-lisp:nil)
      (:conc-name "struct-shape-metric-datapoint-"))
   (average common-lisp:nil :type
    (common-lisp:or common-lisp:double-float common-lisp:null))
   (maximum common-lisp:nil :type
    (common-lisp:or common-lisp:double-float common-lisp:null))
   (minimum common-lisp:nil :type
    (common-lisp:or common-lisp:double-float common-lisp:null))
   (sample-count common-lisp:nil :type
    (common-lisp:or common-lisp:double-float common-lisp:null))
   (sum common-lisp:nil :type
    (common-lisp:or common-lisp:double-float common-lisp:null))
   (timestamp common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (unit common-lisp:nil :type (common-lisp:or metric-unit common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'metric-datapoint 'make-metric-datapoint))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input metric-datapoint))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input metric-datapoint))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'average))
      (common-lisp:list
       (common-lisp:cons "average"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'maximum))
      (common-lisp:list
       (common-lisp:cons "maximum"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'minimum))
      (common-lisp:list
       (common-lisp:cons "minimum"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'sample-count))
      (common-lisp:list
       (common-lisp:cons "sampleCount"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'sum))
      (common-lisp:list
       (common-lisp:cons "sum"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'timestamp))
      (common-lisp:list
       (common-lisp:cons "timestamp"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'unit))
      (common-lisp:list
       (common-lisp:cons "unit"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input metric-datapoint))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype metric-datapoint-list ()
   '(trivial-types:proper-list metric-datapoint))
 (common-lisp:defun |make-metric-datapoint-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list metric-datapoint))
   aws-sdk/generator/shape::members))
(common-lisp:deftype metric-period () 'common-lisp:integer)
(common-lisp:deftype metric-statistic () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype metric-statistic-list ()
   '(trivial-types:proper-list metric-statistic))
 (common-lisp:defun |make-metric-statistic-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list metric-statistic))
   aws-sdk/generator/shape::members))
(common-lisp:deftype metric-unit () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (monthly-transfer (:copier common-lisp:nil)
      (:conc-name "struct-shape-monthly-transfer-"))
   (gb-per-month-allocated common-lisp:nil :type
    (common-lisp:or common-lisp:integer common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'monthly-transfer 'make-monthly-transfer))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input monthly-transfer))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input monthly-transfer))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'gb-per-month-allocated))
      (common-lisp:list
       (common-lisp:cons "gbPerMonthAllocated"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input monthly-transfer))
   common-lisp:nil))
(common-lisp:deftype network-protocol () 'common-lisp:string)
(common-lisp:deftype non-empty-string () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:define-condition not-found-exception
     (lightsail-error)
     ((code :initarg :code :initform common-lisp:nil :reader
       not-found-exception-code)
      (docs :initarg :docs :initform common-lisp:nil :reader
       not-found-exception-docs)
      (message :initarg :message :initform common-lisp:nil :reader
       not-found-exception-message)
      (tip :initarg :tip :initform common-lisp:nil :reader
       not-found-exception-tip)))
 (common-lisp:export
  (common-lisp:list 'not-found-exception 'not-found-exception-code
                    'not-found-exception-docs 'not-found-exception-message
                    'not-found-exception-tip)))
(common-lisp:progn
 (common-lisp:defstruct
     (open-instance-public-ports-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-open-instance-public-ports-request-"))
   (port-info (common-lisp:error ":portinfo is required") :type
    (common-lisp:or port-info common-lisp:null))
   (instance-name (common-lisp:error ":instancename is required") :type
    (common-lisp:or resource-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'open-instance-public-ports-request
                    'make-open-instance-public-ports-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          open-instance-public-ports-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          open-instance-public-ports-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'port-info))
      (common-lisp:list
       (common-lisp:cons "portInfo"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'instance-name))
      (common-lisp:list
       (common-lisp:cons "instanceName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          open-instance-public-ports-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (open-instance-public-ports-result (:copier common-lisp:nil)
      (:conc-name "struct-shape-open-instance-public-ports-result-"))
   (operation common-lisp:nil :type
    (common-lisp:or operation common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'open-instance-public-ports-result
                    'make-open-instance-public-ports-result))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          open-instance-public-ports-result))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          open-instance-public-ports-result))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'operation))
      (common-lisp:list
       (common-lisp:cons "operation"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          open-instance-public-ports-result))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (operation (:copier common-lisp:nil)
      (:conc-name "struct-shape-operation-"))
   (id common-lisp:nil :type
    (common-lisp:or non-empty-string common-lisp:null))
   (resource-name common-lisp:nil :type
    (common-lisp:or resource-name common-lisp:null))
   (resource-type common-lisp:nil :type
    (common-lisp:or resource-type common-lisp:null))
   (created-at common-lisp:nil :type
    (common-lisp:or iso-date common-lisp:null))
   (location common-lisp:nil :type
    (common-lisp:or resource-location common-lisp:null))
   (is-terminal common-lisp:nil :type
    (common-lisp:or common-lisp:boolean common-lisp:null))
   (operation-details common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (operation-type common-lisp:nil :type
    (common-lisp:or operation-type common-lisp:null))
   (status common-lisp:nil :type
    (common-lisp:or operation-status common-lisp:null))
   (status-changed-at common-lisp:nil :type
    (common-lisp:or iso-date common-lisp:null))
   (error-code common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (error-details common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'operation 'make-operation))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input operation))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input operation))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-name))
      (common-lisp:list
       (common-lisp:cons "resourceName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-type))
      (common-lisp:list
       (common-lisp:cons "resourceType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created-at))
      (common-lisp:list
       (common-lisp:cons "createdAt"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'location))
      (common-lisp:list
       (common-lisp:cons "location"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'is-terminal))
      (common-lisp:list
       (common-lisp:cons "isTerminal"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'operation-details))
      (common-lisp:list
       (common-lisp:cons "operationDetails"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'operation-type))
      (common-lisp:list
       (common-lisp:cons "operationType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status-changed-at))
      (common-lisp:list
       (common-lisp:cons "statusChangedAt"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'error-code))
      (common-lisp:list
       (common-lisp:cons "errorCode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'error-details))
      (common-lisp:list
       (common-lisp:cons "errorDetails"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input operation))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:define-condition operation-failure-exception
     (lightsail-error)
     ((code :initarg :code :initform common-lisp:nil :reader
       operation-failure-exception-code)
      (docs :initarg :docs :initform common-lisp:nil :reader
       operation-failure-exception-docs)
      (message :initarg :message :initform common-lisp:nil :reader
       operation-failure-exception-message)
      (tip :initarg :tip :initform common-lisp:nil :reader
       operation-failure-exception-tip)))
 (common-lisp:export
  (common-lisp:list 'operation-failure-exception
                    'operation-failure-exception-code
                    'operation-failure-exception-docs
                    'operation-failure-exception-message
                    'operation-failure-exception-tip)))
(common-lisp:progn
 (common-lisp:deftype operation-list () '(trivial-types:proper-list operation))
 (common-lisp:defun |make-operation-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list operation))
   aws-sdk/generator/shape::members))
(common-lisp:deftype operation-status () 'common-lisp:string)
(common-lisp:deftype operation-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (peer-vpc-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-peer-vpc-request-")))
 (common-lisp:export
  (common-lisp:list 'peer-vpc-request 'make-peer-vpc-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input peer-vpc-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input peer-vpc-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input peer-vpc-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (peer-vpc-result (:copier common-lisp:nil)
      (:conc-name "struct-shape-peer-vpc-result-"))
   (operation common-lisp:nil :type
    (common-lisp:or operation common-lisp:null)))
 (common-lisp:export (common-lisp:list 'peer-vpc-result 'make-peer-vpc-result))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input peer-vpc-result))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input peer-vpc-result))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'operation))
      (common-lisp:list
       (common-lisp:cons "operation"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input peer-vpc-result))
   common-lisp:nil))
(common-lisp:deftype port () 'common-lisp:integer)
(common-lisp:deftype port-access-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (port-info (:copier common-lisp:nil)
      (:conc-name "struct-shape-port-info-"))
   (from-port common-lisp:nil :type (common-lisp:or port common-lisp:null))
   (to-port common-lisp:nil :type (common-lisp:or port common-lisp:null))
   (protocol common-lisp:nil :type
    (common-lisp:or network-protocol common-lisp:null)))
 (common-lisp:export (common-lisp:list 'port-info 'make-port-info))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input port-info))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input port-info))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'from-port))
      (common-lisp:list
       (common-lisp:cons "fromPort"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'to-port))
      (common-lisp:list
       (common-lisp:cons "toPort"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'protocol))
      (common-lisp:list
       (common-lisp:cons "protocol"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input port-info))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype port-info-list () '(trivial-types:proper-list port-info))
 (common-lisp:defun |make-port-info-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list port-info))
   aws-sdk/generator/shape::members))
(common-lisp:deftype port-state () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (put-instance-public-ports-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-put-instance-public-ports-request-"))
   (port-infos (common-lisp:error ":portinfos is required") :type
    (common-lisp:or port-info-list common-lisp:null))
   (instance-name (common-lisp:error ":instancename is required") :type
    (common-lisp:or resource-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'put-instance-public-ports-request
                    'make-put-instance-public-ports-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          put-instance-public-ports-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          put-instance-public-ports-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'port-infos))
      (common-lisp:list
       (common-lisp:cons "portInfos"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'instance-name))
      (common-lisp:list
       (common-lisp:cons "instanceName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          put-instance-public-ports-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (put-instance-public-ports-result (:copier common-lisp:nil)
      (:conc-name "struct-shape-put-instance-public-ports-result-"))
   (operation common-lisp:nil :type
    (common-lisp:or operation common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'put-instance-public-ports-result
                    'make-put-instance-public-ports-result))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          put-instance-public-ports-result))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          put-instance-public-ports-result))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'operation))
      (common-lisp:list
       (common-lisp:cons "operation"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          put-instance-public-ports-result))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (reboot-instance-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-reboot-instance-request-"))
   (instance-name (common-lisp:error ":instancename is required") :type
    (common-lisp:or resource-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'reboot-instance-request 'make-reboot-instance-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          reboot-instance-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          reboot-instance-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'instance-name))
      (common-lisp:list
       (common-lisp:cons "instanceName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          reboot-instance-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (reboot-instance-result (:copier common-lisp:nil)
      (:conc-name "struct-shape-reboot-instance-result-"))
   (operations common-lisp:nil :type
    (common-lisp:or operation-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'reboot-instance-result 'make-reboot-instance-result))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          reboot-instance-result))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          reboot-instance-result))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'operations))
      (common-lisp:list
       (common-lisp:cons "operations"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          reboot-instance-result))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (region (:copier common-lisp:nil) (:conc-name "struct-shape-region-"))
   (continent-code common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (description common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (display-name common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (name common-lisp:nil :type (common-lisp:or region-name common-lisp:null))
   (availability-zones common-lisp:nil :type
    (common-lisp:or availability-zone-list common-lisp:null)))
 (common-lisp:export (common-lisp:list 'region 'make-region))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input region))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input region))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'continent-code))
      (common-lisp:list
       (common-lisp:cons "continentCode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'display-name))
      (common-lisp:list
       (common-lisp:cons "displayName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'availability-zones))
      (common-lisp:list
       (common-lisp:cons "availabilityZones"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input region))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype region-list () '(trivial-types:proper-list region))
 (common-lisp:defun |make-region-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list region))
   aws-sdk/generator/shape::members))
(common-lisp:deftype region-name () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (release-static-ip-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-release-static-ip-request-"))
   (static-ip-name (common-lisp:error ":staticipname is required") :type
    (common-lisp:or resource-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'release-static-ip-request
                    'make-release-static-ip-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          release-static-ip-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          release-static-ip-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'static-ip-name))
      (common-lisp:list
       (common-lisp:cons "staticIpName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          release-static-ip-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (release-static-ip-result (:copier common-lisp:nil)
      (:conc-name "struct-shape-release-static-ip-result-"))
   (operations common-lisp:nil :type
    (common-lisp:or operation-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'release-static-ip-result 'make-release-static-ip-result))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          release-static-ip-result))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          release-static-ip-result))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'operations))
      (common-lisp:list
       (common-lisp:cons "operations"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          release-static-ip-result))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (resource-location (:copier common-lisp:nil)
      (:conc-name "struct-shape-resource-location-"))
   (availability-zone common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (region-name common-lisp:nil :type
    (common-lisp:or region-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'resource-location 'make-resource-location))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input resource-location))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input resource-location))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'availability-zone))
      (common-lisp:list
       (common-lisp:cons "availabilityZone"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'region-name))
      (common-lisp:list
       (common-lisp:cons "regionName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input resource-location))
   common-lisp:nil))
(common-lisp:deftype resource-name () 'common-lisp:string)
(common-lisp:deftype resource-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:define-condition service-exception
     (lightsail-error)
     ((code :initarg :code :initform common-lisp:nil :reader
       service-exception-code)
      (docs :initarg :docs :initform common-lisp:nil :reader
       service-exception-docs)
      (message :initarg :message :initform common-lisp:nil :reader
       service-exception-message)
      (tip :initarg :tip :initform common-lisp:nil :reader
       service-exception-tip)))
 (common-lisp:export
  (common-lisp:list 'service-exception 'service-exception-code
                    'service-exception-docs 'service-exception-message
                    'service-exception-tip)))
(common-lisp:progn
 (common-lisp:defstruct
     (start-instance-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-start-instance-request-"))
   (instance-name (common-lisp:error ":instancename is required") :type
    (common-lisp:or resource-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'start-instance-request 'make-start-instance-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          start-instance-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          start-instance-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'instance-name))
      (common-lisp:list
       (common-lisp:cons "instanceName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          start-instance-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (start-instance-result (:copier common-lisp:nil)
      (:conc-name "struct-shape-start-instance-result-"))
   (operations common-lisp:nil :type
    (common-lisp:or operation-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'start-instance-result 'make-start-instance-result))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          start-instance-result))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          start-instance-result))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'operations))
      (common-lisp:list
       (common-lisp:cons "operations"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          start-instance-result))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (static-ip (:copier common-lisp:nil)
      (:conc-name "struct-shape-static-ip-"))
   (name common-lisp:nil :type (common-lisp:or resource-name common-lisp:null))
   (arn common-lisp:nil :type
    (common-lisp:or non-empty-string common-lisp:null))
   (support-code common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (created-at common-lisp:nil :type
    (common-lisp:or iso-date common-lisp:null))
   (location common-lisp:nil :type
    (common-lisp:or resource-location common-lisp:null))
   (resource-type common-lisp:nil :type
    (common-lisp:or resource-type common-lisp:null))
   (ip-address common-lisp:nil :type
    (common-lisp:or ip-address common-lisp:null))
   (attached-to common-lisp:nil :type
    (common-lisp:or resource-name common-lisp:null))
   (is-attached common-lisp:nil :type
    (common-lisp:or common-lisp:boolean common-lisp:null)))
 (common-lisp:export (common-lisp:list 'static-ip 'make-static-ip))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input static-ip))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input static-ip))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'support-code))
      (common-lisp:list
       (common-lisp:cons "supportCode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created-at))
      (common-lisp:list
       (common-lisp:cons "createdAt"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'location))
      (common-lisp:list
       (common-lisp:cons "location"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-type))
      (common-lisp:list
       (common-lisp:cons "resourceType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'ip-address))
      (common-lisp:list
       (common-lisp:cons "ipAddress"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'attached-to))
      (common-lisp:list
       (common-lisp:cons "attachedTo"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'is-attached))
      (common-lisp:list
       (common-lisp:cons "isAttached"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input static-ip))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype static-ip-list () '(trivial-types:proper-list static-ip))
 (common-lisp:defun |make-static-ip-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list static-ip))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (stop-instance-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-stop-instance-request-"))
   (instance-name (common-lisp:error ":instancename is required") :type
    (common-lisp:or resource-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'stop-instance-request 'make-stop-instance-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          stop-instance-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          stop-instance-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'instance-name))
      (common-lisp:list
       (common-lisp:cons "instanceName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          stop-instance-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (stop-instance-result (:copier common-lisp:nil)
      (:conc-name "struct-shape-stop-instance-result-"))
   (operations common-lisp:nil :type
    (common-lisp:or operation-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'stop-instance-result 'make-stop-instance-result))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input stop-instance-result))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input stop-instance-result))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'operations))
      (common-lisp:list
       (common-lisp:cons "operations"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input stop-instance-result))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype string-list ()
   '(trivial-types:proper-list common-lisp:string))
 (common-lisp:defun |make-string-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list common-lisp:string))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:define-condition unauthenticated-exception
     (lightsail-error)
     ((code :initarg :code :initform common-lisp:nil :reader
       unauthenticated-exception-code)
      (docs :initarg :docs :initform common-lisp:nil :reader
       unauthenticated-exception-docs)
      (message :initarg :message :initform common-lisp:nil :reader
       unauthenticated-exception-message)
      (tip :initarg :tip :initform common-lisp:nil :reader
       unauthenticated-exception-tip)))
 (common-lisp:export
  (common-lisp:list 'unauthenticated-exception 'unauthenticated-exception-code
                    'unauthenticated-exception-docs
                    'unauthenticated-exception-message
                    'unauthenticated-exception-tip)))
(common-lisp:progn
 (common-lisp:defstruct
     (unpeer-vpc-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-unpeer-vpc-request-")))
 (common-lisp:export
  (common-lisp:list 'unpeer-vpc-request 'make-unpeer-vpc-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input unpeer-vpc-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input unpeer-vpc-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input unpeer-vpc-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (unpeer-vpc-result (:copier common-lisp:nil)
      (:conc-name "struct-shape-unpeer-vpc-result-"))
   (operation common-lisp:nil :type
    (common-lisp:or operation common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'unpeer-vpc-result 'make-unpeer-vpc-result))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input unpeer-vpc-result))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input unpeer-vpc-result))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'operation))
      (common-lisp:list
       (common-lisp:cons "operation"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input unpeer-vpc-result))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-domain-entry-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-domain-entry-request-"))
   (domain-name (common-lisp:error ":domainname is required") :type
    (common-lisp:or domain-name common-lisp:null))
   (domain-entry (common-lisp:error ":domainentry is required") :type
    (common-lisp:or domain-entry common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-domain-entry-request
                    'make-update-domain-entry-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-domain-entry-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-domain-entry-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'domain-name))
      (common-lisp:list
       (common-lisp:cons "domainName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'domain-entry))
      (common-lisp:list
       (common-lisp:cons "domainEntry"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-domain-entry-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-domain-entry-result (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-domain-entry-result-"))
   (operations common-lisp:nil :type
    (common-lisp:or operation-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-domain-entry-result
                    'make-update-domain-entry-result))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-domain-entry-result))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-domain-entry-result))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'operations))
      (common-lisp:list
       (common-lisp:cons "operations"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-domain-entry-result))
   common-lisp:nil))
common-lisp:nil
common-lisp:nil
common-lisp:nil
common-lisp:nil
common-lisp:nil
common-lisp:nil
(common-lisp:progn
 (common-lisp:defun allocate-static-ip
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key static-ip-name)
   (common-lisp:declare (common-lisp:ignorable static-ip-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-allocate-static-ip-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'lightsail-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "AllocateStaticIp"
                                                        "2016-11-28"))
      common-lisp:nil common-lisp:nil
      '(("ServiceException" . service-exception)
        ("InvalidInputException" . invalid-input-exception)
        ("NotFoundException" . not-found-exception)
        ("OperationFailureException" . operation-failure-exception)
        ("AccessDeniedException" . access-denied-exception)
        ("AccountSetupInProgressException"
         . account-setup-in-progress-exception)
        ("UnauthenticatedException" . unauthenticated-exception)))))
 (common-lisp:export 'allocate-static-ip))
(common-lisp:progn
 (common-lisp:defun attach-static-ip
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key static-ip-name instance-name)
   (common-lisp:declare (common-lisp:ignorable static-ip-name instance-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-attach-static-ip-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'lightsail-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "AttachStaticIp"
                                                        "2016-11-28"))
      common-lisp:nil common-lisp:nil
      '(("ServiceException" . service-exception)
        ("InvalidInputException" . invalid-input-exception)
        ("NotFoundException" . not-found-exception)
        ("OperationFailureException" . operation-failure-exception)
        ("AccessDeniedException" . access-denied-exception)
        ("AccountSetupInProgressException"
         . account-setup-in-progress-exception)
        ("UnauthenticatedException" . unauthenticated-exception)))))
 (common-lisp:export 'attach-static-ip))
(common-lisp:progn
 (common-lisp:defun close-instance-public-ports
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key port-info instance-name)
   (common-lisp:declare (common-lisp:ignorable port-info instance-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-close-instance-public-ports-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'lightsail-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "CloseInstancePublicPorts"
                                                        "2016-11-28"))
      common-lisp:nil common-lisp:nil
      '(("ServiceException" . service-exception)
        ("InvalidInputException" . invalid-input-exception)
        ("NotFoundException" . not-found-exception)
        ("OperationFailureException" . operation-failure-exception)
        ("AccessDeniedException" . access-denied-exception)
        ("AccountSetupInProgressException"
         . account-setup-in-progress-exception)
        ("UnauthenticatedException" . unauthenticated-exception)))))
 (common-lisp:export 'close-instance-public-ports))
(common-lisp:progn
 (common-lisp:defun create-domain
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key domain-name)
   (common-lisp:declare (common-lisp:ignorable domain-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-domain-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'lightsail-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "CreateDomain"
                                                        "2016-11-28"))
      common-lisp:nil common-lisp:nil
      '(("ServiceException" . service-exception)
        ("InvalidInputException" . invalid-input-exception)
        ("NotFoundException" . not-found-exception)
        ("OperationFailureException" . operation-failure-exception)
        ("AccessDeniedException" . access-denied-exception)
        ("AccountSetupInProgressException"
         . account-setup-in-progress-exception)
        ("UnauthenticatedException" . unauthenticated-exception)))))
 (common-lisp:export 'create-domain))
(common-lisp:progn
 (common-lisp:defun create-domain-entry
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key domain-name domain-entry)
   (common-lisp:declare (common-lisp:ignorable domain-name domain-entry))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-domain-entry-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'lightsail-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "CreateDomainEntry"
                                                        "2016-11-28"))
      common-lisp:nil common-lisp:nil
      '(("ServiceException" . service-exception)
        ("InvalidInputException" . invalid-input-exception)
        ("NotFoundException" . not-found-exception)
        ("OperationFailureException" . operation-failure-exception)
        ("AccessDeniedException" . access-denied-exception)
        ("AccountSetupInProgressException"
         . account-setup-in-progress-exception)
        ("UnauthenticatedException" . unauthenticated-exception)))))
 (common-lisp:export 'create-domain-entry))
(common-lisp:progn
 (common-lisp:defun create-instance-snapshot
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key instance-snapshot-name instance-name)
   (common-lisp:declare
    (common-lisp:ignorable instance-snapshot-name instance-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-instance-snapshot-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'lightsail-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "CreateInstanceSnapshot"
                                                        "2016-11-28"))
      common-lisp:nil common-lisp:nil
      '(("ServiceException" . service-exception)
        ("InvalidInputException" . invalid-input-exception)
        ("NotFoundException" . not-found-exception)
        ("OperationFailureException" . operation-failure-exception)
        ("AccessDeniedException" . access-denied-exception)
        ("AccountSetupInProgressException"
         . account-setup-in-progress-exception)
        ("UnauthenticatedException" . unauthenticated-exception)))))
 (common-lisp:export 'create-instance-snapshot))
(common-lisp:progn
 (common-lisp:defun create-instances
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key instance-names availability-zone
                     custom-image-name blueprint-id bundle-id user-data
                     key-pair-name)
   (common-lisp:declare
    (common-lisp:ignorable instance-names availability-zone custom-image-name
     blueprint-id bundle-id user-data key-pair-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-instances-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'lightsail-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "CreateInstances"
                                                        "2016-11-28"))
      common-lisp:nil common-lisp:nil
      '(("ServiceException" . service-exception)
        ("InvalidInputException" . invalid-input-exception)
        ("NotFoundException" . not-found-exception)
        ("OperationFailureException" . operation-failure-exception)
        ("AccessDeniedException" . access-denied-exception)
        ("AccountSetupInProgressException"
         . account-setup-in-progress-exception)
        ("UnauthenticatedException" . unauthenticated-exception)))))
 (common-lisp:export 'create-instances))
(common-lisp:progn
 (common-lisp:defun create-instances-from-snapshot
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key instance-names availability-zone
                     instance-snapshot-name bundle-id user-data key-pair-name)
   (common-lisp:declare
    (common-lisp:ignorable instance-names availability-zone
     instance-snapshot-name bundle-id user-data key-pair-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-create-instances-from-snapshot-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'lightsail-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "CreateInstancesFromSnapshot"
                                                        "2016-11-28"))
      common-lisp:nil common-lisp:nil
      '(("ServiceException" . service-exception)
        ("InvalidInputException" . invalid-input-exception)
        ("NotFoundException" . not-found-exception)
        ("OperationFailureException" . operation-failure-exception)
        ("AccessDeniedException" . access-denied-exception)
        ("AccountSetupInProgressException"
         . account-setup-in-progress-exception)
        ("UnauthenticatedException" . unauthenticated-exception)))))
 (common-lisp:export 'create-instances-from-snapshot))
(common-lisp:progn
 (common-lisp:defun create-key-pair
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key key-pair-name)
   (common-lisp:declare (common-lisp:ignorable key-pair-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-key-pair-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'lightsail-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "CreateKeyPair"
                                                        "2016-11-28"))
      common-lisp:nil common-lisp:nil
      '(("ServiceException" . service-exception)
        ("InvalidInputException" . invalid-input-exception)
        ("NotFoundException" . not-found-exception)
        ("OperationFailureException" . operation-failure-exception)
        ("AccessDeniedException" . access-denied-exception)
        ("AccountSetupInProgressException"
         . account-setup-in-progress-exception)
        ("UnauthenticatedException" . unauthenticated-exception)))))
 (common-lisp:export 'create-key-pair))
(common-lisp:progn
 (common-lisp:defun delete-domain
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key domain-name)
   (common-lisp:declare (common-lisp:ignorable domain-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-domain-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'lightsail-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "DeleteDomain"
                                                        "2016-11-28"))
      common-lisp:nil common-lisp:nil
      '(("ServiceException" . service-exception)
        ("InvalidInputException" . invalid-input-exception)
        ("NotFoundException" . not-found-exception)
        ("OperationFailureException" . operation-failure-exception)
        ("AccessDeniedException" . access-denied-exception)
        ("AccountSetupInProgressException"
         . account-setup-in-progress-exception)
        ("UnauthenticatedException" . unauthenticated-exception)))))
 (common-lisp:export 'delete-domain))
(common-lisp:progn
 (common-lisp:defun delete-domain-entry
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key domain-name domain-entry)
   (common-lisp:declare (common-lisp:ignorable domain-name domain-entry))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-domain-entry-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'lightsail-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "DeleteDomainEntry"
                                                        "2016-11-28"))
      common-lisp:nil common-lisp:nil
      '(("ServiceException" . service-exception)
        ("InvalidInputException" . invalid-input-exception)
        ("NotFoundException" . not-found-exception)
        ("OperationFailureException" . operation-failure-exception)
        ("AccessDeniedException" . access-denied-exception)
        ("AccountSetupInProgressException"
         . account-setup-in-progress-exception)
        ("UnauthenticatedException" . unauthenticated-exception)))))
 (common-lisp:export 'delete-domain-entry))
(common-lisp:progn
 (common-lisp:defun delete-instance
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key instance-name)
   (common-lisp:declare (common-lisp:ignorable instance-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-instance-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'lightsail-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "DeleteInstance"
                                                        "2016-11-28"))
      common-lisp:nil common-lisp:nil
      '(("ServiceException" . service-exception)
        ("InvalidInputException" . invalid-input-exception)
        ("NotFoundException" . not-found-exception)
        ("OperationFailureException" . operation-failure-exception)
        ("AccessDeniedException" . access-denied-exception)
        ("AccountSetupInProgressException"
         . account-setup-in-progress-exception)
        ("UnauthenticatedException" . unauthenticated-exception)))))
 (common-lisp:export 'delete-instance))
(common-lisp:progn
 (common-lisp:defun delete-instance-snapshot
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key instance-snapshot-name)
   (common-lisp:declare (common-lisp:ignorable instance-snapshot-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-instance-snapshot-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'lightsail-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "DeleteInstanceSnapshot"
                                                        "2016-11-28"))
      common-lisp:nil common-lisp:nil
      '(("ServiceException" . service-exception)
        ("InvalidInputException" . invalid-input-exception)
        ("NotFoundException" . not-found-exception)
        ("OperationFailureException" . operation-failure-exception)
        ("AccessDeniedException" . access-denied-exception)
        ("AccountSetupInProgressException"
         . account-setup-in-progress-exception)
        ("UnauthenticatedException" . unauthenticated-exception)))))
 (common-lisp:export 'delete-instance-snapshot))
(common-lisp:progn
 (common-lisp:defun delete-key-pair
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key key-pair-name)
   (common-lisp:declare (common-lisp:ignorable key-pair-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-key-pair-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'lightsail-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "DeleteKeyPair"
                                                        "2016-11-28"))
      common-lisp:nil common-lisp:nil
      '(("ServiceException" . service-exception)
        ("InvalidInputException" . invalid-input-exception)
        ("NotFoundException" . not-found-exception)
        ("OperationFailureException" . operation-failure-exception)
        ("AccessDeniedException" . access-denied-exception)
        ("AccountSetupInProgressException"
         . account-setup-in-progress-exception)
        ("UnauthenticatedException" . unauthenticated-exception)))))
 (common-lisp:export 'delete-key-pair))
(common-lisp:progn
 (common-lisp:defun detach-static-ip
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key static-ip-name)
   (common-lisp:declare (common-lisp:ignorable static-ip-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-detach-static-ip-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'lightsail-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "DetachStaticIp"
                                                        "2016-11-28"))
      common-lisp:nil common-lisp:nil
      '(("ServiceException" . service-exception)
        ("InvalidInputException" . invalid-input-exception)
        ("NotFoundException" . not-found-exception)
        ("OperationFailureException" . operation-failure-exception)
        ("AccessDeniedException" . access-denied-exception)
        ("AccountSetupInProgressException"
         . account-setup-in-progress-exception)
        ("UnauthenticatedException" . unauthenticated-exception)))))
 (common-lisp:export 'detach-static-ip))
(common-lisp:progn
 (common-lisp:defun download-default-key-pair ()
   (aws-sdk/generator/operation::parse-response
    (aws-sdk/api:aws-request
     (common-lisp:make-instance 'lightsail-request :method "POST" :path "/"
                                :params
                                `(("Action" ,@"DownloadDefaultKeyPair")
                                  ("Version" ,@"2016-11-28"))))
    common-lisp:nil common-lisp:nil
    '(("ServiceException" . service-exception)
      ("InvalidInputException" . invalid-input-exception)
      ("NotFoundException" . not-found-exception)
      ("OperationFailureException" . operation-failure-exception)
      ("AccessDeniedException" . access-denied-exception)
      ("AccountSetupInProgressException" . account-setup-in-progress-exception)
      ("UnauthenticatedException" . unauthenticated-exception))))
 (common-lisp:export 'download-default-key-pair))
(common-lisp:progn
 (common-lisp:defun get-active-names
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key page-token)
   (common-lisp:declare (common-lisp:ignorable page-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-active-names-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'lightsail-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "GetActiveNames"
                                                        "2016-11-28"))
      common-lisp:nil common-lisp:nil
      '(("ServiceException" . service-exception)
        ("InvalidInputException" . invalid-input-exception)
        ("NotFoundException" . not-found-exception)
        ("OperationFailureException" . operation-failure-exception)
        ("AccessDeniedException" . access-denied-exception)
        ("AccountSetupInProgressException"
         . account-setup-in-progress-exception)
        ("UnauthenticatedException" . unauthenticated-exception)))))
 (common-lisp:export 'get-active-names))
(common-lisp:progn
 (common-lisp:defun get-blueprints
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key include-inactive page-token)
   (common-lisp:declare (common-lisp:ignorable include-inactive page-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-blueprints-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'lightsail-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "GetBlueprints"
                                                        "2016-11-28"))
      common-lisp:nil common-lisp:nil
      '(("ServiceException" . service-exception)
        ("InvalidInputException" . invalid-input-exception)
        ("NotFoundException" . not-found-exception)
        ("OperationFailureException" . operation-failure-exception)
        ("AccessDeniedException" . access-denied-exception)
        ("AccountSetupInProgressException"
         . account-setup-in-progress-exception)
        ("UnauthenticatedException" . unauthenticated-exception)))))
 (common-lisp:export 'get-blueprints))
(common-lisp:progn
 (common-lisp:defun get-bundles
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key include-inactive page-token)
   (common-lisp:declare (common-lisp:ignorable include-inactive page-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-bundles-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'lightsail-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/" "GetBundles"
                                                        "2016-11-28"))
      common-lisp:nil common-lisp:nil
      '(("ServiceException" . service-exception)
        ("InvalidInputException" . invalid-input-exception)
        ("NotFoundException" . not-found-exception)
        ("OperationFailureException" . operation-failure-exception)
        ("AccessDeniedException" . access-denied-exception)
        ("AccountSetupInProgressException"
         . account-setup-in-progress-exception)
        ("UnauthenticatedException" . unauthenticated-exception)))))
 (common-lisp:export 'get-bundles))
(common-lisp:progn
 (common-lisp:defun get-domain
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key domain-name)
   (common-lisp:declare (common-lisp:ignorable domain-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-domain-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'lightsail-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/" "GetDomain"
                                                        "2016-11-28"))
      common-lisp:nil common-lisp:nil
      '(("ServiceException" . service-exception)
        ("InvalidInputException" . invalid-input-exception)
        ("NotFoundException" . not-found-exception)
        ("OperationFailureException" . operation-failure-exception)
        ("AccessDeniedException" . access-denied-exception)
        ("AccountSetupInProgressException"
         . account-setup-in-progress-exception)
        ("UnauthenticatedException" . unauthenticated-exception)))))
 (common-lisp:export 'get-domain))
(common-lisp:progn
 (common-lisp:defun get-domains
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key page-token)
   (common-lisp:declare (common-lisp:ignorable page-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-domains-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'lightsail-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/" "GetDomains"
                                                        "2016-11-28"))
      common-lisp:nil common-lisp:nil
      '(("ServiceException" . service-exception)
        ("InvalidInputException" . invalid-input-exception)
        ("NotFoundException" . not-found-exception)
        ("OperationFailureException" . operation-failure-exception)
        ("AccessDeniedException" . access-denied-exception)
        ("AccountSetupInProgressException"
         . account-setup-in-progress-exception)
        ("UnauthenticatedException" . unauthenticated-exception)))))
 (common-lisp:export 'get-domains))
(common-lisp:progn
 (common-lisp:defun get-instance
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key instance-name)
   (common-lisp:declare (common-lisp:ignorable instance-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-instance-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'lightsail-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "GetInstance"
                                                        "2016-11-28"))
      common-lisp:nil common-lisp:nil
      '(("ServiceException" . service-exception)
        ("InvalidInputException" . invalid-input-exception)
        ("NotFoundException" . not-found-exception)
        ("OperationFailureException" . operation-failure-exception)
        ("AccessDeniedException" . access-denied-exception)
        ("AccountSetupInProgressException"
         . account-setup-in-progress-exception)
        ("UnauthenticatedException" . unauthenticated-exception)))))
 (common-lisp:export 'get-instance))
(common-lisp:progn
 (common-lisp:defun get-instance-access-details
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key instance-name protocol)
   (common-lisp:declare (common-lisp:ignorable instance-name protocol))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-get-instance-access-details-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'lightsail-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "GetInstanceAccessDetails"
                                                        "2016-11-28"))
      common-lisp:nil common-lisp:nil
      '(("ServiceException" . service-exception)
        ("InvalidInputException" . invalid-input-exception)
        ("NotFoundException" . not-found-exception)
        ("OperationFailureException" . operation-failure-exception)
        ("AccessDeniedException" . access-denied-exception)
        ("AccountSetupInProgressException"
         . account-setup-in-progress-exception)
        ("UnauthenticatedException" . unauthenticated-exception)))))
 (common-lisp:export 'get-instance-access-details))
(common-lisp:progn
 (common-lisp:defun get-instance-metric-data
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key instance-name metric-name period
                     start-time end-time unit statistics)
   (common-lisp:declare
    (common-lisp:ignorable instance-name metric-name period start-time end-time
     unit statistics))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-instance-metric-data-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'lightsail-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "GetInstanceMetricData"
                                                        "2016-11-28"))
      common-lisp:nil common-lisp:nil
      '(("ServiceException" . service-exception)
        ("InvalidInputException" . invalid-input-exception)
        ("NotFoundException" . not-found-exception)
        ("OperationFailureException" . operation-failure-exception)
        ("AccessDeniedException" . access-denied-exception)
        ("AccountSetupInProgressException"
         . account-setup-in-progress-exception)
        ("UnauthenticatedException" . unauthenticated-exception)))))
 (common-lisp:export 'get-instance-metric-data))
(common-lisp:progn
 (common-lisp:defun get-instance-port-states
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key instance-name)
   (common-lisp:declare (common-lisp:ignorable instance-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-instance-port-states-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'lightsail-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "GetInstancePortStates"
                                                        "2016-11-28"))
      common-lisp:nil common-lisp:nil
      '(("ServiceException" . service-exception)
        ("InvalidInputException" . invalid-input-exception)
        ("NotFoundException" . not-found-exception)
        ("OperationFailureException" . operation-failure-exception)
        ("AccessDeniedException" . access-denied-exception)
        ("AccountSetupInProgressException"
         . account-setup-in-progress-exception)
        ("UnauthenticatedException" . unauthenticated-exception)))))
 (common-lisp:export 'get-instance-port-states))
(common-lisp:progn
 (common-lisp:defun get-instance-snapshot
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key instance-snapshot-name)
   (common-lisp:declare (common-lisp:ignorable instance-snapshot-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-instance-snapshot-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'lightsail-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "GetInstanceSnapshot"
                                                        "2016-11-28"))
      common-lisp:nil common-lisp:nil
      '(("ServiceException" . service-exception)
        ("InvalidInputException" . invalid-input-exception)
        ("NotFoundException" . not-found-exception)
        ("OperationFailureException" . operation-failure-exception)
        ("AccessDeniedException" . access-denied-exception)
        ("AccountSetupInProgressException"
         . account-setup-in-progress-exception)
        ("UnauthenticatedException" . unauthenticated-exception)))))
 (common-lisp:export 'get-instance-snapshot))
(common-lisp:progn
 (common-lisp:defun get-instance-snapshots
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key page-token)
   (common-lisp:declare (common-lisp:ignorable page-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-instance-snapshots-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'lightsail-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "GetInstanceSnapshots"
                                                        "2016-11-28"))
      common-lisp:nil common-lisp:nil
      '(("ServiceException" . service-exception)
        ("InvalidInputException" . invalid-input-exception)
        ("NotFoundException" . not-found-exception)
        ("OperationFailureException" . operation-failure-exception)
        ("AccessDeniedException" . access-denied-exception)
        ("AccountSetupInProgressException"
         . account-setup-in-progress-exception)
        ("UnauthenticatedException" . unauthenticated-exception)))))
 (common-lisp:export 'get-instance-snapshots))
(common-lisp:progn
 (common-lisp:defun get-instance-state
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key instance-name)
   (common-lisp:declare (common-lisp:ignorable instance-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-instance-state-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'lightsail-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "GetInstanceState"
                                                        "2016-11-28"))
      common-lisp:nil common-lisp:nil
      '(("ServiceException" . service-exception)
        ("InvalidInputException" . invalid-input-exception)
        ("NotFoundException" . not-found-exception)
        ("OperationFailureException" . operation-failure-exception)
        ("AccessDeniedException" . access-denied-exception)
        ("AccountSetupInProgressException"
         . account-setup-in-progress-exception)
        ("UnauthenticatedException" . unauthenticated-exception)))))
 (common-lisp:export 'get-instance-state))
(common-lisp:progn
 (common-lisp:defun get-instances
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key page-token)
   (common-lisp:declare (common-lisp:ignorable page-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-instances-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'lightsail-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "GetInstances"
                                                        "2016-11-28"))
      common-lisp:nil common-lisp:nil
      '(("ServiceException" . service-exception)
        ("InvalidInputException" . invalid-input-exception)
        ("NotFoundException" . not-found-exception)
        ("OperationFailureException" . operation-failure-exception)
        ("AccessDeniedException" . access-denied-exception)
        ("AccountSetupInProgressException"
         . account-setup-in-progress-exception)
        ("UnauthenticatedException" . unauthenticated-exception)))))
 (common-lisp:export 'get-instances))
(common-lisp:progn
 (common-lisp:defun get-key-pair
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key key-pair-name)
   (common-lisp:declare (common-lisp:ignorable key-pair-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-key-pair-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'lightsail-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/" "GetKeyPair"
                                                        "2016-11-28"))
      common-lisp:nil common-lisp:nil
      '(("ServiceException" . service-exception)
        ("InvalidInputException" . invalid-input-exception)
        ("NotFoundException" . not-found-exception)
        ("OperationFailureException" . operation-failure-exception)
        ("AccessDeniedException" . access-denied-exception)
        ("AccountSetupInProgressException"
         . account-setup-in-progress-exception)
        ("UnauthenticatedException" . unauthenticated-exception)))))
 (common-lisp:export 'get-key-pair))
(common-lisp:progn
 (common-lisp:defun get-key-pairs
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key page-token)
   (common-lisp:declare (common-lisp:ignorable page-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-key-pairs-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'lightsail-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "GetKeyPairs"
                                                        "2016-11-28"))
      common-lisp:nil common-lisp:nil
      '(("ServiceException" . service-exception)
        ("InvalidInputException" . invalid-input-exception)
        ("NotFoundException" . not-found-exception)
        ("OperationFailureException" . operation-failure-exception)
        ("AccessDeniedException" . access-denied-exception)
        ("AccountSetupInProgressException"
         . account-setup-in-progress-exception)
        ("UnauthenticatedException" . unauthenticated-exception)))))
 (common-lisp:export 'get-key-pairs))
(common-lisp:progn
 (common-lisp:defun get-operation
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key operation-id)
   (common-lisp:declare (common-lisp:ignorable operation-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-operation-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'lightsail-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "GetOperation"
                                                        "2016-11-28"))
      common-lisp:nil common-lisp:nil
      '(("ServiceException" . service-exception)
        ("InvalidInputException" . invalid-input-exception)
        ("NotFoundException" . not-found-exception)
        ("OperationFailureException" . operation-failure-exception)
        ("AccessDeniedException" . access-denied-exception)
        ("AccountSetupInProgressException"
         . account-setup-in-progress-exception)
        ("UnauthenticatedException" . unauthenticated-exception)))))
 (common-lisp:export 'get-operation))
(common-lisp:progn
 (common-lisp:defun get-operations
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key page-token)
   (common-lisp:declare (common-lisp:ignorable page-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-operations-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'lightsail-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "GetOperations"
                                                        "2016-11-28"))
      common-lisp:nil common-lisp:nil
      '(("ServiceException" . service-exception)
        ("InvalidInputException" . invalid-input-exception)
        ("NotFoundException" . not-found-exception)
        ("OperationFailureException" . operation-failure-exception)
        ("AccessDeniedException" . access-denied-exception)
        ("AccountSetupInProgressException"
         . account-setup-in-progress-exception)
        ("UnauthenticatedException" . unauthenticated-exception)))))
 (common-lisp:export 'get-operations))
(common-lisp:progn
 (common-lisp:defun get-operations-for-resource
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key resource-name page-token)
   (common-lisp:declare (common-lisp:ignorable resource-name page-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-get-operations-for-resource-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'lightsail-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "GetOperationsForResource"
                                                        "2016-11-28"))
      common-lisp:nil common-lisp:nil
      '(("ServiceException" . service-exception)
        ("InvalidInputException" . invalid-input-exception)
        ("NotFoundException" . not-found-exception)
        ("OperationFailureException" . operation-failure-exception)
        ("AccessDeniedException" . access-denied-exception)
        ("AccountSetupInProgressException"
         . account-setup-in-progress-exception)
        ("UnauthenticatedException" . unauthenticated-exception)))))
 (common-lisp:export 'get-operations-for-resource))
(common-lisp:progn
 (common-lisp:defun get-regions
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key include-availability-zones)
   (common-lisp:declare (common-lisp:ignorable include-availability-zones))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-regions-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'lightsail-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/" "GetRegions"
                                                        "2016-11-28"))
      common-lisp:nil common-lisp:nil
      '(("ServiceException" . service-exception)
        ("InvalidInputException" . invalid-input-exception)
        ("NotFoundException" . not-found-exception)
        ("OperationFailureException" . operation-failure-exception)
        ("AccessDeniedException" . access-denied-exception)
        ("AccountSetupInProgressException"
         . account-setup-in-progress-exception)
        ("UnauthenticatedException" . unauthenticated-exception)))))
 (common-lisp:export 'get-regions))
(common-lisp:progn
 (common-lisp:defun get-static-ip
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key static-ip-name)
   (common-lisp:declare (common-lisp:ignorable static-ip-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-static-ip-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'lightsail-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "GetStaticIp"
                                                        "2016-11-28"))
      common-lisp:nil common-lisp:nil
      '(("ServiceException" . service-exception)
        ("InvalidInputException" . invalid-input-exception)
        ("NotFoundException" . not-found-exception)
        ("OperationFailureException" . operation-failure-exception)
        ("AccessDeniedException" . access-denied-exception)
        ("AccountSetupInProgressException"
         . account-setup-in-progress-exception)
        ("UnauthenticatedException" . unauthenticated-exception)))))
 (common-lisp:export 'get-static-ip))
(common-lisp:progn
 (common-lisp:defun get-static-ips
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key page-token)
   (common-lisp:declare (common-lisp:ignorable page-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-static-ips-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'lightsail-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "GetStaticIps"
                                                        "2016-11-28"))
      common-lisp:nil common-lisp:nil
      '(("ServiceException" . service-exception)
        ("InvalidInputException" . invalid-input-exception)
        ("NotFoundException" . not-found-exception)
        ("OperationFailureException" . operation-failure-exception)
        ("AccessDeniedException" . access-denied-exception)
        ("AccountSetupInProgressException"
         . account-setup-in-progress-exception)
        ("UnauthenticatedException" . unauthenticated-exception)))))
 (common-lisp:export 'get-static-ips))
(common-lisp:progn
 (common-lisp:defun import-key-pair
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key key-pair-name public-key-base64)
   (common-lisp:declare
    (common-lisp:ignorable key-pair-name public-key-base64))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-import-key-pair-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'lightsail-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "ImportKeyPair"
                                                        "2016-11-28"))
      common-lisp:nil common-lisp:nil
      '(("ServiceException" . service-exception)
        ("InvalidInputException" . invalid-input-exception)
        ("NotFoundException" . not-found-exception)
        ("OperationFailureException" . operation-failure-exception)
        ("AccessDeniedException" . access-denied-exception)
        ("AccountSetupInProgressException"
         . account-setup-in-progress-exception)
        ("UnauthenticatedException" . unauthenticated-exception)))))
 (common-lisp:export 'import-key-pair))
(common-lisp:progn
 (common-lisp:defun is-vpc-peered ()
   (aws-sdk/generator/operation::parse-response
    (aws-sdk/api:aws-request
     (common-lisp:make-instance 'lightsail-request :method "POST" :path "/"
                                :params
                                `(("Action" ,@"IsVpcPeered")
                                  ("Version" ,@"2016-11-28"))))
    common-lisp:nil common-lisp:nil
    '(("ServiceException" . service-exception)
      ("InvalidInputException" . invalid-input-exception)
      ("NotFoundException" . not-found-exception)
      ("OperationFailureException" . operation-failure-exception)
      ("AccessDeniedException" . access-denied-exception)
      ("AccountSetupInProgressException" . account-setup-in-progress-exception)
      ("UnauthenticatedException" . unauthenticated-exception))))
 (common-lisp:export 'is-vpc-peered))
(common-lisp:progn
 (common-lisp:defun open-instance-public-ports
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key port-info instance-name)
   (common-lisp:declare (common-lisp:ignorable port-info instance-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-open-instance-public-ports-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'lightsail-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "OpenInstancePublicPorts"
                                                        "2016-11-28"))
      common-lisp:nil common-lisp:nil
      '(("ServiceException" . service-exception)
        ("InvalidInputException" . invalid-input-exception)
        ("NotFoundException" . not-found-exception)
        ("OperationFailureException" . operation-failure-exception)
        ("AccessDeniedException" . access-denied-exception)
        ("AccountSetupInProgressException"
         . account-setup-in-progress-exception)
        ("UnauthenticatedException" . unauthenticated-exception)))))
 (common-lisp:export 'open-instance-public-ports))
(common-lisp:progn
 (common-lisp:defun peer-vpc ()
   (aws-sdk/generator/operation::parse-response
    (aws-sdk/api:aws-request
     (common-lisp:make-instance 'lightsail-request :method "POST" :path "/"
                                :params
                                `(("Action" ,@"PeerVpc")
                                  ("Version" ,@"2016-11-28"))))
    common-lisp:nil common-lisp:nil
    '(("ServiceException" . service-exception)
      ("InvalidInputException" . invalid-input-exception)
      ("NotFoundException" . not-found-exception)
      ("OperationFailureException" . operation-failure-exception)
      ("AccessDeniedException" . access-denied-exception)
      ("AccountSetupInProgressException" . account-setup-in-progress-exception)
      ("UnauthenticatedException" . unauthenticated-exception))))
 (common-lisp:export 'peer-vpc))
(common-lisp:progn
 (common-lisp:defun put-instance-public-ports
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key port-infos instance-name)
   (common-lisp:declare (common-lisp:ignorable port-infos instance-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-put-instance-public-ports-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'lightsail-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "PutInstancePublicPorts"
                                                        "2016-11-28"))
      common-lisp:nil common-lisp:nil
      '(("ServiceException" . service-exception)
        ("InvalidInputException" . invalid-input-exception)
        ("NotFoundException" . not-found-exception)
        ("OperationFailureException" . operation-failure-exception)
        ("AccessDeniedException" . access-denied-exception)
        ("AccountSetupInProgressException"
         . account-setup-in-progress-exception)
        ("UnauthenticatedException" . unauthenticated-exception)))))
 (common-lisp:export 'put-instance-public-ports))
(common-lisp:progn
 (common-lisp:defun reboot-instance
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key instance-name)
   (common-lisp:declare (common-lisp:ignorable instance-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-reboot-instance-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'lightsail-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "RebootInstance"
                                                        "2016-11-28"))
      common-lisp:nil common-lisp:nil
      '(("ServiceException" . service-exception)
        ("InvalidInputException" . invalid-input-exception)
        ("NotFoundException" . not-found-exception)
        ("OperationFailureException" . operation-failure-exception)
        ("AccessDeniedException" . access-denied-exception)
        ("AccountSetupInProgressException"
         . account-setup-in-progress-exception)
        ("UnauthenticatedException" . unauthenticated-exception)))))
 (common-lisp:export 'reboot-instance))
(common-lisp:progn
 (common-lisp:defun release-static-ip
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key static-ip-name)
   (common-lisp:declare (common-lisp:ignorable static-ip-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-release-static-ip-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'lightsail-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "ReleaseStaticIp"
                                                        "2016-11-28"))
      common-lisp:nil common-lisp:nil
      '(("ServiceException" . service-exception)
        ("InvalidInputException" . invalid-input-exception)
        ("NotFoundException" . not-found-exception)
        ("OperationFailureException" . operation-failure-exception)
        ("AccessDeniedException" . access-denied-exception)
        ("AccountSetupInProgressException"
         . account-setup-in-progress-exception)
        ("UnauthenticatedException" . unauthenticated-exception)))))
 (common-lisp:export 'release-static-ip))
(common-lisp:progn
 (common-lisp:defun start-instance
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key instance-name)
   (common-lisp:declare (common-lisp:ignorable instance-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-start-instance-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'lightsail-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "StartInstance"
                                                        "2016-11-28"))
      common-lisp:nil common-lisp:nil
      '(("ServiceException" . service-exception)
        ("InvalidInputException" . invalid-input-exception)
        ("NotFoundException" . not-found-exception)
        ("OperationFailureException" . operation-failure-exception)
        ("AccessDeniedException" . access-denied-exception)
        ("AccountSetupInProgressException"
         . account-setup-in-progress-exception)
        ("UnauthenticatedException" . unauthenticated-exception)))))
 (common-lisp:export 'start-instance))
(common-lisp:progn
 (common-lisp:defun stop-instance
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key instance-name)
   (common-lisp:declare (common-lisp:ignorable instance-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-stop-instance-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'lightsail-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "StopInstance"
                                                        "2016-11-28"))
      common-lisp:nil common-lisp:nil
      '(("ServiceException" . service-exception)
        ("InvalidInputException" . invalid-input-exception)
        ("NotFoundException" . not-found-exception)
        ("OperationFailureException" . operation-failure-exception)
        ("AccessDeniedException" . access-denied-exception)
        ("AccountSetupInProgressException"
         . account-setup-in-progress-exception)
        ("UnauthenticatedException" . unauthenticated-exception)))))
 (common-lisp:export 'stop-instance))
(common-lisp:progn
 (common-lisp:defun unpeer-vpc ()
   (aws-sdk/generator/operation::parse-response
    (aws-sdk/api:aws-request
     (common-lisp:make-instance 'lightsail-request :method "POST" :path "/"
                                :params
                                `(("Action" ,@"UnpeerVpc")
                                  ("Version" ,@"2016-11-28"))))
    common-lisp:nil common-lisp:nil
    '(("ServiceException" . service-exception)
      ("InvalidInputException" . invalid-input-exception)
      ("NotFoundException" . not-found-exception)
      ("OperationFailureException" . operation-failure-exception)
      ("AccessDeniedException" . access-denied-exception)
      ("AccountSetupInProgressException" . account-setup-in-progress-exception)
      ("UnauthenticatedException" . unauthenticated-exception))))
 (common-lisp:export 'unpeer-vpc))
(common-lisp:progn
 (common-lisp:defun update-domain-entry
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key domain-name domain-entry)
   (common-lisp:declare (common-lisp:ignorable domain-name domain-entry))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-domain-entry-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'lightsail-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "UpdateDomainEntry"
                                                        "2016-11-28"))
      common-lisp:nil common-lisp:nil
      '(("ServiceException" . service-exception)
        ("InvalidInputException" . invalid-input-exception)
        ("NotFoundException" . not-found-exception)
        ("OperationFailureException" . operation-failure-exception)
        ("AccessDeniedException" . access-denied-exception)
        ("AccountSetupInProgressException"
         . account-setup-in-progress-exception)
        ("UnauthenticatedException" . unauthenticated-exception)))))
 (common-lisp:export 'update-domain-entry))
