;; DO NOT EDIT: File is generated by AWS-SDK/GENERATOR.

(common-lisp:defpackage #:aws-sdk/services/elasticfilesystem/api
  (:use)
  (:nicknames #:aws/elasticfilesystem)
  (:import-from #:aws-sdk/generator/shape)
  (:import-from #:aws-sdk/generator/operation)
  (:import-from #:aws-sdk/api)
  (:import-from #:aws-sdk/request)
  (:import-from #:aws-sdk/error))
(common-lisp:in-package #:aws-sdk/services/elasticfilesystem/api)
(common-lisp:progn
 (common-lisp:defclass elasticfilesystem-request (aws-sdk/request:request)
                       common-lisp:nil
                       (:default-initargs :service "elasticfilesystem"))
 (common-lisp:export 'elasticfilesystem-request))
(common-lisp:progn
 (common-lisp:define-condition elasticfilesystem-error
     (aws-sdk/error:aws-error)
     common-lisp:nil)
 (common-lisp:export 'elasticfilesystem-error))
(common-lisp:deftype aws-account-id () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:define-condition bad-request
     (elasticfilesystem-error)
     ((error-code :initarg :error-code :initform common-lisp:nil :reader
       bad-request-error-code)
      (message :initarg :message :initform common-lisp:nil :reader
       bad-request-message)))
 (common-lisp:export
  (common-lisp:list 'bad-request 'bad-request-error-code 'bad-request-message)))
(common-lisp:progn
 (common-lisp:defstruct
     (create-file-system-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-file-system-request-"))
   (creation-token (common-lisp:error ":creation-token is required") :type
    (common-lisp:or creation-token common-lisp:null))
   (performance-mode common-lisp:nil :type
    (common-lisp:or performance-mode common-lisp:null))
   (encrypted common-lisp:nil :type
    (common-lisp:or encrypted common-lisp:null))
   (kms-key-id common-lisp:nil :type
    (common-lisp:or kms-key-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-file-system-request
                    'make-create-file-system-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-file-system-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-file-system-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'creation-token))
      (common-lisp:list
       (common-lisp:cons "CreationToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'performance-mode))
      (common-lisp:list
       (common-lisp:cons "PerformanceMode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'encrypted))
      (common-lisp:list
       (common-lisp:cons "Encrypted"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'kms-key-id))
      (common-lisp:list
       (common-lisp:cons "KmsKeyId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-file-system-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-mount-target-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-mount-target-request-"))
   (file-system-id (common-lisp:error ":file-system-id is required") :type
    (common-lisp:or file-system-id common-lisp:null))
   (subnet-id (common-lisp:error ":subnet-id is required") :type
    (common-lisp:or subnet-id common-lisp:null))
   (ip-address common-lisp:nil :type
    (common-lisp:or ip-address common-lisp:null))
   (security-groups common-lisp:nil :type
    (common-lisp:or security-groups common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-mount-target-request
                    'make-create-mount-target-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-mount-target-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-mount-target-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'file-system-id))
      (common-lisp:list
       (common-lisp:cons "FileSystemId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'subnet-id))
      (common-lisp:list
       (common-lisp:cons "SubnetId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'ip-address))
      (common-lisp:list
       (common-lisp:cons "IpAddress"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'security-groups))
      (common-lisp:list
       (common-lisp:cons "SecurityGroups"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-mount-target-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-tags-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-tags-request-"))
   (file-system-id (common-lisp:error ":file-system-id is required") :type
    (common-lisp:or file-system-id common-lisp:null))
   (tags (common-lisp:error ":tags is required") :type
    (common-lisp:or tags common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-tags-request 'make-create-tags-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input create-tags-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input create-tags-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input create-tags-request))
   common-lisp:nil))
(common-lisp:deftype creation-token () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (delete-file-system-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-file-system-request-"))
   (file-system-id (common-lisp:error ":file-system-id is required") :type
    (common-lisp:or file-system-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-file-system-request
                    'make-delete-file-system-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-file-system-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-file-system-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-file-system-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-mount-target-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-mount-target-request-"))
   (mount-target-id (common-lisp:error ":mount-target-id is required") :type
    (common-lisp:or mount-target-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-mount-target-request
                    'make-delete-mount-target-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-mount-target-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-mount-target-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-mount-target-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-tags-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-tags-request-"))
   (file-system-id (common-lisp:error ":file-system-id is required") :type
    (common-lisp:or file-system-id common-lisp:null))
   (tag-keys (common-lisp:error ":tag-keys is required") :type
    (common-lisp:or tag-keys common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-tags-request 'make-delete-tags-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input delete-tags-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input delete-tags-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tag-keys))
      (common-lisp:list
       (common-lisp:cons "TagKeys"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input delete-tags-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:define-condition dependency-timeout
     (elasticfilesystem-error)
     ((error-code :initarg :error-code :initform common-lisp:nil :reader
       dependency-timeout-error-code)
      (message :initarg :message :initform common-lisp:nil :reader
       dependency-timeout-message)))
 (common-lisp:export
  (common-lisp:list 'dependency-timeout 'dependency-timeout-error-code
                    'dependency-timeout-message)))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-file-systems-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-describe-file-systems-request-"))
   (max-items common-lisp:nil :type
    (common-lisp:or max-items common-lisp:null))
   (marker common-lisp:nil :type (common-lisp:or marker common-lisp:null))
   (creation-token common-lisp:nil :type
    (common-lisp:or creation-token common-lisp:null))
   (file-system-id common-lisp:nil :type
    (common-lisp:or file-system-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-file-systems-request
                    'make-describe-file-systems-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-file-systems-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-file-systems-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-file-systems-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-file-systems-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-describe-file-systems-response-"))
   (marker common-lisp:nil :type (common-lisp:or marker common-lisp:null))
   (file-systems common-lisp:nil :type
    (common-lisp:or file-system-descriptions common-lisp:null))
   (next-marker common-lisp:nil :type
    (common-lisp:or marker common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-file-systems-response
                    'make-describe-file-systems-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-file-systems-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-file-systems-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'marker))
      (common-lisp:list
       (common-lisp:cons "Marker"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'file-systems))
      (common-lisp:list
       (common-lisp:cons "FileSystems"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-marker))
      (common-lisp:list
       (common-lisp:cons "NextMarker"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-file-systems-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-mount-target-security-groups-request (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-describe-mount-target-security-groups-request-"))
   (mount-target-id (common-lisp:error ":mount-target-id is required") :type
    (common-lisp:or mount-target-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-mount-target-security-groups-request
                    'make-describe-mount-target-security-groups-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-mount-target-security-groups-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-mount-target-security-groups-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-mount-target-security-groups-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-mount-target-security-groups-response (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-describe-mount-target-security-groups-response-"))
   (security-groups (common-lisp:error ":security-groups is required") :type
    (common-lisp:or security-groups common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-mount-target-security-groups-response
                    'make-describe-mount-target-security-groups-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-mount-target-security-groups-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-mount-target-security-groups-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'security-groups))
      (common-lisp:list
       (common-lisp:cons "SecurityGroups"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-mount-target-security-groups-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-mount-targets-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-describe-mount-targets-request-"))
   (max-items common-lisp:nil :type
    (common-lisp:or max-items common-lisp:null))
   (marker common-lisp:nil :type (common-lisp:or marker common-lisp:null))
   (file-system-id common-lisp:nil :type
    (common-lisp:or file-system-id common-lisp:null))
   (mount-target-id common-lisp:nil :type
    (common-lisp:or mount-target-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-mount-targets-request
                    'make-describe-mount-targets-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-mount-targets-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-mount-targets-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-mount-targets-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-mount-targets-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-describe-mount-targets-response-"))
   (marker common-lisp:nil :type (common-lisp:or marker common-lisp:null))
   (mount-targets common-lisp:nil :type
    (common-lisp:or mount-target-descriptions common-lisp:null))
   (next-marker common-lisp:nil :type
    (common-lisp:or marker common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-mount-targets-response
                    'make-describe-mount-targets-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-mount-targets-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-mount-targets-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'marker))
      (common-lisp:list
       (common-lisp:cons "Marker"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'mount-targets))
      (common-lisp:list
       (common-lisp:cons "MountTargets"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-marker))
      (common-lisp:list
       (common-lisp:cons "NextMarker"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-mount-targets-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-tags-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-describe-tags-request-"))
   (max-items common-lisp:nil :type
    (common-lisp:or max-items common-lisp:null))
   (marker common-lisp:nil :type (common-lisp:or marker common-lisp:null))
   (file-system-id (common-lisp:error ":file-system-id is required") :type
    (common-lisp:or file-system-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-tags-request 'make-describe-tags-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-tags-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-tags-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-tags-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-tags-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-describe-tags-response-"))
   (marker common-lisp:nil :type (common-lisp:or marker common-lisp:null))
   (tags (common-lisp:error ":tags is required") :type
    (common-lisp:or tags common-lisp:null))
   (next-marker common-lisp:nil :type
    (common-lisp:or marker common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-tags-response 'make-describe-tags-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-tags-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-tags-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'marker))
      (common-lisp:list
       (common-lisp:cons "Marker"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-marker))
      (common-lisp:list
       (common-lisp:cons "NextMarker"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-tags-response))
   common-lisp:nil))
(common-lisp:deftype encrypted () 'common-lisp:boolean)
(common-lisp:deftype error-code () 'common-lisp:string)
(common-lisp:deftype error-message () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:define-condition file-system-already-exists
     (elasticfilesystem-error)
     ((error-code :initarg :error-code :initform common-lisp:nil :reader
       file-system-already-exists-error-code)
      (message :initarg :message :initform common-lisp:nil :reader
       file-system-already-exists-message)
      (file-system-id :initarg :file-system-id :initform common-lisp:nil
       :reader file-system-already-exists-file-system-id)))
 (common-lisp:export
  (common-lisp:list 'file-system-already-exists
                    'file-system-already-exists-error-code
                    'file-system-already-exists-message
                    'file-system-already-exists-file-system-id)))
(common-lisp:progn
 (common-lisp:defstruct
     (file-system-description (:copier common-lisp:nil)
      (:conc-name "struct-shape-file-system-description-"))
   (owner-id (common-lisp:error ":owner-id is required") :type
    (common-lisp:or aws-account-id common-lisp:null))
   (creation-token (common-lisp:error ":creation-token is required") :type
    (common-lisp:or creation-token common-lisp:null))
   (file-system-id (common-lisp:error ":file-system-id is required") :type
    (common-lisp:or file-system-id common-lisp:null))
   (creation-time (common-lisp:error ":creation-time is required") :type
    (common-lisp:or timestamp common-lisp:null))
   (life-cycle-state (common-lisp:error ":life-cycle-state is required") :type
    (common-lisp:or life-cycle-state common-lisp:null))
   (name common-lisp:nil :type (common-lisp:or tag-value common-lisp:null))
   (number-of-mount-targets
    (common-lisp:error ":number-of-mount-targets is required") :type
    (common-lisp:or mount-target-count common-lisp:null))
   (size-in-bytes (common-lisp:error ":size-in-bytes is required") :type
    (common-lisp:or file-system-size common-lisp:null))
   (performance-mode (common-lisp:error ":performance-mode is required") :type
    (common-lisp:or performance-mode common-lisp:null))
   (encrypted common-lisp:nil :type
    (common-lisp:or encrypted common-lisp:null))
   (kms-key-id common-lisp:nil :type
    (common-lisp:or kms-key-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'file-system-description 'make-file-system-description))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          file-system-description))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          file-system-description))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'owner-id))
      (common-lisp:list
       (common-lisp:cons "OwnerId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'creation-token))
      (common-lisp:list
       (common-lisp:cons "CreationToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'file-system-id))
      (common-lisp:list
       (common-lisp:cons "FileSystemId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'creation-time))
      (common-lisp:list
       (common-lisp:cons "CreationTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'life-cycle-state))
      (common-lisp:list
       (common-lisp:cons "LifeCycleState"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'number-of-mount-targets))
      (common-lisp:list
       (common-lisp:cons "NumberOfMountTargets"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'size-in-bytes))
      (common-lisp:list
       (common-lisp:cons "SizeInBytes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'performance-mode))
      (common-lisp:list
       (common-lisp:cons "PerformanceMode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'encrypted))
      (common-lisp:list
       (common-lisp:cons "Encrypted"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'kms-key-id))
      (common-lisp:list
       (common-lisp:cons "KmsKeyId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          file-system-description))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype file-system-descriptions ()
   '(trivial-types:proper-list file-system-description))
 (common-lisp:defun |make-file-system-descriptions|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list file-system-description))
   aws-sdk/generator/shape::members))
(common-lisp:deftype file-system-id () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:define-condition file-system-in-use
     (elasticfilesystem-error)
     ((error-code :initarg :error-code :initform common-lisp:nil :reader
       file-system-in-use-error-code)
      (message :initarg :message :initform common-lisp:nil :reader
       file-system-in-use-message)))
 (common-lisp:export
  (common-lisp:list 'file-system-in-use 'file-system-in-use-error-code
                    'file-system-in-use-message)))
(common-lisp:progn
 (common-lisp:define-condition file-system-limit-exceeded
     (elasticfilesystem-error)
     ((error-code :initarg :error-code :initform common-lisp:nil :reader
       file-system-limit-exceeded-error-code)
      (message :initarg :message :initform common-lisp:nil :reader
       file-system-limit-exceeded-message)))
 (common-lisp:export
  (common-lisp:list 'file-system-limit-exceeded
                    'file-system-limit-exceeded-error-code
                    'file-system-limit-exceeded-message)))
(common-lisp:progn
 (common-lisp:define-condition file-system-not-found
     (elasticfilesystem-error)
     ((error-code :initarg :error-code :initform common-lisp:nil :reader
       file-system-not-found-error-code)
      (message :initarg :message :initform common-lisp:nil :reader
       file-system-not-found-message)))
 (common-lisp:export
  (common-lisp:list 'file-system-not-found 'file-system-not-found-error-code
                    'file-system-not-found-message)))
(common-lisp:progn
 (common-lisp:defstruct
     (file-system-size (:copier common-lisp:nil)
      (:conc-name "struct-shape-file-system-size-"))
   (value (common-lisp:error ":value is required") :type
    (common-lisp:or file-system-size-value common-lisp:null))
   (timestamp common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'file-system-size 'make-file-system-size))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input file-system-size))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input file-system-size))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'value))
      (common-lisp:list
       (common-lisp:cons "Value"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'timestamp))
      (common-lisp:list
       (common-lisp:cons "Timestamp"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input file-system-size))
   common-lisp:nil))
(common-lisp:deftype file-system-size-value () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:define-condition incorrect-file-system-life-cycle-state
     (elasticfilesystem-error)
     ((error-code :initarg :error-code :initform common-lisp:nil :reader
       incorrect-file-system-life-cycle-state-error-code)
      (message :initarg :message :initform common-lisp:nil :reader
       incorrect-file-system-life-cycle-state-message)))
 (common-lisp:export
  (common-lisp:list 'incorrect-file-system-life-cycle-state
                    'incorrect-file-system-life-cycle-state-error-code
                    'incorrect-file-system-life-cycle-state-message)))
(common-lisp:progn
 (common-lisp:define-condition incorrect-mount-target-state
     (elasticfilesystem-error)
     ((error-code :initarg :error-code :initform common-lisp:nil :reader
       incorrect-mount-target-state-error-code)
      (message :initarg :message :initform common-lisp:nil :reader
       incorrect-mount-target-state-message)))
 (common-lisp:export
  (common-lisp:list 'incorrect-mount-target-state
                    'incorrect-mount-target-state-error-code
                    'incorrect-mount-target-state-message)))
(common-lisp:progn
 (common-lisp:define-condition internal-server-error
     (elasticfilesystem-error)
     ((error-code :initarg :error-code :initform common-lisp:nil :reader
       internal-server-error-error-code)
      (message :initarg :message :initform common-lisp:nil :reader
       internal-server-error-message)))
 (common-lisp:export
  (common-lisp:list 'internal-server-error 'internal-server-error-error-code
                    'internal-server-error-message)))
(common-lisp:deftype ip-address () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:define-condition ip-address-in-use
     (elasticfilesystem-error)
     ((error-code :initarg :error-code :initform common-lisp:nil :reader
       ip-address-in-use-error-code)
      (message :initarg :message :initform common-lisp:nil :reader
       ip-address-in-use-message)))
 (common-lisp:export
  (common-lisp:list 'ip-address-in-use 'ip-address-in-use-error-code
                    'ip-address-in-use-message)))
(common-lisp:deftype kms-key-id () 'common-lisp:string)
(common-lisp:deftype life-cycle-state () 'common-lisp:string)
(common-lisp:deftype marker () 'common-lisp:string)
(common-lisp:deftype max-items () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:defstruct
     (modify-mount-target-security-groups-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-modify-mount-target-security-groups-request-"))
   (mount-target-id (common-lisp:error ":mount-target-id is required") :type
    (common-lisp:or mount-target-id common-lisp:null))
   (security-groups common-lisp:nil :type
    (common-lisp:or security-groups common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'modify-mount-target-security-groups-request
                    'make-modify-mount-target-security-groups-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          modify-mount-target-security-groups-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          modify-mount-target-security-groups-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'security-groups))
      (common-lisp:list
       (common-lisp:cons "SecurityGroups"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          modify-mount-target-security-groups-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:define-condition mount-target-conflict
     (elasticfilesystem-error)
     ((error-code :initarg :error-code :initform common-lisp:nil :reader
       mount-target-conflict-error-code)
      (message :initarg :message :initform common-lisp:nil :reader
       mount-target-conflict-message)))
 (common-lisp:export
  (common-lisp:list 'mount-target-conflict 'mount-target-conflict-error-code
                    'mount-target-conflict-message)))
(common-lisp:deftype mount-target-count () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:defstruct
     (mount-target-description (:copier common-lisp:nil)
      (:conc-name "struct-shape-mount-target-description-"))
   (owner-id common-lisp:nil :type
    (common-lisp:or aws-account-id common-lisp:null))
   (mount-target-id (common-lisp:error ":mount-target-id is required") :type
    (common-lisp:or mount-target-id common-lisp:null))
   (file-system-id (common-lisp:error ":file-system-id is required") :type
    (common-lisp:or file-system-id common-lisp:null))
   (subnet-id (common-lisp:error ":subnet-id is required") :type
    (common-lisp:or subnet-id common-lisp:null))
   (life-cycle-state (common-lisp:error ":life-cycle-state is required") :type
    (common-lisp:or life-cycle-state common-lisp:null))
   (ip-address common-lisp:nil :type
    (common-lisp:or ip-address common-lisp:null))
   (network-interface-id common-lisp:nil :type
    (common-lisp:or network-interface-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'mount-target-description 'make-mount-target-description))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          mount-target-description))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          mount-target-description))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'owner-id))
      (common-lisp:list
       (common-lisp:cons "OwnerId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'mount-target-id))
      (common-lisp:list
       (common-lisp:cons "MountTargetId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'file-system-id))
      (common-lisp:list
       (common-lisp:cons "FileSystemId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'subnet-id))
      (common-lisp:list
       (common-lisp:cons "SubnetId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'life-cycle-state))
      (common-lisp:list
       (common-lisp:cons "LifeCycleState"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'ip-address))
      (common-lisp:list
       (common-lisp:cons "IpAddress"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'network-interface-id))
      (common-lisp:list
       (common-lisp:cons "NetworkInterfaceId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          mount-target-description))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype mount-target-descriptions ()
   '(trivial-types:proper-list mount-target-description))
 (common-lisp:defun |make-mount-target-descriptions|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            mount-target-description))
   aws-sdk/generator/shape::members))
(common-lisp:deftype mount-target-id () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:define-condition mount-target-not-found
     (elasticfilesystem-error)
     ((error-code :initarg :error-code :initform common-lisp:nil :reader
       mount-target-not-found-error-code)
      (message :initarg :message :initform common-lisp:nil :reader
       mount-target-not-found-message)))
 (common-lisp:export
  (common-lisp:list 'mount-target-not-found 'mount-target-not-found-error-code
                    'mount-target-not-found-message)))
(common-lisp:deftype network-interface-id () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:define-condition network-interface-limit-exceeded
     (elasticfilesystem-error)
     ((error-code :initarg :error-code :initform common-lisp:nil :reader
       network-interface-limit-exceeded-error-code)
      (message :initarg :message :initform common-lisp:nil :reader
       network-interface-limit-exceeded-message)))
 (common-lisp:export
  (common-lisp:list 'network-interface-limit-exceeded
                    'network-interface-limit-exceeded-error-code
                    'network-interface-limit-exceeded-message)))
(common-lisp:progn
 (common-lisp:define-condition no-free-addresses-in-subnet
     (elasticfilesystem-error)
     ((error-code :initarg :error-code :initform common-lisp:nil :reader
       no-free-addresses-in-subnet-error-code)
      (message :initarg :message :initform common-lisp:nil :reader
       no-free-addresses-in-subnet-message)))
 (common-lisp:export
  (common-lisp:list 'no-free-addresses-in-subnet
                    'no-free-addresses-in-subnet-error-code
                    'no-free-addresses-in-subnet-message)))
(common-lisp:deftype performance-mode () 'common-lisp:string)
(common-lisp:deftype security-group () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:define-condition security-group-limit-exceeded
     (elasticfilesystem-error)
     ((error-code :initarg :error-code :initform common-lisp:nil :reader
       security-group-limit-exceeded-error-code)
      (message :initarg :message :initform common-lisp:nil :reader
       security-group-limit-exceeded-message)))
 (common-lisp:export
  (common-lisp:list 'security-group-limit-exceeded
                    'security-group-limit-exceeded-error-code
                    'security-group-limit-exceeded-message)))
(common-lisp:progn
 (common-lisp:define-condition security-group-not-found
     (elasticfilesystem-error)
     ((error-code :initarg :error-code :initform common-lisp:nil :reader
       security-group-not-found-error-code)
      (message :initarg :message :initform common-lisp:nil :reader
       security-group-not-found-message)))
 (common-lisp:export
  (common-lisp:list 'security-group-not-found
                    'security-group-not-found-error-code
                    'security-group-not-found-message)))
(common-lisp:progn
 (common-lisp:deftype security-groups ()
   '(trivial-types:proper-list security-group))
 (common-lisp:defun |make-security-groups|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list security-group))
   aws-sdk/generator/shape::members))
(common-lisp:deftype subnet-id () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:define-condition subnet-not-found
     (elasticfilesystem-error)
     ((error-code :initarg :error-code :initform common-lisp:nil :reader
       subnet-not-found-error-code)
      (message :initarg :message :initform common-lisp:nil :reader
       subnet-not-found-message)))
 (common-lisp:export
  (common-lisp:list 'subnet-not-found 'subnet-not-found-error-code
                    'subnet-not-found-message)))
(common-lisp:progn
 (common-lisp:defstruct
     (tag (:copier common-lisp:nil) (:conc-name "struct-shape-tag-"))
   (key (common-lisp:error ":key is required") :type
    (common-lisp:or tag-key common-lisp:null))
   (value (common-lisp:error ":value is required") :type
    (common-lisp:or tag-value common-lisp:null)))
 (common-lisp:export (common-lisp:list 'tag 'make-tag))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input tag))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input tag))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'key))
      (common-lisp:list
       (common-lisp:cons "Key"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'value))
      (common-lisp:list
       (common-lisp:cons "Value"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input tag))
   common-lisp:nil))
(common-lisp:deftype tag-key () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype tag-keys () '(trivial-types:proper-list tag-key))
 (common-lisp:defun |make-tag-keys|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list tag-key))
   aws-sdk/generator/shape::members))
(common-lisp:deftype tag-value () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype tags () '(trivial-types:proper-list tag))
 (common-lisp:defun |make-tags|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list tag))
   aws-sdk/generator/shape::members))
(common-lisp:deftype timestamp () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:define-condition unsupported-availability-zone
     (elasticfilesystem-error)
     ((error-code :initarg :error-code :initform common-lisp:nil :reader
       unsupported-availability-zone-error-code)
      (message :initarg :message :initform common-lisp:nil :reader
       unsupported-availability-zone-message)))
 (common-lisp:export
  (common-lisp:list 'unsupported-availability-zone
                    'unsupported-availability-zone-error-code
                    'unsupported-availability-zone-message)))
(common-lisp:progn
 (common-lisp:defun create-file-system
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key creation-token performance-mode encrypted
                     kms-key-id)
   (common-lisp:declare
    (common-lisp:ignorable creation-token performance-mode encrypted
     kms-key-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-file-system-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'elasticfilesystem-request aws-sdk/generator/operation::input "POST"
        "/2015-02-01/file-systems" "CreateFileSystem" "2015-02-01"))
      common-lisp:nil common-lisp:nil
      '(("BadRequest" . bad-request)
        ("InternalServerError" . internal-server-error)
        ("FileSystemAlreadyExists" . file-system-already-exists)
        ("FileSystemLimitExceeded" . file-system-limit-exceeded)))))
 (common-lisp:export 'create-file-system))
(common-lisp:progn
 (common-lisp:defun create-mount-target
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key file-system-id subnet-id ip-address
                     security-groups)
   (common-lisp:declare
    (common-lisp:ignorable file-system-id subnet-id ip-address
     security-groups))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-mount-target-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'elasticfilesystem-request aws-sdk/generator/operation::input "POST"
        "/2015-02-01/mount-targets" "CreateMountTarget" "2015-02-01"))
      common-lisp:nil common-lisp:nil
      '(("BadRequest" . bad-request)
        ("InternalServerError" . internal-server-error)
        ("FileSystemNotFound" . file-system-not-found)
        ("IncorrectFileSystemLifeCycleState"
         . incorrect-file-system-life-cycle-state)
        ("MountTargetConflict" . mount-target-conflict)
        ("SubnetNotFound" . subnet-not-found)
        ("NoFreeAddressesInSubnet" . no-free-addresses-in-subnet)
        ("IpAddressInUse" . ip-address-in-use)
        ("NetworkInterfaceLimitExceeded" . network-interface-limit-exceeded)
        ("SecurityGroupLimitExceeded" . security-group-limit-exceeded)
        ("SecurityGroupNotFound" . security-group-not-found)
        ("UnsupportedAvailabilityZone" . unsupported-availability-zone)))))
 (common-lisp:export 'create-mount-target))
(common-lisp:progn
 (common-lisp:defun create-tags
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key file-system-id tags)
   (common-lisp:declare (common-lisp:ignorable file-system-id tags))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-tags-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'elasticfilesystem-request aws-sdk/generator/operation::input "POST"
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil "/2015-02-01/create-tags/~A"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'file-system-id))))
        "CreateTags" "2015-02-01"))
      common-lisp:nil common-lisp:nil
      '(("BadRequest" . bad-request)
        ("InternalServerError" . internal-server-error)
        ("FileSystemNotFound" . file-system-not-found)))))
 (common-lisp:export 'create-tags))
(common-lisp:progn
 (common-lisp:defun delete-file-system
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key file-system-id)
   (common-lisp:declare (common-lisp:ignorable file-system-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-file-system-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'elasticfilesystem-request aws-sdk/generator/operation::input "DELETE"
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil "/2015-02-01/file-systems/~A"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'file-system-id))))
        "DeleteFileSystem" "2015-02-01"))
      common-lisp:nil common-lisp:nil
      '(("BadRequest" . bad-request)
        ("InternalServerError" . internal-server-error)
        ("FileSystemNotFound" . file-system-not-found)
        ("FileSystemInUse" . file-system-in-use)))))
 (common-lisp:export 'delete-file-system))
(common-lisp:progn
 (common-lisp:defun delete-mount-target
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key mount-target-id)
   (common-lisp:declare (common-lisp:ignorable mount-target-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-mount-target-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'elasticfilesystem-request aws-sdk/generator/operation::input "DELETE"
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil "/2015-02-01/mount-targets/~A"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'mount-target-id))))
        "DeleteMountTarget" "2015-02-01"))
      common-lisp:nil common-lisp:nil
      '(("BadRequest" . bad-request)
        ("InternalServerError" . internal-server-error)
        ("DependencyTimeout" . dependency-timeout)
        ("MountTargetNotFound" . mount-target-not-found)))))
 (common-lisp:export 'delete-mount-target))
(common-lisp:progn
 (common-lisp:defun delete-tags
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key file-system-id tag-keys)
   (common-lisp:declare (common-lisp:ignorable file-system-id tag-keys))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-tags-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'elasticfilesystem-request aws-sdk/generator/operation::input "POST"
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil "/2015-02-01/delete-tags/~A"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'file-system-id))))
        "DeleteTags" "2015-02-01"))
      common-lisp:nil common-lisp:nil
      '(("BadRequest" . bad-request)
        ("InternalServerError" . internal-server-error)
        ("FileSystemNotFound" . file-system-not-found)))))
 (common-lisp:export 'delete-tags))
(common-lisp:progn
 (common-lisp:defun describe-file-systems
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key max-items marker creation-token
                     file-system-id)
   (common-lisp:declare
    (common-lisp:ignorable max-items marker creation-token file-system-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-describe-file-systems-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'elasticfilesystem-request aws-sdk/generator/operation::input "GET"
        "/2015-02-01/file-systems" "DescribeFileSystems" "2015-02-01"))
      common-lisp:nil common-lisp:nil
      '(("BadRequest" . bad-request)
        ("InternalServerError" . internal-server-error)
        ("FileSystemNotFound" . file-system-not-found)))))
 (common-lisp:export 'describe-file-systems))
(common-lisp:progn
 (common-lisp:defun describe-mount-target-security-groups
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key mount-target-id)
   (common-lisp:declare (common-lisp:ignorable mount-target-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-describe-mount-target-security-groups-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'elasticfilesystem-request aws-sdk/generator/operation::input "GET"
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil
                              "/2015-02-01/mount-targets/~A/security-groups"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'mount-target-id))))
        "DescribeMountTargetSecurityGroups" "2015-02-01"))
      common-lisp:nil common-lisp:nil
      '(("BadRequest" . bad-request)
        ("InternalServerError" . internal-server-error)
        ("MountTargetNotFound" . mount-target-not-found)
        ("IncorrectMountTargetState" . incorrect-mount-target-state)))))
 (common-lisp:export 'describe-mount-target-security-groups))
(common-lisp:progn
 (common-lisp:defun describe-mount-targets
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key max-items marker file-system-id
                     mount-target-id)
   (common-lisp:declare
    (common-lisp:ignorable max-items marker file-system-id mount-target-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-describe-mount-targets-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'elasticfilesystem-request aws-sdk/generator/operation::input "GET"
        "/2015-02-01/mount-targets" "DescribeMountTargets" "2015-02-01"))
      common-lisp:nil common-lisp:nil
      '(("BadRequest" . bad-request)
        ("InternalServerError" . internal-server-error)
        ("FileSystemNotFound" . file-system-not-found)
        ("MountTargetNotFound" . mount-target-not-found)))))
 (common-lisp:export 'describe-mount-targets))
(common-lisp:progn
 (common-lisp:defun describe-tags
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key max-items marker file-system-id)
   (common-lisp:declare
    (common-lisp:ignorable max-items marker file-system-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-describe-tags-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'elasticfilesystem-request aws-sdk/generator/operation::input "GET"
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil "/2015-02-01/tags/~A/"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'file-system-id))))
        "DescribeTags" "2015-02-01"))
      common-lisp:nil common-lisp:nil
      '(("BadRequest" . bad-request)
        ("InternalServerError" . internal-server-error)
        ("FileSystemNotFound" . file-system-not-found)))))
 (common-lisp:export 'describe-tags))
(common-lisp:progn
 (common-lisp:defun modify-mount-target-security-groups
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key mount-target-id security-groups)
   (common-lisp:declare
    (common-lisp:ignorable mount-target-id security-groups))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-modify-mount-target-security-groups-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'elasticfilesystem-request aws-sdk/generator/operation::input "PUT"
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil
                              "/2015-02-01/mount-targets/~A/security-groups"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'mount-target-id))))
        "ModifyMountTargetSecurityGroups" "2015-02-01"))
      common-lisp:nil common-lisp:nil
      '(("BadRequest" . bad-request)
        ("InternalServerError" . internal-server-error)
        ("MountTargetNotFound" . mount-target-not-found)
        ("IncorrectMountTargetState" . incorrect-mount-target-state)
        ("SecurityGroupLimitExceeded" . security-group-limit-exceeded)
        ("SecurityGroupNotFound" . security-group-not-found)))))
 (common-lisp:export 'modify-mount-target-security-groups))
