;; DO NOT EDIT: File is generated by AWS-SDK/GENERATOR.

(common-lisp:defpackage #:aws-sdk/services/sns/api
  (:use)
  (:nicknames #:aws/sns)
  (:import-from #:aws-sdk/generator/shape)
  (:import-from #:aws-sdk/generator/operation)
  (:import-from #:aws-sdk/api)
  (:import-from #:aws-sdk/request))
(common-lisp:in-package #:aws-sdk/services/sns/api)
(common-lisp:progn
 (common-lisp:defclass sns-request (aws-sdk/request:request) common-lisp:nil
                       (:default-initargs :service "sns"))
 (common-lisp:export 'sns-request))
(common-lisp:progn
 (common-lisp:deftype actions-list () '(trivial-types:proper-list |action|))
 (common-lisp:defun |make-actions-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list |action|))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (add-permission-input (:copier common-lisp:nil)
      (:conc-name "struct-shape-add-permission-input-"))
   (topic-arn (common-lisp:error ":topic-arn is required") :type
    (common-lisp:or |topicARN| common-lisp:null))
   (label (common-lisp:error ":label is required") :type
    (common-lisp:or |label| common-lisp:null))
   (awsaccount-id (common-lisp:error ":awsaccount-id is required") :type
    (common-lisp:or delegates-list common-lisp:null))
   (action-name (common-lisp:error ":action-name is required") :type
    (common-lisp:or actions-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'add-permission-input 'make-add-permission-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input add-permission-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input add-permission-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'topic-arn))
      (common-lisp:list
       (common-lisp:cons "TopicArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'label))
      (common-lisp:list
       (common-lisp:cons "Label"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'awsaccount-id))
      (common-lisp:list
       (common-lisp:cons "AWSAccountId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'action-name))
      (common-lisp:list
       (common-lisp:cons "ActionName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input add-permission-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (authorization-error-exception (:copier common-lisp:nil)
      (:conc-name "struct-shape-authorization-error-exception-"))
   (message common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'authorization-error-exception
                    'make-authorization-error-exception))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          authorization-error-exception))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          authorization-error-exception))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'message))
      (common-lisp:list
       (common-lisp:cons "message"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          authorization-error-exception))
   common-lisp:nil))
(common-lisp:deftype binary ()
  '(common-lisp:simple-array (common-lisp:unsigned-byte 8) (common-lisp:*)))
(common-lisp:progn
 (common-lisp:defstruct
     (check-if-phone-number-is-opted-out-input (:copier common-lisp:nil)
      (:conc-name "struct-shape-check-if-phone-number-is-opted-out-input-"))
   (phone-number (common-lisp:error ":phonenumber is required") :type
    (common-lisp:or phone-number common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'check-if-phone-number-is-opted-out-input
                    'make-check-if-phone-number-is-opted-out-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          check-if-phone-number-is-opted-out-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          check-if-phone-number-is-opted-out-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'phone-number))
      (common-lisp:list
       (common-lisp:cons "phoneNumber"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          check-if-phone-number-is-opted-out-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (check-if-phone-number-is-opted-out-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-check-if-phone-number-is-opted-out-response-"))
   (is-opted-out common-lisp:nil :type
    (common-lisp:or common-lisp:boolean common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'check-if-phone-number-is-opted-out-response
                    'make-check-if-phone-number-is-opted-out-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          check-if-phone-number-is-opted-out-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          check-if-phone-number-is-opted-out-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'is-opted-out))
      (common-lisp:list
       (common-lisp:cons "isOptedOut"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          check-if-phone-number-is-opted-out-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (confirm-subscription-input (:copier common-lisp:nil)
      (:conc-name "struct-shape-confirm-subscription-input-"))
   (topic-arn (common-lisp:error ":topic-arn is required") :type
    (common-lisp:or |topicARN| common-lisp:null))
   (token (common-lisp:error ":token is required") :type
    (common-lisp:or |token| common-lisp:null))
   (authenticate-on-unsubscribe common-lisp:nil :type
    (common-lisp:or |authenticateOnUnsubscribe| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'confirm-subscription-input
                    'make-confirm-subscription-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          confirm-subscription-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          confirm-subscription-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'topic-arn))
      (common-lisp:list
       (common-lisp:cons "TopicArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'token))
      (common-lisp:list
       (common-lisp:cons "Token"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'authenticate-on-unsubscribe))
      (common-lisp:list
       (common-lisp:cons "AuthenticateOnUnsubscribe"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          confirm-subscription-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (confirm-subscription-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-confirm-subscription-response-"))
   (subscription-arn common-lisp:nil :type
    (common-lisp:or |subscriptionARN| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'confirm-subscription-response
                    'make-confirm-subscription-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          confirm-subscription-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          confirm-subscription-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'subscription-arn))
      (common-lisp:list
       (common-lisp:cons "SubscriptionArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          confirm-subscription-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-endpoint-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-endpoint-response-"))
   (endpoint-arn common-lisp:nil :type
    (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-endpoint-response 'make-create-endpoint-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-endpoint-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-endpoint-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'endpoint-arn))
      (common-lisp:list
       (common-lisp:cons "EndpointArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-endpoint-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-platform-application-input (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-platform-application-input-"))
   (name (common-lisp:error ":name is required") :type
    (common-lisp:or string common-lisp:null))
   (platform (common-lisp:error ":platform is required") :type
    (common-lisp:or string common-lisp:null))
   (attributes (common-lisp:error ":attributes is required") :type
    (common-lisp:or map-string-to-string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-platform-application-input
                    'make-create-platform-application-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-platform-application-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-platform-application-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'platform))
      (common-lisp:list
       (common-lisp:cons "Platform"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'attributes))
      (common-lisp:list
       (common-lisp:cons "Attributes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-platform-application-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-platform-application-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-platform-application-response-"))
   (platform-application-arn common-lisp:nil :type
    (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-platform-application-response
                    'make-create-platform-application-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-platform-application-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-platform-application-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'platform-application-arn))
      (common-lisp:list
       (common-lisp:cons "PlatformApplicationArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-platform-application-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-platform-endpoint-input (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-platform-endpoint-input-"))
   (platform-application-arn
    (common-lisp:error ":platform-application-arn is required") :type
    (common-lisp:or string common-lisp:null))
   (token (common-lisp:error ":token is required") :type
    (common-lisp:or string common-lisp:null))
   (custom-user-data common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (attributes common-lisp:nil :type
    (common-lisp:or map-string-to-string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-platform-endpoint-input
                    'make-create-platform-endpoint-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-platform-endpoint-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-platform-endpoint-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'platform-application-arn))
      (common-lisp:list
       (common-lisp:cons "PlatformApplicationArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'token))
      (common-lisp:list
       (common-lisp:cons "Token"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'custom-user-data))
      (common-lisp:list
       (common-lisp:cons "CustomUserData"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'attributes))
      (common-lisp:list
       (common-lisp:cons "Attributes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-platform-endpoint-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-topic-input (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-topic-input-"))
   (name (common-lisp:error ":name is required") :type
    (common-lisp:or |topicName| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-topic-input 'make-create-topic-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input create-topic-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input create-topic-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input create-topic-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-topic-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-topic-response-"))
   (topic-arn common-lisp:nil :type
    (common-lisp:or |topicARN| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-topic-response 'make-create-topic-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-topic-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-topic-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'topic-arn))
      (common-lisp:list
       (common-lisp:cons "TopicArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-topic-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype delegates-list ()
   '(trivial-types:proper-list |delegate|))
 (common-lisp:defun |make-delegates-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list |delegate|))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-endpoint-input (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-endpoint-input-"))
   (endpoint-arn (common-lisp:error ":endpoint-arn is required") :type
    (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-endpoint-input 'make-delete-endpoint-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-endpoint-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-endpoint-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'endpoint-arn))
      (common-lisp:list
       (common-lisp:cons "EndpointArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-endpoint-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-platform-application-input (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-platform-application-input-"))
   (platform-application-arn
    (common-lisp:error ":platform-application-arn is required") :type
    (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-platform-application-input
                    'make-delete-platform-application-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-platform-application-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-platform-application-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'platform-application-arn))
      (common-lisp:list
       (common-lisp:cons "PlatformApplicationArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-platform-application-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-topic-input (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-topic-input-"))
   (topic-arn (common-lisp:error ":topic-arn is required") :type
    (common-lisp:or |topicARN| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-topic-input 'make-delete-topic-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input delete-topic-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input delete-topic-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'topic-arn))
      (common-lisp:list
       (common-lisp:cons "TopicArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input delete-topic-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (endpoint (:copier common-lisp:nil) (:conc-name "struct-shape-endpoint-"))
   (endpoint-arn common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (attributes common-lisp:nil :type
    (common-lisp:or map-string-to-string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'endpoint 'make-endpoint))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input endpoint))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input endpoint))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'endpoint-arn))
      (common-lisp:list
       (common-lisp:cons "EndpointArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'attributes))
      (common-lisp:list
       (common-lisp:cons "Attributes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input endpoint))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (endpoint-disabled-exception (:copier common-lisp:nil)
      (:conc-name "struct-shape-endpoint-disabled-exception-"))
   (message common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'endpoint-disabled-exception
                    'make-endpoint-disabled-exception))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          endpoint-disabled-exception))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          endpoint-disabled-exception))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'message))
      (common-lisp:list
       (common-lisp:cons "message"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          endpoint-disabled-exception))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-endpoint-attributes-input (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-endpoint-attributes-input-"))
   (endpoint-arn (common-lisp:error ":endpoint-arn is required") :type
    (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-endpoint-attributes-input
                    'make-get-endpoint-attributes-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-endpoint-attributes-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-endpoint-attributes-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'endpoint-arn))
      (common-lisp:list
       (common-lisp:cons "EndpointArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-endpoint-attributes-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-endpoint-attributes-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-endpoint-attributes-response-"))
   (attributes common-lisp:nil :type
    (common-lisp:or map-string-to-string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-endpoint-attributes-response
                    'make-get-endpoint-attributes-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-endpoint-attributes-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-endpoint-attributes-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'attributes))
      (common-lisp:list
       (common-lisp:cons "Attributes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-endpoint-attributes-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-platform-application-attributes-input (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-platform-application-attributes-input-"))
   (platform-application-arn
    (common-lisp:error ":platform-application-arn is required") :type
    (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-platform-application-attributes-input
                    'make-get-platform-application-attributes-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-platform-application-attributes-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-platform-application-attributes-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'platform-application-arn))
      (common-lisp:list
       (common-lisp:cons "PlatformApplicationArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-platform-application-attributes-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-platform-application-attributes-response (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-get-platform-application-attributes-response-"))
   (attributes common-lisp:nil :type
    (common-lisp:or map-string-to-string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-platform-application-attributes-response
                    'make-get-platform-application-attributes-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-platform-application-attributes-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-platform-application-attributes-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'attributes))
      (common-lisp:list
       (common-lisp:cons "Attributes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-platform-application-attributes-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-smsattributes-input (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-smsattributes-input-"))
   (attributes common-lisp:nil :type
    (common-lisp:or list-string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-smsattributes-input 'make-get-smsattributes-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-smsattributes-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-smsattributes-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'attributes))
      (common-lisp:list
       (common-lisp:cons "attributes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-smsattributes-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-smsattributes-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-smsattributes-response-"))
   (attributes common-lisp:nil :type
    (common-lisp:or map-string-to-string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-smsattributes-response
                    'make-get-smsattributes-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-smsattributes-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-smsattributes-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'attributes))
      (common-lisp:list
       (common-lisp:cons "attributes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-smsattributes-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-subscription-attributes-input (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-subscription-attributes-input-"))
   (subscription-arn (common-lisp:error ":subscription-arn is required") :type
    (common-lisp:or |subscriptionARN| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-subscription-attributes-input
                    'make-get-subscription-attributes-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-subscription-attributes-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-subscription-attributes-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'subscription-arn))
      (common-lisp:list
       (common-lisp:cons "SubscriptionArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-subscription-attributes-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-subscription-attributes-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-subscription-attributes-response-"))
   (attributes common-lisp:nil :type
    (common-lisp:or subscription-attributes-map common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-subscription-attributes-response
                    'make-get-subscription-attributes-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-subscription-attributes-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-subscription-attributes-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'attributes))
      (common-lisp:list
       (common-lisp:cons "Attributes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-subscription-attributes-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-topic-attributes-input (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-topic-attributes-input-"))
   (topic-arn (common-lisp:error ":topic-arn is required") :type
    (common-lisp:or |topicARN| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-topic-attributes-input
                    'make-get-topic-attributes-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-topic-attributes-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-topic-attributes-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'topic-arn))
      (common-lisp:list
       (common-lisp:cons "TopicArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-topic-attributes-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-topic-attributes-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-topic-attributes-response-"))
   (attributes common-lisp:nil :type
    (common-lisp:or topic-attributes-map common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-topic-attributes-response
                    'make-get-topic-attributes-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-topic-attributes-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-topic-attributes-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'attributes))
      (common-lisp:list
       (common-lisp:cons "Attributes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-topic-attributes-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (internal-error-exception (:copier common-lisp:nil)
      (:conc-name "struct-shape-internal-error-exception-"))
   (message common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'internal-error-exception 'make-internal-error-exception))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          internal-error-exception))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          internal-error-exception))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'message))
      (common-lisp:list
       (common-lisp:cons "message"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          internal-error-exception))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (invalid-parameter-exception (:copier common-lisp:nil)
      (:conc-name "struct-shape-invalid-parameter-exception-"))
   (message common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'invalid-parameter-exception
                    'make-invalid-parameter-exception))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          invalid-parameter-exception))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          invalid-parameter-exception))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'message))
      (common-lisp:list
       (common-lisp:cons "message"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          invalid-parameter-exception))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (invalid-parameter-value-exception (:copier common-lisp:nil)
      (:conc-name "struct-shape-invalid-parameter-value-exception-"))
   (message common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'invalid-parameter-value-exception
                    'make-invalid-parameter-value-exception))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          invalid-parameter-value-exception))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          invalid-parameter-value-exception))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'message))
      (common-lisp:list
       (common-lisp:cons "message"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          invalid-parameter-value-exception))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-endpoints-by-platform-application-input (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-list-endpoints-by-platform-application-input-"))
   (platform-application-arn
    (common-lisp:error ":platform-application-arn is required") :type
    (common-lisp:or string common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-endpoints-by-platform-application-input
                    'make-list-endpoints-by-platform-application-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-endpoints-by-platform-application-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-endpoints-by-platform-application-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'platform-application-arn))
      (common-lisp:list
       (common-lisp:cons "PlatformApplicationArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-endpoints-by-platform-application-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-endpoints-by-platform-application-response (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-list-endpoints-by-platform-application-response-"))
   (endpoints common-lisp:nil :type
    (common-lisp:or list-of-endpoints common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-endpoints-by-platform-application-response
                    'make-list-endpoints-by-platform-application-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-endpoints-by-platform-application-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-endpoints-by-platform-application-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'endpoints))
      (common-lisp:list
       (common-lisp:cons "Endpoints"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-endpoints-by-platform-application-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype list-of-endpoints ()
   '(trivial-types:proper-list endpoint))
 (common-lisp:defun |make-list-of-endpoints|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list endpoint))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype list-of-platform-applications ()
   '(trivial-types:proper-list platform-application))
 (common-lisp:defun |make-list-of-platform-applications|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list platform-application))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (list-phone-numbers-opted-out-input (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-phone-numbers-opted-out-input-"))
   (next-token common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-phone-numbers-opted-out-input
                    'make-list-phone-numbers-opted-out-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-phone-numbers-opted-out-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-phone-numbers-opted-out-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "nextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-phone-numbers-opted-out-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-phone-numbers-opted-out-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-phone-numbers-opted-out-response-"))
   (phone-numbers common-lisp:nil :type
    (common-lisp:or phone-number-list common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-phone-numbers-opted-out-response
                    'make-list-phone-numbers-opted-out-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-phone-numbers-opted-out-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-phone-numbers-opted-out-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'phone-numbers))
      (common-lisp:list
       (common-lisp:cons "phoneNumbers"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "nextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-phone-numbers-opted-out-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-platform-applications-input (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-platform-applications-input-"))
   (next-token common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-platform-applications-input
                    'make-list-platform-applications-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-platform-applications-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-platform-applications-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-platform-applications-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-platform-applications-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-platform-applications-response-"))
   (platform-applications common-lisp:nil :type
    (common-lisp:or list-of-platform-applications common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-platform-applications-response
                    'make-list-platform-applications-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-platform-applications-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-platform-applications-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'platform-applications))
      (common-lisp:list
       (common-lisp:cons "PlatformApplications"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-platform-applications-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype list-string () '(trivial-types:proper-list string))
 (common-lisp:defun |make-list-string|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list string))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (list-subscriptions-by-topic-input (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-subscriptions-by-topic-input-"))
   (topic-arn (common-lisp:error ":topic-arn is required") :type
    (common-lisp:or |topicARN| common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or |nextToken| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-subscriptions-by-topic-input
                    'make-list-subscriptions-by-topic-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-subscriptions-by-topic-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-subscriptions-by-topic-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'topic-arn))
      (common-lisp:list
       (common-lisp:cons "TopicArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-subscriptions-by-topic-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-subscriptions-by-topic-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-subscriptions-by-topic-response-"))
   (subscriptions common-lisp:nil :type
    (common-lisp:or subscriptions-list common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or |nextToken| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-subscriptions-by-topic-response
                    'make-list-subscriptions-by-topic-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-subscriptions-by-topic-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-subscriptions-by-topic-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'subscriptions))
      (common-lisp:list
       (common-lisp:cons "Subscriptions"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-subscriptions-by-topic-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-subscriptions-input (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-subscriptions-input-"))
   (next-token common-lisp:nil :type
    (common-lisp:or |nextToken| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-subscriptions-input 'make-list-subscriptions-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-subscriptions-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-subscriptions-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-subscriptions-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-subscriptions-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-subscriptions-response-"))
   (subscriptions common-lisp:nil :type
    (common-lisp:or subscriptions-list common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or |nextToken| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-subscriptions-response
                    'make-list-subscriptions-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-subscriptions-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-subscriptions-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'subscriptions))
      (common-lisp:list
       (common-lisp:cons "Subscriptions"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-subscriptions-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-topics-input (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-topics-input-"))
   (next-token common-lisp:nil :type
    (common-lisp:or |nextToken| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-topics-input 'make-list-topics-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input list-topics-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input list-topics-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input list-topics-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-topics-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-topics-response-"))
   (topics common-lisp:nil :type (common-lisp:or topics-list common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or |nextToken| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-topics-response 'make-list-topics-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input list-topics-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input list-topics-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'topics))
      (common-lisp:list
       (common-lisp:cons "Topics"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input list-topics-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype map-string-to-string () 'common-lisp:hash-table)
 (common-lisp:defun |make-map-string-to-string|
                    (aws-sdk/generator/shape::key-values)
   (common-lisp:etypecase aws-sdk/generator/shape::key-values
     (common-lisp:hash-table aws-sdk/generator/shape::key-values)
     (common-lisp:list
      (alexandria:alist-hash-table aws-sdk/generator/shape::key-values)))))
(common-lisp:progn
 (common-lisp:deftype message-attribute-map () 'common-lisp:hash-table)
 (common-lisp:defun |make-message-attribute-map|
                    (aws-sdk/generator/shape::key-values)
   (common-lisp:etypecase aws-sdk/generator/shape::key-values
     (common-lisp:hash-table aws-sdk/generator/shape::key-values)
     (common-lisp:list
      (alexandria:alist-hash-table aws-sdk/generator/shape::key-values)))))
(common-lisp:progn
 (common-lisp:defstruct
     (message-attribute-value (:copier common-lisp:nil)
      (:conc-name "struct-shape-message-attribute-value-"))
   (data-type (common-lisp:error ":data-type is required") :type
    (common-lisp:or string common-lisp:null))
   (string-value common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (binary-value common-lisp:nil :type
    (common-lisp:or binary common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'message-attribute-value 'make-message-attribute-value))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          message-attribute-value))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          message-attribute-value))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'data-type))
      (common-lisp:list
       (common-lisp:cons "DataType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'string-value))
      (common-lisp:list
       (common-lisp:cons "StringValue"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'binary-value))
      (common-lisp:list
       (common-lisp:cons "BinaryValue"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          message-attribute-value))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (not-found-exception (:copier common-lisp:nil)
      (:conc-name "struct-shape-not-found-exception-"))
   (message common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'not-found-exception 'make-not-found-exception))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input not-found-exception))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input not-found-exception))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'message))
      (common-lisp:list
       (common-lisp:cons "message"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input not-found-exception))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (opt-in-phone-number-input (:copier common-lisp:nil)
      (:conc-name "struct-shape-opt-in-phone-number-input-"))
   (phone-number (common-lisp:error ":phonenumber is required") :type
    (common-lisp:or phone-number common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'opt-in-phone-number-input
                    'make-opt-in-phone-number-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          opt-in-phone-number-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          opt-in-phone-number-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'phone-number))
      (common-lisp:list
       (common-lisp:cons "phoneNumber"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          opt-in-phone-number-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (opt-in-phone-number-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-opt-in-phone-number-response-")))
 (common-lisp:export
  (common-lisp:list 'opt-in-phone-number-response
                    'make-opt-in-phone-number-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          opt-in-phone-number-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          opt-in-phone-number-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          opt-in-phone-number-response))
   common-lisp:nil))
(common-lisp:deftype phone-number () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype phone-number-list ()
   '(trivial-types:proper-list phone-number))
 (common-lisp:defun |make-phone-number-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list phone-number))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (platform-application (:copier common-lisp:nil)
      (:conc-name "struct-shape-platform-application-"))
   (platform-application-arn common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (attributes common-lisp:nil :type
    (common-lisp:or map-string-to-string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'platform-application 'make-platform-application))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input platform-application))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input platform-application))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'platform-application-arn))
      (common-lisp:list
       (common-lisp:cons "PlatformApplicationArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'attributes))
      (common-lisp:list
       (common-lisp:cons "Attributes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input platform-application))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (platform-application-disabled-exception (:copier common-lisp:nil)
      (:conc-name "struct-shape-platform-application-disabled-exception-"))
   (message common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'platform-application-disabled-exception
                    'make-platform-application-disabled-exception))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          platform-application-disabled-exception))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          platform-application-disabled-exception))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'message))
      (common-lisp:list
       (common-lisp:cons "message"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          platform-application-disabled-exception))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (publish-input (:copier common-lisp:nil)
      (:conc-name "struct-shape-publish-input-"))
   (topic-arn common-lisp:nil :type
    (common-lisp:or |topicARN| common-lisp:null))
   (target-arn common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (phone-number common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (message (common-lisp:error ":message is required") :type
    (common-lisp:or |message| common-lisp:null))
   (subject common-lisp:nil :type (common-lisp:or |subject| common-lisp:null))
   (message-structure common-lisp:nil :type
    (common-lisp:or |messageStructure| common-lisp:null))
   (message-attributes common-lisp:nil :type
    (common-lisp:or message-attribute-map common-lisp:null)))
 (common-lisp:export (common-lisp:list 'publish-input 'make-publish-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input publish-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input publish-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'topic-arn))
      (common-lisp:list
       (common-lisp:cons "TopicArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'target-arn))
      (common-lisp:list
       (common-lisp:cons "TargetArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'phone-number))
      (common-lisp:list
       (common-lisp:cons "PhoneNumber"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'message))
      (common-lisp:list
       (common-lisp:cons "Message"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'subject))
      (common-lisp:list
       (common-lisp:cons "Subject"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'message-structure))
      (common-lisp:list
       (common-lisp:cons "MessageStructure"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'message-attributes))
      (common-lisp:list
       (common-lisp:cons "MessageAttributes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input publish-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (publish-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-publish-response-"))
   (message-id common-lisp:nil :type
    (common-lisp:or |messageId| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'publish-response 'make-publish-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input publish-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input publish-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'message-id))
      (common-lisp:list
       (common-lisp:cons "MessageId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input publish-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (remove-permission-input (:copier common-lisp:nil)
      (:conc-name "struct-shape-remove-permission-input-"))
   (topic-arn (common-lisp:error ":topic-arn is required") :type
    (common-lisp:or |topicARN| common-lisp:null))
   (label (common-lisp:error ":label is required") :type
    (common-lisp:or |label| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'remove-permission-input 'make-remove-permission-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          remove-permission-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          remove-permission-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'topic-arn))
      (common-lisp:list
       (common-lisp:cons "TopicArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'label))
      (common-lisp:list
       (common-lisp:cons "Label"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          remove-permission-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (set-endpoint-attributes-input (:copier common-lisp:nil)
      (:conc-name "struct-shape-set-endpoint-attributes-input-"))
   (endpoint-arn (common-lisp:error ":endpoint-arn is required") :type
    (common-lisp:or string common-lisp:null))
   (attributes (common-lisp:error ":attributes is required") :type
    (common-lisp:or map-string-to-string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'set-endpoint-attributes-input
                    'make-set-endpoint-attributes-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          set-endpoint-attributes-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          set-endpoint-attributes-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'endpoint-arn))
      (common-lisp:list
       (common-lisp:cons "EndpointArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'attributes))
      (common-lisp:list
       (common-lisp:cons "Attributes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          set-endpoint-attributes-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (set-platform-application-attributes-input (:copier common-lisp:nil)
      (:conc-name "struct-shape-set-platform-application-attributes-input-"))
   (platform-application-arn
    (common-lisp:error ":platform-application-arn is required") :type
    (common-lisp:or string common-lisp:null))
   (attributes (common-lisp:error ":attributes is required") :type
    (common-lisp:or map-string-to-string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'set-platform-application-attributes-input
                    'make-set-platform-application-attributes-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          set-platform-application-attributes-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          set-platform-application-attributes-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'platform-application-arn))
      (common-lisp:list
       (common-lisp:cons "PlatformApplicationArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'attributes))
      (common-lisp:list
       (common-lisp:cons "Attributes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          set-platform-application-attributes-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (set-smsattributes-input (:copier common-lisp:nil)
      (:conc-name "struct-shape-set-smsattributes-input-"))
   (attributes (common-lisp:error ":attributes is required") :type
    (common-lisp:or map-string-to-string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'set-smsattributes-input 'make-set-smsattributes-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          set-smsattributes-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          set-smsattributes-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'attributes))
      (common-lisp:list
       (common-lisp:cons "attributes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          set-smsattributes-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (set-smsattributes-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-set-smsattributes-response-")))
 (common-lisp:export
  (common-lisp:list 'set-smsattributes-response
                    'make-set-smsattributes-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          set-smsattributes-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          set-smsattributes-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          set-smsattributes-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (set-subscription-attributes-input (:copier common-lisp:nil)
      (:conc-name "struct-shape-set-subscription-attributes-input-"))
   (subscription-arn (common-lisp:error ":subscription-arn is required") :type
    (common-lisp:or |subscriptionARN| common-lisp:null))
   (attribute-name (common-lisp:error ":attribute-name is required") :type
    (common-lisp:or |attributeName| common-lisp:null))
   (attribute-value common-lisp:nil :type
    (common-lisp:or |attributeValue| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'set-subscription-attributes-input
                    'make-set-subscription-attributes-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          set-subscription-attributes-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          set-subscription-attributes-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'subscription-arn))
      (common-lisp:list
       (common-lisp:cons "SubscriptionArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'attribute-name))
      (common-lisp:list
       (common-lisp:cons "AttributeName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'attribute-value))
      (common-lisp:list
       (common-lisp:cons "AttributeValue"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          set-subscription-attributes-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (set-topic-attributes-input (:copier common-lisp:nil)
      (:conc-name "struct-shape-set-topic-attributes-input-"))
   (topic-arn (common-lisp:error ":topic-arn is required") :type
    (common-lisp:or |topicARN| common-lisp:null))
   (attribute-name (common-lisp:error ":attribute-name is required") :type
    (common-lisp:or |attributeName| common-lisp:null))
   (attribute-value common-lisp:nil :type
    (common-lisp:or |attributeValue| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'set-topic-attributes-input
                    'make-set-topic-attributes-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          set-topic-attributes-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          set-topic-attributes-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'topic-arn))
      (common-lisp:list
       (common-lisp:cons "TopicArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'attribute-name))
      (common-lisp:list
       (common-lisp:cons "AttributeName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'attribute-value))
      (common-lisp:list
       (common-lisp:cons "AttributeValue"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          set-topic-attributes-input))
   common-lisp:nil))
(common-lisp:deftype string () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (subscribe-input (:copier common-lisp:nil)
      (:conc-name "struct-shape-subscribe-input-"))
   (topic-arn (common-lisp:error ":topic-arn is required") :type
    (common-lisp:or |topicARN| common-lisp:null))
   (protocol (common-lisp:error ":protocol is required") :type
    (common-lisp:or |protocol| common-lisp:null))
   (endpoint common-lisp:nil :type
    (common-lisp:or |endpoint| common-lisp:null)))
 (common-lisp:export (common-lisp:list 'subscribe-input 'make-subscribe-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input subscribe-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input subscribe-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'topic-arn))
      (common-lisp:list
       (common-lisp:cons "TopicArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'protocol))
      (common-lisp:list
       (common-lisp:cons "Protocol"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'endpoint))
      (common-lisp:list
       (common-lisp:cons "Endpoint"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input subscribe-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (subscribe-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-subscribe-response-"))
   (subscription-arn common-lisp:nil :type
    (common-lisp:or |subscriptionARN| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'subscribe-response 'make-subscribe-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input subscribe-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input subscribe-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'subscription-arn))
      (common-lisp:list
       (common-lisp:cons "SubscriptionArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input subscribe-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (subscription (:copier common-lisp:nil)
      (:conc-name "struct-shape-subscription-"))
   (subscription-arn common-lisp:nil :type
    (common-lisp:or |subscriptionARN| common-lisp:null))
   (owner common-lisp:nil :type (common-lisp:or |account| common-lisp:null))
   (protocol common-lisp:nil :type
    (common-lisp:or |protocol| common-lisp:null))
   (endpoint common-lisp:nil :type
    (common-lisp:or |endpoint| common-lisp:null))
   (topic-arn common-lisp:nil :type
    (common-lisp:or |topicARN| common-lisp:null)))
 (common-lisp:export (common-lisp:list 'subscription 'make-subscription))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input subscription))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input subscription))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'subscription-arn))
      (common-lisp:list
       (common-lisp:cons "SubscriptionArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'owner))
      (common-lisp:list
       (common-lisp:cons "Owner"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'protocol))
      (common-lisp:list
       (common-lisp:cons "Protocol"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'endpoint))
      (common-lisp:list
       (common-lisp:cons "Endpoint"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'topic-arn))
      (common-lisp:list
       (common-lisp:cons "TopicArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input subscription))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype subscription-attributes-map () 'common-lisp:hash-table)
 (common-lisp:defun |make-subscription-attributes-map|
                    (aws-sdk/generator/shape::key-values)
   (common-lisp:etypecase aws-sdk/generator/shape::key-values
     (common-lisp:hash-table aws-sdk/generator/shape::key-values)
     (common-lisp:list
      (alexandria:alist-hash-table aws-sdk/generator/shape::key-values)))))
(common-lisp:progn
 (common-lisp:defstruct
     (subscription-limit-exceeded-exception (:copier common-lisp:nil)
      (:conc-name "struct-shape-subscription-limit-exceeded-exception-"))
   (message common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'subscription-limit-exceeded-exception
                    'make-subscription-limit-exceeded-exception))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          subscription-limit-exceeded-exception))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          subscription-limit-exceeded-exception))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'message))
      (common-lisp:list
       (common-lisp:cons "message"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          subscription-limit-exceeded-exception))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype subscriptions-list ()
   '(trivial-types:proper-list subscription))
 (common-lisp:defun |make-subscriptions-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list subscription))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (throttled-exception (:copier common-lisp:nil)
      (:conc-name "struct-shape-throttled-exception-"))
   (message common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'throttled-exception 'make-throttled-exception))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input throttled-exception))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input throttled-exception))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'message))
      (common-lisp:list
       (common-lisp:cons "message"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input throttled-exception))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (topic (:copier common-lisp:nil) (:conc-name "struct-shape-topic-"))
   (topic-arn common-lisp:nil :type
    (common-lisp:or |topicARN| common-lisp:null)))
 (common-lisp:export (common-lisp:list 'topic 'make-topic))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input topic))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input topic))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'topic-arn))
      (common-lisp:list
       (common-lisp:cons "TopicArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input topic))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype topic-attributes-map () 'common-lisp:hash-table)
 (common-lisp:defun |make-topic-attributes-map|
                    (aws-sdk/generator/shape::key-values)
   (common-lisp:etypecase aws-sdk/generator/shape::key-values
     (common-lisp:hash-table aws-sdk/generator/shape::key-values)
     (common-lisp:list
      (alexandria:alist-hash-table aws-sdk/generator/shape::key-values)))))
(common-lisp:progn
 (common-lisp:defstruct
     (topic-limit-exceeded-exception (:copier common-lisp:nil)
      (:conc-name "struct-shape-topic-limit-exceeded-exception-"))
   (message common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'topic-limit-exceeded-exception
                    'make-topic-limit-exceeded-exception))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          topic-limit-exceeded-exception))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          topic-limit-exceeded-exception))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'message))
      (common-lisp:list
       (common-lisp:cons "message"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          topic-limit-exceeded-exception))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype topics-list () '(trivial-types:proper-list topic))
 (common-lisp:defun |make-topics-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list topic))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (unsubscribe-input (:copier common-lisp:nil)
      (:conc-name "struct-shape-unsubscribe-input-"))
   (subscription-arn (common-lisp:error ":subscription-arn is required") :type
    (common-lisp:or |subscriptionARN| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'unsubscribe-input 'make-unsubscribe-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input unsubscribe-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input unsubscribe-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'subscription-arn))
      (common-lisp:list
       (common-lisp:cons "SubscriptionArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input unsubscribe-input))
   common-lisp:nil))
(common-lisp:deftype |account| () 'common-lisp:string)
(common-lisp:deftype |action| () 'common-lisp:string)
(common-lisp:deftype |attributeName| () 'common-lisp:string)
(common-lisp:deftype |attributeValue| () 'common-lisp:string)
(common-lisp:deftype |authenticateOnUnsubscribe| () 'common-lisp:string)
common-lisp:nil
(common-lisp:deftype |delegate| () 'common-lisp:string)
(common-lisp:deftype |endpoint| () 'common-lisp:string)
(common-lisp:deftype |label| () 'common-lisp:string)
(common-lisp:deftype |message| () 'common-lisp:string)
(common-lisp:deftype |messageId| () 'common-lisp:string)
(common-lisp:deftype |messageStructure| () 'common-lisp:string)
(common-lisp:deftype |nextToken| () 'common-lisp:string)
(common-lisp:deftype |protocol| () 'common-lisp:string)
common-lisp:nil
(common-lisp:deftype |subject| () 'common-lisp:string)
(common-lisp:deftype |subscriptionARN| () 'common-lisp:string)
(common-lisp:deftype |token| () 'common-lisp:string)
(common-lisp:deftype |topicARN| () 'common-lisp:string)
(common-lisp:deftype |topicName| () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defun add-permission
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key topic-arn label awsaccount-id
                     action-name)
   (common-lisp:declare
    (common-lisp:ignorable topic-arn label awsaccount-id action-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-add-permission-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'sns-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "AddPermission"
                                                        "2010-03-31"))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'add-permission))
(common-lisp:progn
 (common-lisp:defun check-if-phone-number-is-opted-out
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key phone-number)
   (common-lisp:declare (common-lisp:ignorable phone-number))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-check-if-phone-number-is-opted-out-input
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'sns-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "CheckIfPhoneNumberIsOptedOut"
                                                        "2010-03-31"))
      common-lisp:nil "CheckIfPhoneNumberIsOptedOutResult")))
 (common-lisp:export 'check-if-phone-number-is-opted-out))
(common-lisp:progn
 (common-lisp:defun confirm-subscription
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key topic-arn token
                     authenticate-on-unsubscribe)
   (common-lisp:declare
    (common-lisp:ignorable topic-arn token authenticate-on-unsubscribe))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-confirm-subscription-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'sns-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "ConfirmSubscription"
                                                        "2010-03-31"))
      common-lisp:nil "ConfirmSubscriptionResult")))
 (common-lisp:export 'confirm-subscription))
(common-lisp:progn
 (common-lisp:defun create-platform-application
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key name platform attributes)
   (common-lisp:declare (common-lisp:ignorable name platform attributes))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-create-platform-application-input
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'sns-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "CreatePlatformApplication"
                                                        "2010-03-31"))
      common-lisp:nil "CreatePlatformApplicationResult")))
 (common-lisp:export 'create-platform-application))
(common-lisp:progn
 (common-lisp:defun create-platform-endpoint
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key platform-application-arn token
                     custom-user-data attributes)
   (common-lisp:declare
    (common-lisp:ignorable platform-application-arn token custom-user-data
     attributes))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-platform-endpoint-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'sns-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "CreatePlatformEndpoint"
                                                        "2010-03-31"))
      common-lisp:nil "CreatePlatformEndpointResult")))
 (common-lisp:export 'create-platform-endpoint))
(common-lisp:progn
 (common-lisp:defun create-topic
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key name)
   (common-lisp:declare (common-lisp:ignorable name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-topic-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'sns-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "CreateTopic"
                                                        "2010-03-31"))
      common-lisp:nil "CreateTopicResult")))
 (common-lisp:export 'create-topic))
(common-lisp:progn
 (common-lisp:defun delete-endpoint
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key endpoint-arn)
   (common-lisp:declare (common-lisp:ignorable endpoint-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-endpoint-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'sns-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "DeleteEndpoint"
                                                        "2010-03-31"))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'delete-endpoint))
(common-lisp:progn
 (common-lisp:defun delete-platform-application
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key platform-application-arn)
   (common-lisp:declare (common-lisp:ignorable platform-application-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-delete-platform-application-input
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'sns-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "DeletePlatformApplication"
                                                        "2010-03-31"))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'delete-platform-application))
(common-lisp:progn
 (common-lisp:defun delete-topic
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key topic-arn)
   (common-lisp:declare (common-lisp:ignorable topic-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-topic-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'sns-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "DeleteTopic"
                                                        "2010-03-31"))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'delete-topic))
(common-lisp:progn
 (common-lisp:defun get-endpoint-attributes
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key endpoint-arn)
   (common-lisp:declare (common-lisp:ignorable endpoint-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-endpoint-attributes-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'sns-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "GetEndpointAttributes"
                                                        "2010-03-31"))
      common-lisp:nil "GetEndpointAttributesResult")))
 (common-lisp:export 'get-endpoint-attributes))
(common-lisp:progn
 (common-lisp:defun get-platform-application-attributes
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key platform-application-arn)
   (common-lisp:declare (common-lisp:ignorable platform-application-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-get-platform-application-attributes-input
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'sns-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "GetPlatformApplicationAttributes"
                                                        "2010-03-31"))
      common-lisp:nil "GetPlatformApplicationAttributesResult")))
 (common-lisp:export 'get-platform-application-attributes))
(common-lisp:progn
 (common-lisp:defun get-smsattributes
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key attributes)
   (common-lisp:declare (common-lisp:ignorable attributes))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-smsattributes-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'sns-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "GetSMSAttributes"
                                                        "2010-03-31"))
      common-lisp:nil "GetSMSAttributesResult")))
 (common-lisp:export 'get-smsattributes))
(common-lisp:progn
 (common-lisp:defun get-subscription-attributes
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key subscription-arn)
   (common-lisp:declare (common-lisp:ignorable subscription-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-get-subscription-attributes-input
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'sns-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "GetSubscriptionAttributes"
                                                        "2010-03-31"))
      common-lisp:nil "GetSubscriptionAttributesResult")))
 (common-lisp:export 'get-subscription-attributes))
(common-lisp:progn
 (common-lisp:defun get-topic-attributes
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key topic-arn)
   (common-lisp:declare (common-lisp:ignorable topic-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-topic-attributes-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'sns-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "GetTopicAttributes"
                                                        "2010-03-31"))
      common-lisp:nil "GetTopicAttributesResult")))
 (common-lisp:export 'get-topic-attributes))
(common-lisp:progn
 (common-lisp:defun list-endpoints-by-platform-application
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key platform-application-arn next-token)
   (common-lisp:declare
    (common-lisp:ignorable platform-application-arn next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-list-endpoints-by-platform-application-input
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'sns-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "ListEndpointsByPlatformApplication"
                                                        "2010-03-31"))
      common-lisp:nil "ListEndpointsByPlatformApplicationResult")))
 (common-lisp:export 'list-endpoints-by-platform-application))
(common-lisp:progn
 (common-lisp:defun list-phone-numbers-opted-out
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key next-token)
   (common-lisp:declare (common-lisp:ignorable next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-list-phone-numbers-opted-out-input
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'sns-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "ListPhoneNumbersOptedOut"
                                                        "2010-03-31"))
      common-lisp:nil "ListPhoneNumbersOptedOutResult")))
 (common-lisp:export 'list-phone-numbers-opted-out))
(common-lisp:progn
 (common-lisp:defun list-platform-applications
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key next-token)
   (common-lisp:declare (common-lisp:ignorable next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-platform-applications-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'sns-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "ListPlatformApplications"
                                                        "2010-03-31"))
      common-lisp:nil "ListPlatformApplicationsResult")))
 (common-lisp:export 'list-platform-applications))
(common-lisp:progn
 (common-lisp:defun list-subscriptions
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key next-token)
   (common-lisp:declare (common-lisp:ignorable next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-subscriptions-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'sns-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "ListSubscriptions"
                                                        "2010-03-31"))
      common-lisp:nil "ListSubscriptionsResult")))
 (common-lisp:export 'list-subscriptions))
(common-lisp:progn
 (common-lisp:defun list-subscriptions-by-topic
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key topic-arn next-token)
   (common-lisp:declare (common-lisp:ignorable topic-arn next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-list-subscriptions-by-topic-input
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'sns-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "ListSubscriptionsByTopic"
                                                        "2010-03-31"))
      common-lisp:nil "ListSubscriptionsByTopicResult")))
 (common-lisp:export 'list-subscriptions-by-topic))
(common-lisp:progn
 (common-lisp:defun list-topics
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key next-token)
   (common-lisp:declare (common-lisp:ignorable next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-topics-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'sns-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/" "ListTopics"
                                                        "2010-03-31"))
      common-lisp:nil "ListTopicsResult")))
 (common-lisp:export 'list-topics))
(common-lisp:progn
 (common-lisp:defun opt-in-phone-number
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key phone-number)
   (common-lisp:declare (common-lisp:ignorable phone-number))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-opt-in-phone-number-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'sns-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "OptInPhoneNumber"
                                                        "2010-03-31"))
      common-lisp:nil "OptInPhoneNumberResult")))
 (common-lisp:export 'opt-in-phone-number))
(common-lisp:progn
 (common-lisp:defun publish
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key topic-arn target-arn phone-number message
                     subject message-structure message-attributes)
   (common-lisp:declare
    (common-lisp:ignorable topic-arn target-arn phone-number message subject
     message-structure message-attributes))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-publish-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'sns-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/" "Publish"
                                                        "2010-03-31"))
      common-lisp:nil "PublishResult")))
 (common-lisp:export 'publish))
(common-lisp:progn
 (common-lisp:defun remove-permission
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key topic-arn label)
   (common-lisp:declare (common-lisp:ignorable topic-arn label))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-remove-permission-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'sns-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "RemovePermission"
                                                        "2010-03-31"))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'remove-permission))
(common-lisp:progn
 (common-lisp:defun set-endpoint-attributes
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key endpoint-arn attributes)
   (common-lisp:declare (common-lisp:ignorable endpoint-arn attributes))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-set-endpoint-attributes-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'sns-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "SetEndpointAttributes"
                                                        "2010-03-31"))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'set-endpoint-attributes))
(common-lisp:progn
 (common-lisp:defun set-platform-application-attributes
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key platform-application-arn attributes)
   (common-lisp:declare
    (common-lisp:ignorable platform-application-arn attributes))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-set-platform-application-attributes-input
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'sns-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "SetPlatformApplicationAttributes"
                                                        "2010-03-31"))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'set-platform-application-attributes))
(common-lisp:progn
 (common-lisp:defun set-smsattributes
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key attributes)
   (common-lisp:declare (common-lisp:ignorable attributes))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-set-smsattributes-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'sns-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "SetSMSAttributes"
                                                        "2010-03-31"))
      common-lisp:nil "SetSMSAttributesResult")))
 (common-lisp:export 'set-smsattributes))
(common-lisp:progn
 (common-lisp:defun set-subscription-attributes
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key subscription-arn attribute-name
                     attribute-value)
   (common-lisp:declare
    (common-lisp:ignorable subscription-arn attribute-name attribute-value))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-set-subscription-attributes-input
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'sns-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "SetSubscriptionAttributes"
                                                        "2010-03-31"))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'set-subscription-attributes))
(common-lisp:progn
 (common-lisp:defun set-topic-attributes
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key topic-arn attribute-name attribute-value)
   (common-lisp:declare
    (common-lisp:ignorable topic-arn attribute-name attribute-value))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-set-topic-attributes-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'sns-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "SetTopicAttributes"
                                                        "2010-03-31"))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'set-topic-attributes))
(common-lisp:progn
 (common-lisp:defun subscribe
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key topic-arn protocol endpoint)
   (common-lisp:declare (common-lisp:ignorable topic-arn protocol endpoint))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-subscribe-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'sns-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/" "Subscribe"
                                                        "2010-03-31"))
      common-lisp:nil "SubscribeResult")))
 (common-lisp:export 'subscribe))
(common-lisp:progn
 (common-lisp:defun unsubscribe
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key subscription-arn)
   (common-lisp:declare (common-lisp:ignorable subscription-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-unsubscribe-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'sns-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "Unsubscribe"
                                                        "2010-03-31"))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'unsubscribe))
