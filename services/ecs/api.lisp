;; DO NOT EDIT: File is generated by AWS-SDK/GENERATOR.

(common-lisp:defpackage #:aws-sdk/services/ecs/api
  (:use)
  (:nicknames #:aws/ecs)
  (:import-from #:aws-sdk/generator/shape)
  (:import-from #:aws-sdk/generator/operation)
  (:import-from #:aws-sdk/api)
  (:import-from #:aws-sdk/request))
(common-lisp:in-package #:aws-sdk/services/ecs/api)
(common-lisp:progn
 (common-lisp:defclass ecs-request (aws-sdk/request:request) common-lisp:nil
                       (:default-initargs :service "ecs"))
 (common-lisp:export 'ecs-request))
(common-lisp:deftype agent-update-status () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (attribute (:copier common-lisp:nil)
      (:conc-name "struct-shape-attribute-"))
   (name (common-lisp:error ":name is required") :type
    (common-lisp:or string common-lisp:null))
   (value common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (target-type common-lisp:nil :type
    (common-lisp:or target-type common-lisp:null))
   (target-id common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'attribute 'make-attribute))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input attribute))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input attribute))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'value))
      (common-lisp:list
       (common-lisp:cons "value"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'target-type))
      (common-lisp:list
       (common-lisp:cons "targetType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'target-id))
      (common-lisp:list
       (common-lisp:cons "targetId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input attribute))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (attribute-limit-exceeded-exception (:copier common-lisp:nil)
      (:conc-name "struct-shape-attribute-limit-exceeded-exception-")))
 (common-lisp:export
  (common-lisp:list 'attribute-limit-exceeded-exception
                    'make-attribute-limit-exceeded-exception))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          attribute-limit-exceeded-exception))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          attribute-limit-exceeded-exception))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          attribute-limit-exceeded-exception))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype attributes () '(trivial-types:proper-list attribute))
 (common-lisp:defun |make-attributes|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list attribute))
   aws-sdk/generator/shape::members))
(common-lisp:deftype boolean () 'common-lisp:boolean)
(common-lisp:deftype boxed-boolean () 'common-lisp:boolean)
(common-lisp:deftype boxed-integer () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:defstruct
     (client-exception (:copier common-lisp:nil)
      (:conc-name "struct-shape-client-exception-"))
   (message common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'client-exception 'make-client-exception))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input client-exception))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input client-exception))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'message))
      (common-lisp:list
       (common-lisp:cons "message"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input client-exception))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (cluster (:copier common-lisp:nil) (:conc-name "struct-shape-cluster-"))
   (cluster-arn common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (cluster-name common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (status common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (registered-container-instances-count common-lisp:nil :type
    (common-lisp:or integer common-lisp:null))
   (running-tasks-count common-lisp:nil :type
    (common-lisp:or integer common-lisp:null))
   (pending-tasks-count common-lisp:nil :type
    (common-lisp:or integer common-lisp:null))
   (active-services-count common-lisp:nil :type
    (common-lisp:or integer common-lisp:null)))
 (common-lisp:export (common-lisp:list 'cluster 'make-cluster))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input cluster))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input cluster))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'cluster-arn))
      (common-lisp:list
       (common-lisp:cons "clusterArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'cluster-name))
      (common-lisp:list
       (common-lisp:cons "clusterName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'registered-container-instances-count))
      (common-lisp:list
       (common-lisp:cons "registeredContainerInstancesCount"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'running-tasks-count))
      (common-lisp:list
       (common-lisp:cons "runningTasksCount"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'pending-tasks-count))
      (common-lisp:list
       (common-lisp:cons "pendingTasksCount"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'active-services-count))
      (common-lisp:list
       (common-lisp:cons "activeServicesCount"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input cluster))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (cluster-contains-container-instances-exception (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-cluster-contains-container-instances-exception-")))
 (common-lisp:export
  (common-lisp:list 'cluster-contains-container-instances-exception
                    'make-cluster-contains-container-instances-exception))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          cluster-contains-container-instances-exception))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          cluster-contains-container-instances-exception))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          cluster-contains-container-instances-exception))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (cluster-contains-services-exception (:copier common-lisp:nil)
      (:conc-name "struct-shape-cluster-contains-services-exception-")))
 (common-lisp:export
  (common-lisp:list 'cluster-contains-services-exception
                    'make-cluster-contains-services-exception))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          cluster-contains-services-exception))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          cluster-contains-services-exception))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          cluster-contains-services-exception))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (cluster-not-found-exception (:copier common-lisp:nil)
      (:conc-name "struct-shape-cluster-not-found-exception-")))
 (common-lisp:export
  (common-lisp:list 'cluster-not-found-exception
                    'make-cluster-not-found-exception))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          cluster-not-found-exception))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          cluster-not-found-exception))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          cluster-not-found-exception))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype clusters () '(trivial-types:proper-list cluster))
 (common-lisp:defun |make-clusters|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list cluster))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (container (:copier common-lisp:nil)
      (:conc-name "struct-shape-container-"))
   (container-arn common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (task-arn common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (name common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (last-status common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (exit-code common-lisp:nil :type
    (common-lisp:or boxed-integer common-lisp:null))
   (reason common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (network-bindings common-lisp:nil :type
    (common-lisp:or network-bindings common-lisp:null)))
 (common-lisp:export (common-lisp:list 'container 'make-container))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input container))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input container))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'container-arn))
      (common-lisp:list
       (common-lisp:cons "containerArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'task-arn))
      (common-lisp:list
       (common-lisp:cons "taskArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'last-status))
      (common-lisp:list
       (common-lisp:cons "lastStatus"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'exit-code))
      (common-lisp:list
       (common-lisp:cons "exitCode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'reason))
      (common-lisp:list
       (common-lisp:cons "reason"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'network-bindings))
      (common-lisp:list
       (common-lisp:cons "networkBindings"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input container))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (container-definition (:copier common-lisp:nil)
      (:conc-name "struct-shape-container-definition-"))
   (name common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (image common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (cpu common-lisp:nil :type (common-lisp:or integer common-lisp:null))
   (memory common-lisp:nil :type
    (common-lisp:or boxed-integer common-lisp:null))
   (memory-reservation common-lisp:nil :type
    (common-lisp:or boxed-integer common-lisp:null))
   (links common-lisp:nil :type (common-lisp:or string-list common-lisp:null))
   (port-mappings common-lisp:nil :type
    (common-lisp:or port-mapping-list common-lisp:null))
   (essential common-lisp:nil :type
    (common-lisp:or boxed-boolean common-lisp:null))
   (entry-point common-lisp:nil :type
    (common-lisp:or string-list common-lisp:null))
   (command common-lisp:nil :type
    (common-lisp:or string-list common-lisp:null))
   (environment common-lisp:nil :type
    (common-lisp:or environment-variables common-lisp:null))
   (mount-points common-lisp:nil :type
    (common-lisp:or mount-point-list common-lisp:null))
   (volumes-from common-lisp:nil :type
    (common-lisp:or volume-from-list common-lisp:null))
   (hostname common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (user common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (working-directory common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (disable-networking common-lisp:nil :type
    (common-lisp:or boxed-boolean common-lisp:null))
   (privileged common-lisp:nil :type
    (common-lisp:or boxed-boolean common-lisp:null))
   (readonly-root-filesystem common-lisp:nil :type
    (common-lisp:or boxed-boolean common-lisp:null))
   (dns-servers common-lisp:nil :type
    (common-lisp:or string-list common-lisp:null))
   (dns-search-domains common-lisp:nil :type
    (common-lisp:or string-list common-lisp:null))
   (extra-hosts common-lisp:nil :type
    (common-lisp:or host-entry-list common-lisp:null))
   (docker-security-options common-lisp:nil :type
    (common-lisp:or string-list common-lisp:null))
   (docker-labels common-lisp:nil :type
    (common-lisp:or docker-labels-map common-lisp:null))
   (ulimits common-lisp:nil :type
    (common-lisp:or ulimit-list common-lisp:null))
   (log-configuration common-lisp:nil :type
    (common-lisp:or log-configuration common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'container-definition 'make-container-definition))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input container-definition))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input container-definition))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'image))
      (common-lisp:list
       (common-lisp:cons "image"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'cpu))
      (common-lisp:list
       (common-lisp:cons "cpu"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'memory))
      (common-lisp:list
       (common-lisp:cons "memory"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'memory-reservation))
      (common-lisp:list
       (common-lisp:cons "memoryReservation"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'links))
      (common-lisp:list
       (common-lisp:cons "links"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'port-mappings))
      (common-lisp:list
       (common-lisp:cons "portMappings"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'essential))
      (common-lisp:list
       (common-lisp:cons "essential"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'entry-point))
      (common-lisp:list
       (common-lisp:cons "entryPoint"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'command))
      (common-lisp:list
       (common-lisp:cons "command"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'environment))
      (common-lisp:list
       (common-lisp:cons "environment"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'mount-points))
      (common-lisp:list
       (common-lisp:cons "mountPoints"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'volumes-from))
      (common-lisp:list
       (common-lisp:cons "volumesFrom"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'hostname))
      (common-lisp:list
       (common-lisp:cons "hostname"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'user))
      (common-lisp:list
       (common-lisp:cons "user"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'working-directory))
      (common-lisp:list
       (common-lisp:cons "workingDirectory"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'disable-networking))
      (common-lisp:list
       (common-lisp:cons "disableNetworking"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'privileged))
      (common-lisp:list
       (common-lisp:cons "privileged"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'readonly-root-filesystem))
      (common-lisp:list
       (common-lisp:cons "readonlyRootFilesystem"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'dns-servers))
      (common-lisp:list
       (common-lisp:cons "dnsServers"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'dns-search-domains))
      (common-lisp:list
       (common-lisp:cons "dnsSearchDomains"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'extra-hosts))
      (common-lisp:list
       (common-lisp:cons "extraHosts"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'docker-security-options))
      (common-lisp:list
       (common-lisp:cons "dockerSecurityOptions"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'docker-labels))
      (common-lisp:list
       (common-lisp:cons "dockerLabels"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'ulimits))
      (common-lisp:list
       (common-lisp:cons "ulimits"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'log-configuration))
      (common-lisp:list
       (common-lisp:cons "logConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input container-definition))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype container-definitions ()
   '(trivial-types:proper-list container-definition))
 (common-lisp:defun |make-container-definitions|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list container-definition))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (container-instance (:copier common-lisp:nil)
      (:conc-name "struct-shape-container-instance-"))
   (container-instance-arn common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (ec2instance-id common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (version common-lisp:nil :type (common-lisp:or long common-lisp:null))
   (version-info common-lisp:nil :type
    (common-lisp:or version-info common-lisp:null))
   (remaining-resources common-lisp:nil :type
    (common-lisp:or resources common-lisp:null))
   (registered-resources common-lisp:nil :type
    (common-lisp:or resources common-lisp:null))
   (status common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (agent-connected common-lisp:nil :type
    (common-lisp:or boolean common-lisp:null))
   (running-tasks-count common-lisp:nil :type
    (common-lisp:or integer common-lisp:null))
   (pending-tasks-count common-lisp:nil :type
    (common-lisp:or integer common-lisp:null))
   (agent-update-status common-lisp:nil :type
    (common-lisp:or agent-update-status common-lisp:null))
   (attributes common-lisp:nil :type
    (common-lisp:or attributes common-lisp:null))
   (registered-at common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'container-instance 'make-container-instance))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input container-instance))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input container-instance))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'container-instance-arn))
      (common-lisp:list
       (common-lisp:cons "containerInstanceArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'ec2instance-id))
      (common-lisp:list
       (common-lisp:cons "ec2InstanceId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'version))
      (common-lisp:list
       (common-lisp:cons "version"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'version-info))
      (common-lisp:list
       (common-lisp:cons "versionInfo"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'remaining-resources))
      (common-lisp:list
       (common-lisp:cons "remainingResources"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'registered-resources))
      (common-lisp:list
       (common-lisp:cons "registeredResources"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'agent-connected))
      (common-lisp:list
       (common-lisp:cons "agentConnected"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'running-tasks-count))
      (common-lisp:list
       (common-lisp:cons "runningTasksCount"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'pending-tasks-count))
      (common-lisp:list
       (common-lisp:cons "pendingTasksCount"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'agent-update-status))
      (common-lisp:list
       (common-lisp:cons "agentUpdateStatus"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'attributes))
      (common-lisp:list
       (common-lisp:cons "attributes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'registered-at))
      (common-lisp:list
       (common-lisp:cons "registeredAt"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input container-instance))
   common-lisp:nil))
(common-lisp:deftype container-instance-status () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype container-instances ()
   '(trivial-types:proper-list container-instance))
 (common-lisp:defun |make-container-instances|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list container-instance))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (container-override (:copier common-lisp:nil)
      (:conc-name "struct-shape-container-override-"))
   (name common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (command common-lisp:nil :type
    (common-lisp:or string-list common-lisp:null))
   (environment common-lisp:nil :type
    (common-lisp:or environment-variables common-lisp:null))
   (cpu common-lisp:nil :type (common-lisp:or boxed-integer common-lisp:null))
   (memory common-lisp:nil :type
    (common-lisp:or boxed-integer common-lisp:null))
   (memory-reservation common-lisp:nil :type
    (common-lisp:or boxed-integer common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'container-override 'make-container-override))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input container-override))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input container-override))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'command))
      (common-lisp:list
       (common-lisp:cons "command"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'environment))
      (common-lisp:list
       (common-lisp:cons "environment"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'cpu))
      (common-lisp:list
       (common-lisp:cons "cpu"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'memory))
      (common-lisp:list
       (common-lisp:cons "memory"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'memory-reservation))
      (common-lisp:list
       (common-lisp:cons "memoryReservation"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input container-override))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype container-overrides ()
   '(trivial-types:proper-list container-override))
 (common-lisp:defun |make-container-overrides|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list container-override))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype containers () '(trivial-types:proper-list container))
 (common-lisp:defun |make-containers|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list container))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (create-cluster-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-cluster-request-"))
   (cluster-name common-lisp:nil :type
    (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-cluster-request 'make-create-cluster-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-cluster-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-cluster-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'cluster-name))
      (common-lisp:list
       (common-lisp:cons "clusterName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-cluster-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-cluster-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-cluster-response-"))
   (cluster common-lisp:nil :type (common-lisp:or cluster common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-cluster-response 'make-create-cluster-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-cluster-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-cluster-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'cluster))
      (common-lisp:list
       (common-lisp:cons "cluster"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-cluster-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-service-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-service-request-"))
   (cluster common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (service-name (common-lisp:error ":servicename is required") :type
    (common-lisp:or string common-lisp:null))
   (task-definition (common-lisp:error ":taskdefinition is required") :type
    (common-lisp:or string common-lisp:null))
   (load-balancers common-lisp:nil :type
    (common-lisp:or load-balancers common-lisp:null))
   (desired-count (common-lisp:error ":desiredcount is required") :type
    (common-lisp:or boxed-integer common-lisp:null))
   (client-token common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (role common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (deployment-configuration common-lisp:nil :type
    (common-lisp:or deployment-configuration common-lisp:null))
   (placement-constraints common-lisp:nil :type
    (common-lisp:or placement-constraints common-lisp:null))
   (placement-strategy common-lisp:nil :type
    (common-lisp:or placement-strategies common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-service-request 'make-create-service-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-service-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-service-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'cluster))
      (common-lisp:list
       (common-lisp:cons "cluster"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'service-name))
      (common-lisp:list
       (common-lisp:cons "serviceName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'task-definition))
      (common-lisp:list
       (common-lisp:cons "taskDefinition"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'load-balancers))
      (common-lisp:list
       (common-lisp:cons "loadBalancers"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'desired-count))
      (common-lisp:list
       (common-lisp:cons "desiredCount"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'client-token))
      (common-lisp:list
       (common-lisp:cons "clientToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'role))
      (common-lisp:list
       (common-lisp:cons "role"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'deployment-configuration))
      (common-lisp:list
       (common-lisp:cons "deploymentConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'placement-constraints))
      (common-lisp:list
       (common-lisp:cons "placementConstraints"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'placement-strategy))
      (common-lisp:list
       (common-lisp:cons "placementStrategy"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-service-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-service-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-service-response-"))
   (service common-lisp:nil :type (common-lisp:or service common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-service-response 'make-create-service-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-service-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-service-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'service))
      (common-lisp:list
       (common-lisp:cons "service"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-service-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-attributes-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-attributes-request-"))
   (cluster common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (attributes (common-lisp:error ":attributes is required") :type
    (common-lisp:or attributes common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-attributes-request
                    'make-delete-attributes-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-attributes-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-attributes-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'cluster))
      (common-lisp:list
       (common-lisp:cons "cluster"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'attributes))
      (common-lisp:list
       (common-lisp:cons "attributes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-attributes-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-attributes-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-attributes-response-"))
   (attributes common-lisp:nil :type
    (common-lisp:or attributes common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-attributes-response
                    'make-delete-attributes-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-attributes-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-attributes-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'attributes))
      (common-lisp:list
       (common-lisp:cons "attributes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-attributes-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-cluster-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-cluster-request-"))
   (cluster (common-lisp:error ":cluster is required") :type
    (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-cluster-request 'make-delete-cluster-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-cluster-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-cluster-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'cluster))
      (common-lisp:list
       (common-lisp:cons "cluster"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-cluster-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-cluster-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-cluster-response-"))
   (cluster common-lisp:nil :type (common-lisp:or cluster common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-cluster-response 'make-delete-cluster-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-cluster-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-cluster-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'cluster))
      (common-lisp:list
       (common-lisp:cons "cluster"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-cluster-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-service-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-service-request-"))
   (cluster common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (service (common-lisp:error ":service is required") :type
    (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-service-request 'make-delete-service-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-service-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-service-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'cluster))
      (common-lisp:list
       (common-lisp:cons "cluster"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'service))
      (common-lisp:list
       (common-lisp:cons "service"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-service-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-service-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-service-response-"))
   (service common-lisp:nil :type (common-lisp:or service common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-service-response 'make-delete-service-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-service-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-service-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'service))
      (common-lisp:list
       (common-lisp:cons "service"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-service-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (deployment (:copier common-lisp:nil)
      (:conc-name "struct-shape-deployment-"))
   (id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (status common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (task-definition common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (desired-count common-lisp:nil :type
    (common-lisp:or integer common-lisp:null))
   (pending-count common-lisp:nil :type
    (common-lisp:or integer common-lisp:null))
   (running-count common-lisp:nil :type
    (common-lisp:or integer common-lisp:null))
   (created-at common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null))
   (updated-at common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null)))
 (common-lisp:export (common-lisp:list 'deployment 'make-deployment))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input deployment))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input deployment))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'task-definition))
      (common-lisp:list
       (common-lisp:cons "taskDefinition"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'desired-count))
      (common-lisp:list
       (common-lisp:cons "desiredCount"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'pending-count))
      (common-lisp:list
       (common-lisp:cons "pendingCount"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'running-count))
      (common-lisp:list
       (common-lisp:cons "runningCount"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created-at))
      (common-lisp:list
       (common-lisp:cons "createdAt"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'updated-at))
      (common-lisp:list
       (common-lisp:cons "updatedAt"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input deployment))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (deployment-configuration (:copier common-lisp:nil)
      (:conc-name "struct-shape-deployment-configuration-"))
   (maximum-percent common-lisp:nil :type
    (common-lisp:or boxed-integer common-lisp:null))
   (minimum-healthy-percent common-lisp:nil :type
    (common-lisp:or boxed-integer common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'deployment-configuration 'make-deployment-configuration))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          deployment-configuration))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          deployment-configuration))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'maximum-percent))
      (common-lisp:list
       (common-lisp:cons "maximumPercent"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'minimum-healthy-percent))
      (common-lisp:list
       (common-lisp:cons "minimumHealthyPercent"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          deployment-configuration))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype deployments () '(trivial-types:proper-list deployment))
 (common-lisp:defun |make-deployments|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list deployment))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (deregister-container-instance-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-deregister-container-instance-request-"))
   (cluster common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (container-instance (common-lisp:error ":containerinstance is required")
    :type (common-lisp:or string common-lisp:null))
   (force common-lisp:nil :type
    (common-lisp:or boxed-boolean common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'deregister-container-instance-request
                    'make-deregister-container-instance-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          deregister-container-instance-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          deregister-container-instance-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'cluster))
      (common-lisp:list
       (common-lisp:cons "cluster"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'container-instance))
      (common-lisp:list
       (common-lisp:cons "containerInstance"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'force))
      (common-lisp:list
       (common-lisp:cons "force"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          deregister-container-instance-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (deregister-container-instance-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-deregister-container-instance-response-"))
   (container-instance common-lisp:nil :type
    (common-lisp:or container-instance common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'deregister-container-instance-response
                    'make-deregister-container-instance-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          deregister-container-instance-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          deregister-container-instance-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'container-instance))
      (common-lisp:list
       (common-lisp:cons "containerInstance"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          deregister-container-instance-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (deregister-task-definition-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-deregister-task-definition-request-"))
   (task-definition (common-lisp:error ":taskdefinition is required") :type
    (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'deregister-task-definition-request
                    'make-deregister-task-definition-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          deregister-task-definition-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          deregister-task-definition-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'task-definition))
      (common-lisp:list
       (common-lisp:cons "taskDefinition"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          deregister-task-definition-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (deregister-task-definition-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-deregister-task-definition-response-"))
   (task-definition common-lisp:nil :type
    (common-lisp:or task-definition common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'deregister-task-definition-response
                    'make-deregister-task-definition-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          deregister-task-definition-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          deregister-task-definition-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'task-definition))
      (common-lisp:list
       (common-lisp:cons "taskDefinition"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          deregister-task-definition-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-clusters-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-describe-clusters-request-"))
   (clusters common-lisp:nil :type
    (common-lisp:or string-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-clusters-request
                    'make-describe-clusters-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-clusters-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-clusters-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'clusters))
      (common-lisp:list
       (common-lisp:cons "clusters"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-clusters-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-clusters-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-describe-clusters-response-"))
   (clusters common-lisp:nil :type (common-lisp:or clusters common-lisp:null))
   (failures common-lisp:nil :type (common-lisp:or failures common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-clusters-response
                    'make-describe-clusters-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-clusters-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-clusters-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'clusters))
      (common-lisp:list
       (common-lisp:cons "clusters"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'failures))
      (common-lisp:list
       (common-lisp:cons "failures"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-clusters-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-container-instances-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-describe-container-instances-request-"))
   (cluster common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (container-instances (common-lisp:error ":containerinstances is required")
    :type (common-lisp:or string-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-container-instances-request
                    'make-describe-container-instances-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-container-instances-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-container-instances-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'cluster))
      (common-lisp:list
       (common-lisp:cons "cluster"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'container-instances))
      (common-lisp:list
       (common-lisp:cons "containerInstances"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-container-instances-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-container-instances-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-describe-container-instances-response-"))
   (container-instances common-lisp:nil :type
    (common-lisp:or container-instances common-lisp:null))
   (failures common-lisp:nil :type (common-lisp:or failures common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-container-instances-response
                    'make-describe-container-instances-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-container-instances-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-container-instances-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'container-instances))
      (common-lisp:list
       (common-lisp:cons "containerInstances"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'failures))
      (common-lisp:list
       (common-lisp:cons "failures"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-container-instances-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-services-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-describe-services-request-"))
   (cluster common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (services (common-lisp:error ":services is required") :type
    (common-lisp:or string-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-services-request
                    'make-describe-services-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-services-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-services-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'cluster))
      (common-lisp:list
       (common-lisp:cons "cluster"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'services))
      (common-lisp:list
       (common-lisp:cons "services"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-services-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-services-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-describe-services-response-"))
   (services common-lisp:nil :type (common-lisp:or services common-lisp:null))
   (failures common-lisp:nil :type (common-lisp:or failures common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-services-response
                    'make-describe-services-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-services-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-services-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'services))
      (common-lisp:list
       (common-lisp:cons "services"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'failures))
      (common-lisp:list
       (common-lisp:cons "failures"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-services-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-task-definition-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-describe-task-definition-request-"))
   (task-definition (common-lisp:error ":taskdefinition is required") :type
    (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-task-definition-request
                    'make-describe-task-definition-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-task-definition-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-task-definition-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'task-definition))
      (common-lisp:list
       (common-lisp:cons "taskDefinition"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-task-definition-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-task-definition-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-describe-task-definition-response-"))
   (task-definition common-lisp:nil :type
    (common-lisp:or task-definition common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-task-definition-response
                    'make-describe-task-definition-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-task-definition-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-task-definition-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'task-definition))
      (common-lisp:list
       (common-lisp:cons "taskDefinition"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-task-definition-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-tasks-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-describe-tasks-request-"))
   (cluster common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (tasks (common-lisp:error ":tasks is required") :type
    (common-lisp:or string-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-tasks-request 'make-describe-tasks-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-tasks-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-tasks-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'cluster))
      (common-lisp:list
       (common-lisp:cons "cluster"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tasks))
      (common-lisp:list
       (common-lisp:cons "tasks"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-tasks-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-tasks-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-describe-tasks-response-"))
   (tasks common-lisp:nil :type (common-lisp:or tasks common-lisp:null))
   (failures common-lisp:nil :type (common-lisp:or failures common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-tasks-response 'make-describe-tasks-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-tasks-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-tasks-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tasks))
      (common-lisp:list
       (common-lisp:cons "tasks"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'failures))
      (common-lisp:list
       (common-lisp:cons "failures"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-tasks-response))
   common-lisp:nil))
(common-lisp:deftype desired-status () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (discover-poll-endpoint-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-discover-poll-endpoint-request-"))
   (container-instance common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (cluster common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'discover-poll-endpoint-request
                    'make-discover-poll-endpoint-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          discover-poll-endpoint-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          discover-poll-endpoint-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'container-instance))
      (common-lisp:list
       (common-lisp:cons "containerInstance"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'cluster))
      (common-lisp:list
       (common-lisp:cons "cluster"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          discover-poll-endpoint-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (discover-poll-endpoint-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-discover-poll-endpoint-response-"))
   (endpoint common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (telemetry-endpoint common-lisp:nil :type
    (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'discover-poll-endpoint-response
                    'make-discover-poll-endpoint-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          discover-poll-endpoint-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          discover-poll-endpoint-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'endpoint))
      (common-lisp:list
       (common-lisp:cons "endpoint"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'telemetry-endpoint))
      (common-lisp:list
       (common-lisp:cons "telemetryEndpoint"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          discover-poll-endpoint-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype docker-labels-map () 'common-lisp:hash-table)
 (common-lisp:defun |make-docker-labels-map|
                    (aws-sdk/generator/shape::key-values)
   (common-lisp:etypecase aws-sdk/generator/shape::key-values
     (common-lisp:hash-table aws-sdk/generator/shape::key-values)
     (common-lisp:list
      (alexandria:alist-hash-table aws-sdk/generator/shape::key-values)))))
(common-lisp:deftype double () 'common-lisp:double-float)
(common-lisp:progn
 (common-lisp:deftype environment-variables ()
   '(trivial-types:proper-list key-value-pair))
 (common-lisp:defun |make-environment-variables|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list key-value-pair))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (failure (:copier common-lisp:nil) (:conc-name "struct-shape-failure-"))
   (arn common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (reason common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'failure 'make-failure))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input failure))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input failure))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'reason))
      (common-lisp:list
       (common-lisp:cons "reason"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input failure))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype failures () '(trivial-types:proper-list failure))
 (common-lisp:defun |make-failures|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list failure))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (host-entry (:copier common-lisp:nil)
      (:conc-name "struct-shape-host-entry-"))
   (hostname (common-lisp:error ":hostname is required") :type
    (common-lisp:or string common-lisp:null))
   (ip-address (common-lisp:error ":ipaddress is required") :type
    (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'host-entry 'make-host-entry))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input host-entry))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input host-entry))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'hostname))
      (common-lisp:list
       (common-lisp:cons "hostname"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'ip-address))
      (common-lisp:list
       (common-lisp:cons "ipAddress"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input host-entry))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype host-entry-list ()
   '(trivial-types:proper-list host-entry))
 (common-lisp:defun |make-host-entry-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list host-entry))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (host-volume-properties (:copier common-lisp:nil)
      (:conc-name "struct-shape-host-volume-properties-"))
   (source-path common-lisp:nil :type
    (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'host-volume-properties 'make-host-volume-properties))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          host-volume-properties))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          host-volume-properties))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'source-path))
      (common-lisp:list
       (common-lisp:cons "sourcePath"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          host-volume-properties))
   common-lisp:nil))
(common-lisp:deftype integer () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:defstruct
     (invalid-parameter-exception (:copier common-lisp:nil)
      (:conc-name "struct-shape-invalid-parameter-exception-")))
 (common-lisp:export
  (common-lisp:list 'invalid-parameter-exception
                    'make-invalid-parameter-exception))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          invalid-parameter-exception))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          invalid-parameter-exception))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          invalid-parameter-exception))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (key-value-pair (:copier common-lisp:nil)
      (:conc-name "struct-shape-key-value-pair-"))
   (name common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (value common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'key-value-pair 'make-key-value-pair))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input key-value-pair))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input key-value-pair))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'value))
      (common-lisp:list
       (common-lisp:cons "value"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input key-value-pair))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-attributes-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-attributes-request-"))
   (cluster common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (target-type (common-lisp:error ":targettype is required") :type
    (common-lisp:or target-type common-lisp:null))
   (attribute-name common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (attribute-value common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or boxed-integer common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-attributes-request 'make-list-attributes-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-attributes-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-attributes-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'cluster))
      (common-lisp:list
       (common-lisp:cons "cluster"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'target-type))
      (common-lisp:list
       (common-lisp:cons "targetType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'attribute-name))
      (common-lisp:list
       (common-lisp:cons "attributeName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'attribute-value))
      (common-lisp:list
       (common-lisp:cons "attributeValue"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "nextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-results))
      (common-lisp:list
       (common-lisp:cons "maxResults"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-attributes-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-attributes-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-attributes-response-"))
   (attributes common-lisp:nil :type
    (common-lisp:or attributes common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-attributes-response 'make-list-attributes-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-attributes-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-attributes-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'attributes))
      (common-lisp:list
       (common-lisp:cons "attributes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "nextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-attributes-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-clusters-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-clusters-request-"))
   (next-token common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or boxed-integer common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-clusters-request 'make-list-clusters-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-clusters-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-clusters-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "nextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-results))
      (common-lisp:list
       (common-lisp:cons "maxResults"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-clusters-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-clusters-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-clusters-response-"))
   (cluster-arns common-lisp:nil :type
    (common-lisp:or string-list common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-clusters-response 'make-list-clusters-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-clusters-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-clusters-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'cluster-arns))
      (common-lisp:list
       (common-lisp:cons "clusterArns"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "nextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-clusters-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-container-instances-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-container-instances-request-"))
   (cluster common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (filter common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or boxed-integer common-lisp:null))
   (status common-lisp:nil :type
    (common-lisp:or container-instance-status common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-container-instances-request
                    'make-list-container-instances-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-container-instances-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-container-instances-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'cluster))
      (common-lisp:list
       (common-lisp:cons "cluster"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'filter))
      (common-lisp:list
       (common-lisp:cons "filter"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "nextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-results))
      (common-lisp:list
       (common-lisp:cons "maxResults"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-container-instances-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-container-instances-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-container-instances-response-"))
   (container-instance-arns common-lisp:nil :type
    (common-lisp:or string-list common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-container-instances-response
                    'make-list-container-instances-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-container-instances-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-container-instances-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'container-instance-arns))
      (common-lisp:list
       (common-lisp:cons "containerInstanceArns"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "nextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-container-instances-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-services-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-services-request-"))
   (cluster common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or boxed-integer common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-services-request 'make-list-services-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-services-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-services-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'cluster))
      (common-lisp:list
       (common-lisp:cons "cluster"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "nextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-results))
      (common-lisp:list
       (common-lisp:cons "maxResults"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-services-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-services-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-services-response-"))
   (service-arns common-lisp:nil :type
    (common-lisp:or string-list common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-services-response 'make-list-services-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-services-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-services-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'service-arns))
      (common-lisp:list
       (common-lisp:cons "serviceArns"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "nextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-services-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-task-definition-families-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-task-definition-families-request-"))
   (family-prefix common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (status common-lisp:nil :type
    (common-lisp:or task-definition-family-status common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or boxed-integer common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-task-definition-families-request
                    'make-list-task-definition-families-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-task-definition-families-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-task-definition-families-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'family-prefix))
      (common-lisp:list
       (common-lisp:cons "familyPrefix"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "nextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-results))
      (common-lisp:list
       (common-lisp:cons "maxResults"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-task-definition-families-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-task-definition-families-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-task-definition-families-response-"))
   (families common-lisp:nil :type
    (common-lisp:or string-list common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-task-definition-families-response
                    'make-list-task-definition-families-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-task-definition-families-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-task-definition-families-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'families))
      (common-lisp:list
       (common-lisp:cons "families"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "nextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-task-definition-families-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-task-definitions-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-task-definitions-request-"))
   (family-prefix common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (status common-lisp:nil :type
    (common-lisp:or task-definition-status common-lisp:null))
   (sort common-lisp:nil :type (common-lisp:or sort-order common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or boxed-integer common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-task-definitions-request
                    'make-list-task-definitions-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-task-definitions-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-task-definitions-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'family-prefix))
      (common-lisp:list
       (common-lisp:cons "familyPrefix"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'sort))
      (common-lisp:list
       (common-lisp:cons "sort"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "nextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-results))
      (common-lisp:list
       (common-lisp:cons "maxResults"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-task-definitions-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-task-definitions-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-task-definitions-response-"))
   (task-definition-arns common-lisp:nil :type
    (common-lisp:or string-list common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-task-definitions-response
                    'make-list-task-definitions-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-task-definitions-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-task-definitions-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'task-definition-arns))
      (common-lisp:list
       (common-lisp:cons "taskDefinitionArns"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "nextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-task-definitions-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-tasks-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-tasks-request-"))
   (cluster common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (container-instance common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (family common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or boxed-integer common-lisp:null))
   (started-by common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (service-name common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (desired-status common-lisp:nil :type
    (common-lisp:or desired-status common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-tasks-request 'make-list-tasks-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input list-tasks-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input list-tasks-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'cluster))
      (common-lisp:list
       (common-lisp:cons "cluster"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'container-instance))
      (common-lisp:list
       (common-lisp:cons "containerInstance"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'family))
      (common-lisp:list
       (common-lisp:cons "family"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "nextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-results))
      (common-lisp:list
       (common-lisp:cons "maxResults"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'started-by))
      (common-lisp:list
       (common-lisp:cons "startedBy"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'service-name))
      (common-lisp:list
       (common-lisp:cons "serviceName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'desired-status))
      (common-lisp:list
       (common-lisp:cons "desiredStatus"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input list-tasks-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-tasks-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-tasks-response-"))
   (task-arns common-lisp:nil :type
    (common-lisp:or string-list common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-tasks-response 'make-list-tasks-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input list-tasks-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input list-tasks-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'task-arns))
      (common-lisp:list
       (common-lisp:cons "taskArns"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "nextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input list-tasks-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (load-balancer (:copier common-lisp:nil)
      (:conc-name "struct-shape-load-balancer-"))
   (target-group-arn common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (load-balancer-name common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (container-name common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (container-port common-lisp:nil :type
    (common-lisp:or boxed-integer common-lisp:null)))
 (common-lisp:export (common-lisp:list 'load-balancer 'make-load-balancer))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input load-balancer))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input load-balancer))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'target-group-arn))
      (common-lisp:list
       (common-lisp:cons "targetGroupArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'load-balancer-name))
      (common-lisp:list
       (common-lisp:cons "loadBalancerName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'container-name))
      (common-lisp:list
       (common-lisp:cons "containerName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'container-port))
      (common-lisp:list
       (common-lisp:cons "containerPort"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input load-balancer))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype load-balancers ()
   '(trivial-types:proper-list load-balancer))
 (common-lisp:defun |make-load-balancers|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list load-balancer))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (log-configuration (:copier common-lisp:nil)
      (:conc-name "struct-shape-log-configuration-"))
   (log-driver (common-lisp:error ":logdriver is required") :type
    (common-lisp:or log-driver common-lisp:null))
   (options common-lisp:nil :type
    (common-lisp:or log-configuration-options-map common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'log-configuration 'make-log-configuration))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input log-configuration))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input log-configuration))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'log-driver))
      (common-lisp:list
       (common-lisp:cons "logDriver"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'options))
      (common-lisp:list
       (common-lisp:cons "options"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input log-configuration))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype log-configuration-options-map () 'common-lisp:hash-table)
 (common-lisp:defun |make-log-configuration-options-map|
                    (aws-sdk/generator/shape::key-values)
   (common-lisp:etypecase aws-sdk/generator/shape::key-values
     (common-lisp:hash-table aws-sdk/generator/shape::key-values)
     (common-lisp:list
      (alexandria:alist-hash-table aws-sdk/generator/shape::key-values)))))
(common-lisp:deftype log-driver () 'common-lisp:string)
(common-lisp:deftype long () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:defstruct
     (missing-version-exception (:copier common-lisp:nil)
      (:conc-name "struct-shape-missing-version-exception-")))
 (common-lisp:export
  (common-lisp:list 'missing-version-exception
                    'make-missing-version-exception))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          missing-version-exception))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          missing-version-exception))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          missing-version-exception))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (mount-point (:copier common-lisp:nil)
      (:conc-name "struct-shape-mount-point-"))
   (source-volume common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (container-path common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (read-only common-lisp:nil :type
    (common-lisp:or boxed-boolean common-lisp:null)))
 (common-lisp:export (common-lisp:list 'mount-point 'make-mount-point))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input mount-point))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input mount-point))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'source-volume))
      (common-lisp:list
       (common-lisp:cons "sourceVolume"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'container-path))
      (common-lisp:list
       (common-lisp:cons "containerPath"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'read-only))
      (common-lisp:list
       (common-lisp:cons "readOnly"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input mount-point))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype mount-point-list ()
   '(trivial-types:proper-list mount-point))
 (common-lisp:defun |make-mount-point-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list mount-point))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (network-binding (:copier common-lisp:nil)
      (:conc-name "struct-shape-network-binding-"))
   (bind-ip common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (container-port common-lisp:nil :type
    (common-lisp:or boxed-integer common-lisp:null))
   (host-port common-lisp:nil :type
    (common-lisp:or boxed-integer common-lisp:null))
   (protocol common-lisp:nil :type
    (common-lisp:or transport-protocol common-lisp:null)))
 (common-lisp:export (common-lisp:list 'network-binding 'make-network-binding))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input network-binding))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input network-binding))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'bind-ip))
      (common-lisp:list
       (common-lisp:cons "bindIP"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'container-port))
      (common-lisp:list
       (common-lisp:cons "containerPort"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'host-port))
      (common-lisp:list
       (common-lisp:cons "hostPort"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'protocol))
      (common-lisp:list
       (common-lisp:cons "protocol"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input network-binding))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype network-bindings ()
   '(trivial-types:proper-list network-binding))
 (common-lisp:defun |make-network-bindings|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list network-binding))
   aws-sdk/generator/shape::members))
(common-lisp:deftype network-mode () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (no-update-available-exception (:copier common-lisp:nil)
      (:conc-name "struct-shape-no-update-available-exception-")))
 (common-lisp:export
  (common-lisp:list 'no-update-available-exception
                    'make-no-update-available-exception))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          no-update-available-exception))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          no-update-available-exception))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          no-update-available-exception))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (placement-constraint (:copier common-lisp:nil)
      (:conc-name "struct-shape-placement-constraint-"))
   (type common-lisp:nil :type
    (common-lisp:or placement-constraint-type common-lisp:null))
   (expression common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'placement-constraint 'make-placement-constraint))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input placement-constraint))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input placement-constraint))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'type))
      (common-lisp:list
       (common-lisp:cons "type"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'expression))
      (common-lisp:list
       (common-lisp:cons "expression"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input placement-constraint))
   common-lisp:nil))
(common-lisp:deftype placement-constraint-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype placement-constraints ()
   '(trivial-types:proper-list placement-constraint))
 (common-lisp:defun |make-placement-constraints|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list placement-constraint))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype placement-strategies ()
   '(trivial-types:proper-list placement-strategy))
 (common-lisp:defun |make-placement-strategies|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list placement-strategy))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (placement-strategy (:copier common-lisp:nil)
      (:conc-name "struct-shape-placement-strategy-"))
   (type common-lisp:nil :type
    (common-lisp:or placement-strategy-type common-lisp:null))
   (field common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'placement-strategy 'make-placement-strategy))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input placement-strategy))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input placement-strategy))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'type))
      (common-lisp:list
       (common-lisp:cons "type"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'field))
      (common-lisp:list
       (common-lisp:cons "field"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input placement-strategy))
   common-lisp:nil))
(common-lisp:deftype placement-strategy-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (port-mapping (:copier common-lisp:nil)
      (:conc-name "struct-shape-port-mapping-"))
   (container-port common-lisp:nil :type
    (common-lisp:or boxed-integer common-lisp:null))
   (host-port common-lisp:nil :type
    (common-lisp:or boxed-integer common-lisp:null))
   (protocol common-lisp:nil :type
    (common-lisp:or transport-protocol common-lisp:null)))
 (common-lisp:export (common-lisp:list 'port-mapping 'make-port-mapping))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input port-mapping))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input port-mapping))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'container-port))
      (common-lisp:list
       (common-lisp:cons "containerPort"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'host-port))
      (common-lisp:list
       (common-lisp:cons "hostPort"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'protocol))
      (common-lisp:list
       (common-lisp:cons "protocol"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input port-mapping))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype port-mapping-list ()
   '(trivial-types:proper-list port-mapping))
 (common-lisp:defun |make-port-mapping-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list port-mapping))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (put-attributes-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-put-attributes-request-"))
   (cluster common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (attributes (common-lisp:error ":attributes is required") :type
    (common-lisp:or attributes common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'put-attributes-request 'make-put-attributes-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          put-attributes-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          put-attributes-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'cluster))
      (common-lisp:list
       (common-lisp:cons "cluster"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'attributes))
      (common-lisp:list
       (common-lisp:cons "attributes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          put-attributes-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (put-attributes-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-put-attributes-response-"))
   (attributes common-lisp:nil :type
    (common-lisp:or attributes common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'put-attributes-response 'make-put-attributes-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          put-attributes-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          put-attributes-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'attributes))
      (common-lisp:list
       (common-lisp:cons "attributes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          put-attributes-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (register-container-instance-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-register-container-instance-request-"))
   (cluster common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (instance-identity-document common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (instance-identity-document-signature common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (total-resources common-lisp:nil :type
    (common-lisp:or resources common-lisp:null))
   (version-info common-lisp:nil :type
    (common-lisp:or version-info common-lisp:null))
   (container-instance-arn common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (attributes common-lisp:nil :type
    (common-lisp:or attributes common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'register-container-instance-request
                    'make-register-container-instance-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          register-container-instance-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          register-container-instance-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'cluster))
      (common-lisp:list
       (common-lisp:cons "cluster"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'instance-identity-document))
      (common-lisp:list
       (common-lisp:cons "instanceIdentityDocument"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'instance-identity-document-signature))
      (common-lisp:list
       (common-lisp:cons "instanceIdentityDocumentSignature"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'total-resources))
      (common-lisp:list
       (common-lisp:cons "totalResources"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'version-info))
      (common-lisp:list
       (common-lisp:cons "versionInfo"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'container-instance-arn))
      (common-lisp:list
       (common-lisp:cons "containerInstanceArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'attributes))
      (common-lisp:list
       (common-lisp:cons "attributes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          register-container-instance-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (register-container-instance-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-register-container-instance-response-"))
   (container-instance common-lisp:nil :type
    (common-lisp:or container-instance common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'register-container-instance-response
                    'make-register-container-instance-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          register-container-instance-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          register-container-instance-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'container-instance))
      (common-lisp:list
       (common-lisp:cons "containerInstance"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          register-container-instance-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (register-task-definition-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-register-task-definition-request-"))
   (family (common-lisp:error ":family is required") :type
    (common-lisp:or string common-lisp:null))
   (task-role-arn common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (network-mode common-lisp:nil :type
    (common-lisp:or network-mode common-lisp:null))
   (container-definitions
    (common-lisp:error ":containerdefinitions is required") :type
    (common-lisp:or container-definitions common-lisp:null))
   (volumes common-lisp:nil :type
    (common-lisp:or volume-list common-lisp:null))
   (placement-constraints common-lisp:nil :type
    (common-lisp:or task-definition-placement-constraints common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'register-task-definition-request
                    'make-register-task-definition-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          register-task-definition-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          register-task-definition-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'family))
      (common-lisp:list
       (common-lisp:cons "family"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'task-role-arn))
      (common-lisp:list
       (common-lisp:cons "taskRoleArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'network-mode))
      (common-lisp:list
       (common-lisp:cons "networkMode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'container-definitions))
      (common-lisp:list
       (common-lisp:cons "containerDefinitions"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'volumes))
      (common-lisp:list
       (common-lisp:cons "volumes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'placement-constraints))
      (common-lisp:list
       (common-lisp:cons "placementConstraints"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          register-task-definition-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (register-task-definition-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-register-task-definition-response-"))
   (task-definition common-lisp:nil :type
    (common-lisp:or task-definition common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'register-task-definition-response
                    'make-register-task-definition-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          register-task-definition-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          register-task-definition-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'task-definition))
      (common-lisp:list
       (common-lisp:cons "taskDefinition"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          register-task-definition-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype requires-attributes ()
   '(trivial-types:proper-list attribute))
 (common-lisp:defun |make-requires-attributes|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list attribute))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (resource (:copier common-lisp:nil) (:conc-name "struct-shape-resource-"))
   (name common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (type common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (double-value common-lisp:nil :type
    (common-lisp:or double common-lisp:null))
   (long-value common-lisp:nil :type (common-lisp:or long common-lisp:null))
   (integer-value common-lisp:nil :type
    (common-lisp:or integer common-lisp:null))
   (string-set-value common-lisp:nil :type
    (common-lisp:or string-list common-lisp:null)))
 (common-lisp:export (common-lisp:list 'resource 'make-resource))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input resource))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input resource))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'type))
      (common-lisp:list
       (common-lisp:cons "type"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'double-value))
      (common-lisp:list
       (common-lisp:cons "doubleValue"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'long-value))
      (common-lisp:list
       (common-lisp:cons "longValue"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'integer-value))
      (common-lisp:list
       (common-lisp:cons "integerValue"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'string-set-value))
      (common-lisp:list
       (common-lisp:cons "stringSetValue"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input resource))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype resources () '(trivial-types:proper-list resource))
 (common-lisp:defun |make-resources|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list resource))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (run-task-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-run-task-request-"))
   (cluster common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (task-definition (common-lisp:error ":taskdefinition is required") :type
    (common-lisp:or string common-lisp:null))
   (overrides common-lisp:nil :type
    (common-lisp:or task-override common-lisp:null))
   (count common-lisp:nil :type
    (common-lisp:or boxed-integer common-lisp:null))
   (started-by common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (group common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (placement-constraints common-lisp:nil :type
    (common-lisp:or placement-constraints common-lisp:null))
   (placement-strategy common-lisp:nil :type
    (common-lisp:or placement-strategies common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'run-task-request 'make-run-task-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input run-task-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input run-task-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'cluster))
      (common-lisp:list
       (common-lisp:cons "cluster"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'task-definition))
      (common-lisp:list
       (common-lisp:cons "taskDefinition"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'overrides))
      (common-lisp:list
       (common-lisp:cons "overrides"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'count))
      (common-lisp:list
       (common-lisp:cons "count"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'started-by))
      (common-lisp:list
       (common-lisp:cons "startedBy"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'group))
      (common-lisp:list
       (common-lisp:cons "group"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'placement-constraints))
      (common-lisp:list
       (common-lisp:cons "placementConstraints"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'placement-strategy))
      (common-lisp:list
       (common-lisp:cons "placementStrategy"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input run-task-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (run-task-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-run-task-response-"))
   (tasks common-lisp:nil :type (common-lisp:or tasks common-lisp:null))
   (failures common-lisp:nil :type (common-lisp:or failures common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'run-task-response 'make-run-task-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input run-task-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input run-task-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tasks))
      (common-lisp:list
       (common-lisp:cons "tasks"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'failures))
      (common-lisp:list
       (common-lisp:cons "failures"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input run-task-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (server-exception (:copier common-lisp:nil)
      (:conc-name "struct-shape-server-exception-"))
   (message common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'server-exception 'make-server-exception))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input server-exception))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input server-exception))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'message))
      (common-lisp:list
       (common-lisp:cons "message"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input server-exception))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (service (:copier common-lisp:nil) (:conc-name "struct-shape-service-"))
   (service-arn common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (service-name common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (cluster-arn common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (load-balancers common-lisp:nil :type
    (common-lisp:or load-balancers common-lisp:null))
   (status common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (desired-count common-lisp:nil :type
    (common-lisp:or integer common-lisp:null))
   (running-count common-lisp:nil :type
    (common-lisp:or integer common-lisp:null))
   (pending-count common-lisp:nil :type
    (common-lisp:or integer common-lisp:null))
   (task-definition common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (deployment-configuration common-lisp:nil :type
    (common-lisp:or deployment-configuration common-lisp:null))
   (deployments common-lisp:nil :type
    (common-lisp:or deployments common-lisp:null))
   (role-arn common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (events common-lisp:nil :type
    (common-lisp:or service-events common-lisp:null))
   (created-at common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null))
   (placement-constraints common-lisp:nil :type
    (common-lisp:or placement-constraints common-lisp:null))
   (placement-strategy common-lisp:nil :type
    (common-lisp:or placement-strategies common-lisp:null)))
 (common-lisp:export (common-lisp:list 'service 'make-service))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input service))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input service))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'service-arn))
      (common-lisp:list
       (common-lisp:cons "serviceArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'service-name))
      (common-lisp:list
       (common-lisp:cons "serviceName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'cluster-arn))
      (common-lisp:list
       (common-lisp:cons "clusterArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'load-balancers))
      (common-lisp:list
       (common-lisp:cons "loadBalancers"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'desired-count))
      (common-lisp:list
       (common-lisp:cons "desiredCount"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'running-count))
      (common-lisp:list
       (common-lisp:cons "runningCount"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'pending-count))
      (common-lisp:list
       (common-lisp:cons "pendingCount"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'task-definition))
      (common-lisp:list
       (common-lisp:cons "taskDefinition"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'deployment-configuration))
      (common-lisp:list
       (common-lisp:cons "deploymentConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'deployments))
      (common-lisp:list
       (common-lisp:cons "deployments"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'role-arn))
      (common-lisp:list
       (common-lisp:cons "roleArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'events))
      (common-lisp:list
       (common-lisp:cons "events"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created-at))
      (common-lisp:list
       (common-lisp:cons "createdAt"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'placement-constraints))
      (common-lisp:list
       (common-lisp:cons "placementConstraints"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'placement-strategy))
      (common-lisp:list
       (common-lisp:cons "placementStrategy"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input service))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (service-event (:copier common-lisp:nil)
      (:conc-name "struct-shape-service-event-"))
   (id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (created-at common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null))
   (message common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'service-event 'make-service-event))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input service-event))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input service-event))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created-at))
      (common-lisp:list
       (common-lisp:cons "createdAt"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'message))
      (common-lisp:list
       (common-lisp:cons "message"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input service-event))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype service-events ()
   '(trivial-types:proper-list service-event))
 (common-lisp:defun |make-service-events|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list service-event))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (service-not-active-exception (:copier common-lisp:nil)
      (:conc-name "struct-shape-service-not-active-exception-")))
 (common-lisp:export
  (common-lisp:list 'service-not-active-exception
                    'make-service-not-active-exception))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          service-not-active-exception))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          service-not-active-exception))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          service-not-active-exception))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (service-not-found-exception (:copier common-lisp:nil)
      (:conc-name "struct-shape-service-not-found-exception-")))
 (common-lisp:export
  (common-lisp:list 'service-not-found-exception
                    'make-service-not-found-exception))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          service-not-found-exception))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          service-not-found-exception))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          service-not-found-exception))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype services () '(trivial-types:proper-list service))
 (common-lisp:defun |make-services|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list service))
   aws-sdk/generator/shape::members))
(common-lisp:deftype sort-order () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (start-task-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-start-task-request-"))
   (cluster common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (task-definition (common-lisp:error ":taskdefinition is required") :type
    (common-lisp:or string common-lisp:null))
   (overrides common-lisp:nil :type
    (common-lisp:or task-override common-lisp:null))
   (container-instances (common-lisp:error ":containerinstances is required")
    :type (common-lisp:or string-list common-lisp:null))
   (started-by common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (group common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'start-task-request 'make-start-task-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input start-task-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input start-task-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'cluster))
      (common-lisp:list
       (common-lisp:cons "cluster"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'task-definition))
      (common-lisp:list
       (common-lisp:cons "taskDefinition"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'overrides))
      (common-lisp:list
       (common-lisp:cons "overrides"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'container-instances))
      (common-lisp:list
       (common-lisp:cons "containerInstances"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'started-by))
      (common-lisp:list
       (common-lisp:cons "startedBy"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'group))
      (common-lisp:list
       (common-lisp:cons "group"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input start-task-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (start-task-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-start-task-response-"))
   (tasks common-lisp:nil :type (common-lisp:or tasks common-lisp:null))
   (failures common-lisp:nil :type (common-lisp:or failures common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'start-task-response 'make-start-task-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input start-task-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input start-task-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tasks))
      (common-lisp:list
       (common-lisp:cons "tasks"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'failures))
      (common-lisp:list
       (common-lisp:cons "failures"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input start-task-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (stop-task-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-stop-task-request-"))
   (cluster common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (task (common-lisp:error ":task is required") :type
    (common-lisp:or string common-lisp:null))
   (reason common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'stop-task-request 'make-stop-task-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input stop-task-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input stop-task-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'cluster))
      (common-lisp:list
       (common-lisp:cons "cluster"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'task))
      (common-lisp:list
       (common-lisp:cons "task"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'reason))
      (common-lisp:list
       (common-lisp:cons "reason"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input stop-task-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (stop-task-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-stop-task-response-"))
   (task common-lisp:nil :type (common-lisp:or task common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'stop-task-response 'make-stop-task-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input stop-task-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input stop-task-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'task))
      (common-lisp:list
       (common-lisp:cons "task"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input stop-task-response))
   common-lisp:nil))
(common-lisp:deftype string () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype string-list () '(trivial-types:proper-list string))
 (common-lisp:defun |make-string-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list string))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (submit-container-state-change-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-submit-container-state-change-request-"))
   (cluster common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (task common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (container-name common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (status common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (exit-code common-lisp:nil :type
    (common-lisp:or boxed-integer common-lisp:null))
   (reason common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (network-bindings common-lisp:nil :type
    (common-lisp:or network-bindings common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'submit-container-state-change-request
                    'make-submit-container-state-change-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          submit-container-state-change-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          submit-container-state-change-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'cluster))
      (common-lisp:list
       (common-lisp:cons "cluster"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'task))
      (common-lisp:list
       (common-lisp:cons "task"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'container-name))
      (common-lisp:list
       (common-lisp:cons "containerName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'exit-code))
      (common-lisp:list
       (common-lisp:cons "exitCode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'reason))
      (common-lisp:list
       (common-lisp:cons "reason"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'network-bindings))
      (common-lisp:list
       (common-lisp:cons "networkBindings"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          submit-container-state-change-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (submit-container-state-change-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-submit-container-state-change-response-"))
   (acknowledgment common-lisp:nil :type
    (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'submit-container-state-change-response
                    'make-submit-container-state-change-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          submit-container-state-change-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          submit-container-state-change-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'acknowledgment))
      (common-lisp:list
       (common-lisp:cons "acknowledgment"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          submit-container-state-change-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (submit-task-state-change-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-submit-task-state-change-request-"))
   (cluster common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (task common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (status common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (reason common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'submit-task-state-change-request
                    'make-submit-task-state-change-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          submit-task-state-change-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          submit-task-state-change-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'cluster))
      (common-lisp:list
       (common-lisp:cons "cluster"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'task))
      (common-lisp:list
       (common-lisp:cons "task"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'reason))
      (common-lisp:list
       (common-lisp:cons "reason"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          submit-task-state-change-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (submit-task-state-change-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-submit-task-state-change-response-"))
   (acknowledgment common-lisp:nil :type
    (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'submit-task-state-change-response
                    'make-submit-task-state-change-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          submit-task-state-change-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          submit-task-state-change-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'acknowledgment))
      (common-lisp:list
       (common-lisp:cons "acknowledgment"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          submit-task-state-change-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (target-not-found-exception (:copier common-lisp:nil)
      (:conc-name "struct-shape-target-not-found-exception-")))
 (common-lisp:export
  (common-lisp:list 'target-not-found-exception
                    'make-target-not-found-exception))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          target-not-found-exception))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          target-not-found-exception))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          target-not-found-exception))
   common-lisp:nil))
(common-lisp:deftype target-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (task (:copier common-lisp:nil) (:conc-name "struct-shape-task-"))
   (task-arn common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (cluster-arn common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (task-definition-arn common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (container-instance-arn common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (overrides common-lisp:nil :type
    (common-lisp:or task-override common-lisp:null))
   (last-status common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (desired-status common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (containers common-lisp:nil :type
    (common-lisp:or containers common-lisp:null))
   (started-by common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (version common-lisp:nil :type (common-lisp:or long common-lisp:null))
   (stopped-reason common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (created-at common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null))
   (started-at common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null))
   (stopped-at common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null))
   (group common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'task 'make-task))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input task))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input task))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'task-arn))
      (common-lisp:list
       (common-lisp:cons "taskArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'cluster-arn))
      (common-lisp:list
       (common-lisp:cons "clusterArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'task-definition-arn))
      (common-lisp:list
       (common-lisp:cons "taskDefinitionArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'container-instance-arn))
      (common-lisp:list
       (common-lisp:cons "containerInstanceArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'overrides))
      (common-lisp:list
       (common-lisp:cons "overrides"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'last-status))
      (common-lisp:list
       (common-lisp:cons "lastStatus"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'desired-status))
      (common-lisp:list
       (common-lisp:cons "desiredStatus"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'containers))
      (common-lisp:list
       (common-lisp:cons "containers"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'started-by))
      (common-lisp:list
       (common-lisp:cons "startedBy"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'version))
      (common-lisp:list
       (common-lisp:cons "version"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'stopped-reason))
      (common-lisp:list
       (common-lisp:cons "stoppedReason"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created-at))
      (common-lisp:list
       (common-lisp:cons "createdAt"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'started-at))
      (common-lisp:list
       (common-lisp:cons "startedAt"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'stopped-at))
      (common-lisp:list
       (common-lisp:cons "stoppedAt"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'group))
      (common-lisp:list
       (common-lisp:cons "group"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input task))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (task-definition (:copier common-lisp:nil)
      (:conc-name "struct-shape-task-definition-"))
   (task-definition-arn common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (container-definitions common-lisp:nil :type
    (common-lisp:or container-definitions common-lisp:null))
   (family common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (task-role-arn common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (network-mode common-lisp:nil :type
    (common-lisp:or network-mode common-lisp:null))
   (revision common-lisp:nil :type (common-lisp:or integer common-lisp:null))
   (volumes common-lisp:nil :type
    (common-lisp:or volume-list common-lisp:null))
   (status common-lisp:nil :type
    (common-lisp:or task-definition-status common-lisp:null))
   (requires-attributes common-lisp:nil :type
    (common-lisp:or requires-attributes common-lisp:null))
   (placement-constraints common-lisp:nil :type
    (common-lisp:or task-definition-placement-constraints common-lisp:null)))
 (common-lisp:export (common-lisp:list 'task-definition 'make-task-definition))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input task-definition))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input task-definition))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'task-definition-arn))
      (common-lisp:list
       (common-lisp:cons "taskDefinitionArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'container-definitions))
      (common-lisp:list
       (common-lisp:cons "containerDefinitions"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'family))
      (common-lisp:list
       (common-lisp:cons "family"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'task-role-arn))
      (common-lisp:list
       (common-lisp:cons "taskRoleArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'network-mode))
      (common-lisp:list
       (common-lisp:cons "networkMode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'revision))
      (common-lisp:list
       (common-lisp:cons "revision"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'volumes))
      (common-lisp:list
       (common-lisp:cons "volumes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'requires-attributes))
      (common-lisp:list
       (common-lisp:cons "requiresAttributes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'placement-constraints))
      (common-lisp:list
       (common-lisp:cons "placementConstraints"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input task-definition))
   common-lisp:nil))
(common-lisp:deftype task-definition-family-status () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (task-definition-placement-constraint (:copier common-lisp:nil)
      (:conc-name "struct-shape-task-definition-placement-constraint-"))
   (type common-lisp:nil :type
    (common-lisp:or task-definition-placement-constraint-type
                    common-lisp:null))
   (expression common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'task-definition-placement-constraint
                    'make-task-definition-placement-constraint))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          task-definition-placement-constraint))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          task-definition-placement-constraint))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'type))
      (common-lisp:list
       (common-lisp:cons "type"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'expression))
      (common-lisp:list
       (common-lisp:cons "expression"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          task-definition-placement-constraint))
   common-lisp:nil))
(common-lisp:deftype task-definition-placement-constraint-type ()
  'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype task-definition-placement-constraints ()
   '(trivial-types:proper-list task-definition-placement-constraint))
 (common-lisp:defun |make-task-definition-placement-constraints|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            task-definition-placement-constraint))
   aws-sdk/generator/shape::members))
(common-lisp:deftype task-definition-status () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (task-override (:copier common-lisp:nil)
      (:conc-name "struct-shape-task-override-"))
   (container-overrides common-lisp:nil :type
    (common-lisp:or container-overrides common-lisp:null))
   (task-role-arn common-lisp:nil :type
    (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'task-override 'make-task-override))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input task-override))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input task-override))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'container-overrides))
      (common-lisp:list
       (common-lisp:cons "containerOverrides"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'task-role-arn))
      (common-lisp:list
       (common-lisp:cons "taskRoleArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input task-override))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype tasks () '(trivial-types:proper-list task))
 (common-lisp:defun |make-tasks|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list task))
   aws-sdk/generator/shape::members))
(common-lisp:deftype timestamp () 'common-lisp:string)
(common-lisp:deftype transport-protocol () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (ulimit (:copier common-lisp:nil) (:conc-name "struct-shape-ulimit-"))
   (name (common-lisp:error ":name is required") :type
    (common-lisp:or ulimit-name common-lisp:null))
   (soft-limit (common-lisp:error ":softlimit is required") :type
    (common-lisp:or integer common-lisp:null))
   (hard-limit (common-lisp:error ":hardlimit is required") :type
    (common-lisp:or integer common-lisp:null)))
 (common-lisp:export (common-lisp:list 'ulimit 'make-ulimit))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input ulimit))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input ulimit))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'soft-limit))
      (common-lisp:list
       (common-lisp:cons "softLimit"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'hard-limit))
      (common-lisp:list
       (common-lisp:cons "hardLimit"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input ulimit))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype ulimit-list () '(trivial-types:proper-list ulimit))
 (common-lisp:defun |make-ulimit-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list ulimit))
   aws-sdk/generator/shape::members))
(common-lisp:deftype ulimit-name () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (update-container-agent-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-container-agent-request-"))
   (cluster common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (container-instance (common-lisp:error ":containerinstance is required")
    :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-container-agent-request
                    'make-update-container-agent-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-container-agent-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-container-agent-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'cluster))
      (common-lisp:list
       (common-lisp:cons "cluster"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'container-instance))
      (common-lisp:list
       (common-lisp:cons "containerInstance"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-container-agent-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-container-agent-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-container-agent-response-"))
   (container-instance common-lisp:nil :type
    (common-lisp:or container-instance common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-container-agent-response
                    'make-update-container-agent-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-container-agent-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-container-agent-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'container-instance))
      (common-lisp:list
       (common-lisp:cons "containerInstance"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-container-agent-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-container-instances-state-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-container-instances-state-request-"))
   (cluster common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (container-instances (common-lisp:error ":containerinstances is required")
    :type (common-lisp:or string-list common-lisp:null))
   (status (common-lisp:error ":status is required") :type
    (common-lisp:or container-instance-status common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-container-instances-state-request
                    'make-update-container-instances-state-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-container-instances-state-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-container-instances-state-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'cluster))
      (common-lisp:list
       (common-lisp:cons "cluster"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'container-instances))
      (common-lisp:list
       (common-lisp:cons "containerInstances"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-container-instances-state-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-container-instances-state-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-container-instances-state-response-"))
   (container-instances common-lisp:nil :type
    (common-lisp:or container-instances common-lisp:null))
   (failures common-lisp:nil :type (common-lisp:or failures common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-container-instances-state-response
                    'make-update-container-instances-state-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-container-instances-state-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-container-instances-state-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'container-instances))
      (common-lisp:list
       (common-lisp:cons "containerInstances"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'failures))
      (common-lisp:list
       (common-lisp:cons "failures"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-container-instances-state-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-in-progress-exception (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-in-progress-exception-")))
 (common-lisp:export
  (common-lisp:list 'update-in-progress-exception
                    'make-update-in-progress-exception))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-in-progress-exception))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-in-progress-exception))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-in-progress-exception))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-service-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-service-request-"))
   (cluster common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (service (common-lisp:error ":service is required") :type
    (common-lisp:or string common-lisp:null))
   (desired-count common-lisp:nil :type
    (common-lisp:or boxed-integer common-lisp:null))
   (task-definition common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (deployment-configuration common-lisp:nil :type
    (common-lisp:or deployment-configuration common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-service-request 'make-update-service-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-service-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-service-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'cluster))
      (common-lisp:list
       (common-lisp:cons "cluster"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'service))
      (common-lisp:list
       (common-lisp:cons "service"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'desired-count))
      (common-lisp:list
       (common-lisp:cons "desiredCount"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'task-definition))
      (common-lisp:list
       (common-lisp:cons "taskDefinition"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'deployment-configuration))
      (common-lisp:list
       (common-lisp:cons "deploymentConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-service-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-service-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-service-response-"))
   (service common-lisp:nil :type (common-lisp:or service common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-service-response 'make-update-service-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-service-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-service-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'service))
      (common-lisp:list
       (common-lisp:cons "service"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-service-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (version-info (:copier common-lisp:nil)
      (:conc-name "struct-shape-version-info-"))
   (agent-version common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (agent-hash common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (docker-version common-lisp:nil :type
    (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'version-info 'make-version-info))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input version-info))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input version-info))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'agent-version))
      (common-lisp:list
       (common-lisp:cons "agentVersion"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'agent-hash))
      (common-lisp:list
       (common-lisp:cons "agentHash"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'docker-version))
      (common-lisp:list
       (common-lisp:cons "dockerVersion"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input version-info))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (volume (:copier common-lisp:nil) (:conc-name "struct-shape-volume-"))
   (name common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (host common-lisp:nil :type
    (common-lisp:or host-volume-properties common-lisp:null)))
 (common-lisp:export (common-lisp:list 'volume 'make-volume))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input volume))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input volume))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'host))
      (common-lisp:list
       (common-lisp:cons "host"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input volume))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (volume-from (:copier common-lisp:nil)
      (:conc-name "struct-shape-volume-from-"))
   (source-container common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (read-only common-lisp:nil :type
    (common-lisp:or boxed-boolean common-lisp:null)))
 (common-lisp:export (common-lisp:list 'volume-from 'make-volume-from))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input volume-from))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input volume-from))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'source-container))
      (common-lisp:list
       (common-lisp:cons "sourceContainer"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'read-only))
      (common-lisp:list
       (common-lisp:cons "readOnly"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input volume-from))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype volume-from-list ()
   '(trivial-types:proper-list volume-from))
 (common-lisp:defun |make-volume-from-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list volume-from))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype volume-list () '(trivial-types:proper-list volume))
 (common-lisp:defun |make-volume-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list volume))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defun create-cluster
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key cluster-name)
   (common-lisp:declare (common-lisp:ignorable cluster-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-cluster-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'ecs-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "CreateCluster"
                                                        "2014-11-13"))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'create-cluster))
(common-lisp:progn
 (common-lisp:defun create-service
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key cluster service-name task-definition
                     load-balancers desired-count client-token role
                     deployment-configuration placement-constraints
                     placement-strategy)
   (common-lisp:declare
    (common-lisp:ignorable cluster service-name task-definition load-balancers
     desired-count client-token role deployment-configuration
     placement-constraints placement-strategy))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-service-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'ecs-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "CreateService"
                                                        "2014-11-13"))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'create-service))
(common-lisp:progn
 (common-lisp:defun delete-attributes
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key cluster attributes)
   (common-lisp:declare (common-lisp:ignorable cluster attributes))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-attributes-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'ecs-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "DeleteAttributes"
                                                        "2014-11-13"))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'delete-attributes))
(common-lisp:progn
 (common-lisp:defun delete-cluster
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key cluster)
   (common-lisp:declare (common-lisp:ignorable cluster))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-cluster-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'ecs-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "DeleteCluster"
                                                        "2014-11-13"))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'delete-cluster))
(common-lisp:progn
 (common-lisp:defun delete-service
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key cluster service)
   (common-lisp:declare (common-lisp:ignorable cluster service))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-service-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'ecs-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "DeleteService"
                                                        "2014-11-13"))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'delete-service))
(common-lisp:progn
 (common-lisp:defun deregister-container-instance
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key cluster container-instance force)
   (common-lisp:declare
    (common-lisp:ignorable cluster container-instance force))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-deregister-container-instance-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'ecs-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "DeregisterContainerInstance"
                                                        "2014-11-13"))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'deregister-container-instance))
(common-lisp:progn
 (common-lisp:defun deregister-task-definition
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key task-definition)
   (common-lisp:declare (common-lisp:ignorable task-definition))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-deregister-task-definition-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'ecs-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "DeregisterTaskDefinition"
                                                        "2014-11-13"))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'deregister-task-definition))
(common-lisp:progn
 (common-lisp:defun describe-clusters
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key clusters)
   (common-lisp:declare (common-lisp:ignorable clusters))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-describe-clusters-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'ecs-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "DescribeClusters"
                                                        "2014-11-13"))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'describe-clusters))
(common-lisp:progn
 (common-lisp:defun describe-container-instances
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key cluster container-instances)
   (common-lisp:declare (common-lisp:ignorable cluster container-instances))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-describe-container-instances-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'ecs-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "DescribeContainerInstances"
                                                        "2014-11-13"))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'describe-container-instances))
(common-lisp:progn
 (common-lisp:defun describe-services
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key cluster services)
   (common-lisp:declare (common-lisp:ignorable cluster services))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-describe-services-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'ecs-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "DescribeServices"
                                                        "2014-11-13"))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'describe-services))
(common-lisp:progn
 (common-lisp:defun describe-task-definition
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key task-definition)
   (common-lisp:declare (common-lisp:ignorable task-definition))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-describe-task-definition-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'ecs-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "DescribeTaskDefinition"
                                                        "2014-11-13"))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'describe-task-definition))
(common-lisp:progn
 (common-lisp:defun describe-tasks
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key cluster tasks)
   (common-lisp:declare (common-lisp:ignorable cluster tasks))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-describe-tasks-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'ecs-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "DescribeTasks"
                                                        "2014-11-13"))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'describe-tasks))
(common-lisp:progn
 (common-lisp:defun discover-poll-endpoint
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key container-instance cluster)
   (common-lisp:declare (common-lisp:ignorable container-instance cluster))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-discover-poll-endpoint-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'ecs-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "DiscoverPollEndpoint"
                                                        "2014-11-13"))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'discover-poll-endpoint))
(common-lisp:progn
 (common-lisp:defun list-attributes
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key cluster target-type attribute-name
                     attribute-value next-token max-results)
   (common-lisp:declare
    (common-lisp:ignorable cluster target-type attribute-name attribute-value
     next-token max-results))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-attributes-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'ecs-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "ListAttributes"
                                                        "2014-11-13"))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'list-attributes))
(common-lisp:progn
 (common-lisp:defun list-clusters
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key next-token max-results)
   (common-lisp:declare (common-lisp:ignorable next-token max-results))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-clusters-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'ecs-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "ListClusters"
                                                        "2014-11-13"))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'list-clusters))
(common-lisp:progn
 (common-lisp:defun list-container-instances
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key cluster filter next-token max-results
                     status)
   (common-lisp:declare
    (common-lisp:ignorable cluster filter next-token max-results status))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-container-instances-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'ecs-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "ListContainerInstances"
                                                        "2014-11-13"))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'list-container-instances))
(common-lisp:progn
 (common-lisp:defun list-services
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key cluster next-token max-results)
   (common-lisp:declare (common-lisp:ignorable cluster next-token max-results))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-services-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'ecs-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "ListServices"
                                                        "2014-11-13"))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'list-services))
(common-lisp:progn
 (common-lisp:defun list-task-definition-families
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key family-prefix status next-token
                     max-results)
   (common-lisp:declare
    (common-lisp:ignorable family-prefix status next-token max-results))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-list-task-definition-families-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'ecs-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "ListTaskDefinitionFamilies"
                                                        "2014-11-13"))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'list-task-definition-families))
(common-lisp:progn
 (common-lisp:defun list-task-definitions
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key family-prefix status sort next-token
                     max-results)
   (common-lisp:declare
    (common-lisp:ignorable family-prefix status sort next-token max-results))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-task-definitions-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'ecs-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "ListTaskDefinitions"
                                                        "2014-11-13"))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'list-task-definitions))
(common-lisp:progn
 (common-lisp:defun list-tasks
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key cluster container-instance family
                     next-token max-results started-by service-name
                     desired-status)
   (common-lisp:declare
    (common-lisp:ignorable cluster container-instance family next-token
     max-results started-by service-name desired-status))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-tasks-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'ecs-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/" "ListTasks"
                                                        "2014-11-13"))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'list-tasks))
(common-lisp:progn
 (common-lisp:defun put-attributes
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key cluster attributes)
   (common-lisp:declare (common-lisp:ignorable cluster attributes))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-put-attributes-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'ecs-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "PutAttributes"
                                                        "2014-11-13"))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'put-attributes))
(common-lisp:progn
 (common-lisp:defun register-container-instance
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key cluster instance-identity-document
                     instance-identity-document-signature total-resources
                     version-info container-instance-arn attributes)
   (common-lisp:declare
    (common-lisp:ignorable cluster instance-identity-document
     instance-identity-document-signature total-resources version-info
     container-instance-arn attributes))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-register-container-instance-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'ecs-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "RegisterContainerInstance"
                                                        "2014-11-13"))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'register-container-instance))
(common-lisp:progn
 (common-lisp:defun register-task-definition
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key family task-role-arn network-mode
                     container-definitions volumes placement-constraints)
   (common-lisp:declare
    (common-lisp:ignorable family task-role-arn network-mode
     container-definitions volumes placement-constraints))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-register-task-definition-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'ecs-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "RegisterTaskDefinition"
                                                        "2014-11-13"))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'register-task-definition))
(common-lisp:progn
 (common-lisp:defun run-task
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key cluster task-definition overrides count
                     started-by group placement-constraints placement-strategy)
   (common-lisp:declare
    (common-lisp:ignorable cluster task-definition overrides count started-by
     group placement-constraints placement-strategy))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-run-task-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'ecs-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/" "RunTask"
                                                        "2014-11-13"))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'run-task))
(common-lisp:progn
 (common-lisp:defun start-task
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key cluster task-definition overrides
                     container-instances started-by group)
   (common-lisp:declare
    (common-lisp:ignorable cluster task-definition overrides
     container-instances started-by group))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-start-task-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'ecs-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/" "StartTask"
                                                        "2014-11-13"))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'start-task))
(common-lisp:progn
 (common-lisp:defun stop-task
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key cluster task reason)
   (common-lisp:declare (common-lisp:ignorable cluster task reason))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-stop-task-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'ecs-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/" "StopTask"
                                                        "2014-11-13"))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'stop-task))
(common-lisp:progn
 (common-lisp:defun submit-container-state-change
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key cluster task container-name status
                     exit-code reason network-bindings)
   (common-lisp:declare
    (common-lisp:ignorable cluster task container-name status exit-code reason
     network-bindings))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-submit-container-state-change-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'ecs-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "SubmitContainerStateChange"
                                                        "2014-11-13"))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'submit-container-state-change))
(common-lisp:progn
 (common-lisp:defun submit-task-state-change
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key cluster task status reason)
   (common-lisp:declare (common-lisp:ignorable cluster task status reason))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-submit-task-state-change-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'ecs-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "SubmitTaskStateChange"
                                                        "2014-11-13"))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'submit-task-state-change))
(common-lisp:progn
 (common-lisp:defun update-container-agent
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key cluster container-instance)
   (common-lisp:declare (common-lisp:ignorable cluster container-instance))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-container-agent-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'ecs-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "UpdateContainerAgent"
                                                        "2014-11-13"))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'update-container-agent))
(common-lisp:progn
 (common-lisp:defun update-container-instances-state
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key cluster container-instances status)
   (common-lisp:declare
    (common-lisp:ignorable cluster container-instances status))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-update-container-instances-state-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'ecs-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "UpdateContainerInstancesState"
                                                        "2014-11-13"))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'update-container-instances-state))
(common-lisp:progn
 (common-lisp:defun update-service
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key cluster service desired-count
                     task-definition deployment-configuration)
   (common-lisp:declare
    (common-lisp:ignorable cluster service desired-count task-definition
     deployment-configuration))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-service-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'ecs-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "UpdateService"
                                                        "2014-11-13"))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'update-service))
