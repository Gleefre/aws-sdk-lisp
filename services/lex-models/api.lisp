;; DO NOT EDIT: File is generated by AWS-SDK/GENERATOR.

(common-lisp:defpackage #:aws-sdk/services/lex-models/api
  (:use)
  (:nicknames #:aws/lex-models)
  (:import-from #:aws-sdk/generator/shape)
  (:import-from #:aws-sdk/generator/operation)
  (:import-from #:aws-sdk/api)
  (:import-from #:aws-sdk/request)
  (:import-from #:aws-sdk/error))
(common-lisp:in-package #:aws-sdk/services/lex-models/api)
(common-lisp:progn
 (common-lisp:defclass lex-models-request (aws-sdk/request:request)
                       common-lisp:nil
                       (:default-initargs :service "lex-models"))
 (common-lisp:export 'lex-models-request))
(common-lisp:progn
 (common-lisp:define-condition lex-models-error
     (aws-sdk/error:aws-error)
     common-lisp:nil)
 (common-lisp:export 'lex-models-error))
(common-lisp:defvar *error-map*
  '(("BadRequestException" . bad-request-exception)
    ("ConflictException" . conflict-exception)
    ("InternalFailureException" . internal-failure-exception)
    ("LimitExceededException" . limit-exceeded-exception)
    ("NotFoundException" . not-found-exception)
    ("PreconditionFailedException" . precondition-failed-exception)
    ("ResourceInUseException" . resource-in-use-exception)))
(common-lisp:deftype alias-name () 'common-lisp:string)
(common-lisp:deftype alias-name-or-list-all () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:define-condition bad-request-exception
     (lex-models-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       bad-request-exception-message)))
 (common-lisp:export
  (common-lisp:list 'bad-request-exception 'bad-request-exception-message)))
(common-lisp:deftype boolean () 'common-lisp:boolean)
(common-lisp:progn
 (common-lisp:defstruct
     (bot-alias-metadata (:copier common-lisp:nil)
      (:conc-name "struct-shape-bot-alias-metadata-"))
   (name common-lisp:nil :type (common-lisp:or alias-name common-lisp:null))
   (description common-lisp:nil :type
    (common-lisp:or description common-lisp:null))
   (bot-version common-lisp:nil :type
    (common-lisp:or version common-lisp:null))
   (bot-name common-lisp:nil :type (common-lisp:or bot-name common-lisp:null))
   (last-updated-date common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null))
   (created-date common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null))
   (checksum common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'bot-alias-metadata 'make-bot-alias-metadata))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input bot-alias-metadata))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input bot-alias-metadata))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'bot-version))
      (common-lisp:list
       (common-lisp:cons "botVersion"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'bot-name))
      (common-lisp:list
       (common-lisp:cons "botName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'last-updated-date))
      (common-lisp:list
       (common-lisp:cons "lastUpdatedDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created-date))
      (common-lisp:list
       (common-lisp:cons "createdDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'checksum))
      (common-lisp:list
       (common-lisp:cons "checksum"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input bot-alias-metadata))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype bot-alias-metadata-list ()
   '(trivial-types:proper-list bot-alias-metadata))
 (common-lisp:defun |make-bot-alias-metadata-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list bot-alias-metadata))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (bot-channel-association (:copier common-lisp:nil)
      (:conc-name "struct-shape-bot-channel-association-"))
   (name common-lisp:nil :type
    (common-lisp:or bot-channel-name common-lisp:null))
   (description common-lisp:nil :type
    (common-lisp:or description common-lisp:null))
   (bot-alias common-lisp:nil :type
    (common-lisp:or alias-name common-lisp:null))
   (bot-name common-lisp:nil :type (common-lisp:or bot-name common-lisp:null))
   (created-date common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null))
   (type common-lisp:nil :type (common-lisp:or channel-type common-lisp:null))
   (bot-configuration common-lisp:nil :type
    (common-lisp:or channel-configuration-map common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'bot-channel-association 'make-bot-channel-association))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          bot-channel-association))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          bot-channel-association))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'bot-alias))
      (common-lisp:list
       (common-lisp:cons "botAlias"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'bot-name))
      (common-lisp:list
       (common-lisp:cons "botName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created-date))
      (common-lisp:list
       (common-lisp:cons "createdDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'type))
      (common-lisp:list
       (common-lisp:cons "type"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'bot-configuration))
      (common-lisp:list
       (common-lisp:cons "botConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          bot-channel-association))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype bot-channel-association-list ()
   '(trivial-types:proper-list bot-channel-association))
 (common-lisp:defun |make-bot-channel-association-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list bot-channel-association))
   aws-sdk/generator/shape::members))
(common-lisp:deftype bot-channel-name () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (bot-metadata (:copier common-lisp:nil)
      (:conc-name "struct-shape-bot-metadata-"))
   (name common-lisp:nil :type (common-lisp:or bot-name common-lisp:null))
   (description common-lisp:nil :type
    (common-lisp:or description common-lisp:null))
   (status common-lisp:nil :type (common-lisp:or status common-lisp:null))
   (last-updated-date common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null))
   (created-date common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null))
   (version common-lisp:nil :type (common-lisp:or version common-lisp:null)))
 (common-lisp:export (common-lisp:list 'bot-metadata 'make-bot-metadata))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input bot-metadata))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input bot-metadata))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'last-updated-date))
      (common-lisp:list
       (common-lisp:cons "lastUpdatedDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created-date))
      (common-lisp:list
       (common-lisp:cons "createdDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'version))
      (common-lisp:list
       (common-lisp:cons "version"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input bot-metadata))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype bot-metadata-list ()
   '(trivial-types:proper-list bot-metadata))
 (common-lisp:defun |make-bot-metadata-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list bot-metadata))
   aws-sdk/generator/shape::members))
(common-lisp:deftype bot-name () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype bot-versions () '(trivial-types:proper-list version))
 (common-lisp:defun |make-bot-versions|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list version))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (builtin-intent-metadata (:copier common-lisp:nil)
      (:conc-name "struct-shape-builtin-intent-metadata-"))
   (signature common-lisp:nil :type
    (common-lisp:or builtin-intent-signature common-lisp:null))
   (supported-locales common-lisp:nil :type
    (common-lisp:or locale-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'builtin-intent-metadata 'make-builtin-intent-metadata))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          builtin-intent-metadata))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          builtin-intent-metadata))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'signature))
      (common-lisp:list
       (common-lisp:cons "signature"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'supported-locales))
      (common-lisp:list
       (common-lisp:cons "supportedLocales"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          builtin-intent-metadata))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype builtin-intent-metadata-list ()
   '(trivial-types:proper-list builtin-intent-metadata))
 (common-lisp:defun |make-builtin-intent-metadata-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list builtin-intent-metadata))
   aws-sdk/generator/shape::members))
(common-lisp:deftype builtin-intent-signature () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (builtin-intent-slot (:copier common-lisp:nil)
      (:conc-name "struct-shape-builtin-intent-slot-"))
   (name common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'builtin-intent-slot 'make-builtin-intent-slot))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input builtin-intent-slot))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input builtin-intent-slot))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input builtin-intent-slot))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype builtin-intent-slot-list ()
   '(trivial-types:proper-list builtin-intent-slot))
 (common-lisp:defun |make-builtin-intent-slot-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list builtin-intent-slot))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (builtin-slot-type-metadata (:copier common-lisp:nil)
      (:conc-name "struct-shape-builtin-slot-type-metadata-"))
   (signature common-lisp:nil :type
    (common-lisp:or builtin-slot-type-signature common-lisp:null))
   (supported-locales common-lisp:nil :type
    (common-lisp:or locale-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'builtin-slot-type-metadata
                    'make-builtin-slot-type-metadata))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          builtin-slot-type-metadata))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          builtin-slot-type-metadata))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'signature))
      (common-lisp:list
       (common-lisp:cons "signature"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'supported-locales))
      (common-lisp:list
       (common-lisp:cons "supportedLocales"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          builtin-slot-type-metadata))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype builtin-slot-type-metadata-list ()
   '(trivial-types:proper-list builtin-slot-type-metadata))
 (common-lisp:defun |make-builtin-slot-type-metadata-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            builtin-slot-type-metadata))
   aws-sdk/generator/shape::members))
(common-lisp:deftype builtin-slot-type-signature () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype channel-configuration-map () 'common-lisp:hash-table)
 (common-lisp:defun |make-channel-configuration-map|
                    (aws-sdk/generator/shape::key-values)
   (common-lisp:etypecase aws-sdk/generator/shape::key-values
     (common-lisp:hash-table aws-sdk/generator/shape::key-values)
     (common-lisp:list
      (alexandria:alist-hash-table aws-sdk/generator/shape::key-values)))))
(common-lisp:deftype channel-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (code-hook (:copier common-lisp:nil)
      (:conc-name "struct-shape-code-hook-"))
   (uri (common-lisp:error ":uri is required") :type
    (common-lisp:or lambda-arn common-lisp:null))
   (message-version (common-lisp:error ":messageversion is required") :type
    (common-lisp:or message-version common-lisp:null)))
 (common-lisp:export (common-lisp:list 'code-hook 'make-code-hook))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input code-hook))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input code-hook))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'uri))
      (common-lisp:list
       (common-lisp:cons "uri"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'message-version))
      (common-lisp:list
       (common-lisp:cons "messageVersion"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input code-hook))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:define-condition conflict-exception
     (lex-models-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       conflict-exception-message)))
 (common-lisp:export
  (common-lisp:list 'conflict-exception 'conflict-exception-message)))
(common-lisp:deftype content-string () 'common-lisp:string)
(common-lisp:deftype content-type () 'common-lisp:string)
(common-lisp:deftype count () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:defstruct
     (create-bot-version-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-bot-version-request-"))
   (name (common-lisp:error ":name is required") :type
    (common-lisp:or bot-name common-lisp:null))
   (checksum common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-bot-version-request
                    'make-create-bot-version-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-bot-version-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-bot-version-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'checksum))
      (common-lisp:list
       (common-lisp:cons "checksum"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-bot-version-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-bot-version-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-bot-version-response-"))
   (name common-lisp:nil :type (common-lisp:or bot-name common-lisp:null))
   (description common-lisp:nil :type
    (common-lisp:or description common-lisp:null))
   (intents common-lisp:nil :type
    (common-lisp:or intent-list common-lisp:null))
   (clarification-prompt common-lisp:nil :type
    (common-lisp:or prompt common-lisp:null))
   (abort-statement common-lisp:nil :type
    (common-lisp:or statement common-lisp:null))
   (status common-lisp:nil :type (common-lisp:or status common-lisp:null))
   (failure-reason common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (last-updated-date common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null))
   (created-date common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null))
   (idle-session-ttlin-seconds common-lisp:nil :type
    (common-lisp:or session-ttl common-lisp:null))
   (voice-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (checksum common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (version common-lisp:nil :type (common-lisp:or version common-lisp:null))
   (locale common-lisp:nil :type (common-lisp:or locale common-lisp:null))
   (child-directed common-lisp:nil :type
    (common-lisp:or boolean common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-bot-version-response
                    'make-create-bot-version-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-bot-version-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-bot-version-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'intents))
      (common-lisp:list
       (common-lisp:cons "intents"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'clarification-prompt))
      (common-lisp:list
       (common-lisp:cons "clarificationPrompt"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'abort-statement))
      (common-lisp:list
       (common-lisp:cons "abortStatement"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'failure-reason))
      (common-lisp:list
       (common-lisp:cons "failureReason"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'last-updated-date))
      (common-lisp:list
       (common-lisp:cons "lastUpdatedDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created-date))
      (common-lisp:list
       (common-lisp:cons "createdDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'idle-session-ttlin-seconds))
      (common-lisp:list
       (common-lisp:cons "idleSessionTTLInSeconds"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'voice-id))
      (common-lisp:list
       (common-lisp:cons "voiceId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'checksum))
      (common-lisp:list
       (common-lisp:cons "checksum"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'version))
      (common-lisp:list
       (common-lisp:cons "version"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'locale))
      (common-lisp:list
       (common-lisp:cons "locale"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'child-directed))
      (common-lisp:list
       (common-lisp:cons "childDirected"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-bot-version-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-intent-version-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-intent-version-request-"))
   (name (common-lisp:error ":name is required") :type
    (common-lisp:or intent-name common-lisp:null))
   (checksum common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-intent-version-request
                    'make-create-intent-version-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-intent-version-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-intent-version-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'checksum))
      (common-lisp:list
       (common-lisp:cons "checksum"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-intent-version-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-intent-version-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-intent-version-response-"))
   (name common-lisp:nil :type (common-lisp:or intent-name common-lisp:null))
   (description common-lisp:nil :type
    (common-lisp:or description common-lisp:null))
   (slots common-lisp:nil :type (common-lisp:or slot-list common-lisp:null))
   (sample-utterances common-lisp:nil :type
    (common-lisp:or intent-utterance-list common-lisp:null))
   (confirmation-prompt common-lisp:nil :type
    (common-lisp:or prompt common-lisp:null))
   (rejection-statement common-lisp:nil :type
    (common-lisp:or statement common-lisp:null))
   (follow-up-prompt common-lisp:nil :type
    (common-lisp:or follow-up-prompt common-lisp:null))
   (conclusion-statement common-lisp:nil :type
    (common-lisp:or statement common-lisp:null))
   (dialog-code-hook common-lisp:nil :type
    (common-lisp:or code-hook common-lisp:null))
   (fulfillment-activity common-lisp:nil :type
    (common-lisp:or fulfillment-activity common-lisp:null))
   (parent-intent-signature common-lisp:nil :type
    (common-lisp:or builtin-intent-signature common-lisp:null))
   (last-updated-date common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null))
   (created-date common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null))
   (version common-lisp:nil :type (common-lisp:or version common-lisp:null))
   (checksum common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-intent-version-response
                    'make-create-intent-version-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-intent-version-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-intent-version-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'slots))
      (common-lisp:list
       (common-lisp:cons "slots"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'sample-utterances))
      (common-lisp:list
       (common-lisp:cons "sampleUtterances"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'confirmation-prompt))
      (common-lisp:list
       (common-lisp:cons "confirmationPrompt"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'rejection-statement))
      (common-lisp:list
       (common-lisp:cons "rejectionStatement"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'follow-up-prompt))
      (common-lisp:list
       (common-lisp:cons "followUpPrompt"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'conclusion-statement))
      (common-lisp:list
       (common-lisp:cons "conclusionStatement"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'dialog-code-hook))
      (common-lisp:list
       (common-lisp:cons "dialogCodeHook"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'fulfillment-activity))
      (common-lisp:list
       (common-lisp:cons "fulfillmentActivity"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'parent-intent-signature))
      (common-lisp:list
       (common-lisp:cons "parentIntentSignature"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'last-updated-date))
      (common-lisp:list
       (common-lisp:cons "lastUpdatedDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created-date))
      (common-lisp:list
       (common-lisp:cons "createdDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'version))
      (common-lisp:list
       (common-lisp:cons "version"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'checksum))
      (common-lisp:list
       (common-lisp:cons "checksum"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-intent-version-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-slot-type-version-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-slot-type-version-request-"))
   (name (common-lisp:error ":name is required") :type
    (common-lisp:or slot-type-name common-lisp:null))
   (checksum common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-slot-type-version-request
                    'make-create-slot-type-version-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-slot-type-version-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-slot-type-version-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'checksum))
      (common-lisp:list
       (common-lisp:cons "checksum"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-slot-type-version-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-slot-type-version-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-slot-type-version-response-"))
   (name common-lisp:nil :type
    (common-lisp:or slot-type-name common-lisp:null))
   (description common-lisp:nil :type
    (common-lisp:or description common-lisp:null))
   (enumeration-values common-lisp:nil :type
    (common-lisp:or enumeration-values common-lisp:null))
   (last-updated-date common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null))
   (created-date common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null))
   (version common-lisp:nil :type (common-lisp:or version common-lisp:null))
   (checksum common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-slot-type-version-response
                    'make-create-slot-type-version-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-slot-type-version-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-slot-type-version-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'enumeration-values))
      (common-lisp:list
       (common-lisp:cons "enumerationValues"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'last-updated-date))
      (common-lisp:list
       (common-lisp:cons "lastUpdatedDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created-date))
      (common-lisp:list
       (common-lisp:cons "createdDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'version))
      (common-lisp:list
       (common-lisp:cons "version"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'checksum))
      (common-lisp:list
       (common-lisp:cons "checksum"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-slot-type-version-response))
   common-lisp:nil))
(common-lisp:deftype custom-or-builtin-slot-type-name () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (delete-bot-alias-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-bot-alias-request-"))
   (name (common-lisp:error ":name is required") :type
    (common-lisp:or alias-name common-lisp:null))
   (bot-name (common-lisp:error ":botname is required") :type
    (common-lisp:or bot-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-bot-alias-request 'make-delete-bot-alias-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-bot-alias-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-bot-alias-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-bot-alias-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-bot-channel-association-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-bot-channel-association-request-"))
   (name (common-lisp:error ":name is required") :type
    (common-lisp:or bot-channel-name common-lisp:null))
   (bot-name (common-lisp:error ":botname is required") :type
    (common-lisp:or bot-name common-lisp:null))
   (bot-alias (common-lisp:error ":botalias is required") :type
    (common-lisp:or alias-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-bot-channel-association-request
                    'make-delete-bot-channel-association-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-bot-channel-association-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-bot-channel-association-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-bot-channel-association-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-bot-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-bot-request-"))
   (name (common-lisp:error ":name is required") :type
    (common-lisp:or bot-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-bot-request 'make-delete-bot-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input delete-bot-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input delete-bot-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input delete-bot-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-bot-version-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-bot-version-request-"))
   (name (common-lisp:error ":name is required") :type
    (common-lisp:or bot-name common-lisp:null))
   (version (common-lisp:error ":version is required") :type
    (common-lisp:or numerical-version common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-bot-version-request
                    'make-delete-bot-version-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-bot-version-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-bot-version-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-bot-version-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-intent-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-intent-request-"))
   (name (common-lisp:error ":name is required") :type
    (common-lisp:or intent-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-intent-request 'make-delete-intent-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-intent-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-intent-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-intent-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-intent-version-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-intent-version-request-"))
   (name (common-lisp:error ":name is required") :type
    (common-lisp:or intent-name common-lisp:null))
   (version (common-lisp:error ":version is required") :type
    (common-lisp:or numerical-version common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-intent-version-request
                    'make-delete-intent-version-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-intent-version-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-intent-version-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-intent-version-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-slot-type-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-slot-type-request-"))
   (name (common-lisp:error ":name is required") :type
    (common-lisp:or slot-type-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-slot-type-request 'make-delete-slot-type-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-slot-type-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-slot-type-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-slot-type-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-slot-type-version-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-slot-type-version-request-"))
   (name (common-lisp:error ":name is required") :type
    (common-lisp:or slot-type-name common-lisp:null))
   (version (common-lisp:error ":version is required") :type
    (common-lisp:or numerical-version common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-slot-type-version-request
                    'make-delete-slot-type-version-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-slot-type-version-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-slot-type-version-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-slot-type-version-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-utterances-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-utterances-request-"))
   (bot-name (common-lisp:error ":botname is required") :type
    (common-lisp:or bot-name common-lisp:null))
   (user-id (common-lisp:error ":userid is required") :type
    (common-lisp:or user-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-utterances-request
                    'make-delete-utterances-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-utterances-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-utterances-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-utterances-request))
   common-lisp:nil))
(common-lisp:deftype description () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (enumeration-value (:copier common-lisp:nil)
      (:conc-name "struct-shape-enumeration-value-"))
   (value (common-lisp:error ":value is required") :type
    (common-lisp:or value common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'enumeration-value 'make-enumeration-value))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input enumeration-value))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input enumeration-value))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'value))
      (common-lisp:list
       (common-lisp:cons "value"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input enumeration-value))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype enumeration-values ()
   '(trivial-types:proper-list enumeration-value))
 (common-lisp:defun |make-enumeration-values|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list enumeration-value))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (follow-up-prompt (:copier common-lisp:nil)
      (:conc-name "struct-shape-follow-up-prompt-"))
   (prompt (common-lisp:error ":prompt is required") :type
    (common-lisp:or prompt common-lisp:null))
   (rejection-statement (common-lisp:error ":rejectionstatement is required")
    :type (common-lisp:or statement common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'follow-up-prompt 'make-follow-up-prompt))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input follow-up-prompt))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input follow-up-prompt))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'prompt))
      (common-lisp:list
       (common-lisp:cons "prompt"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'rejection-statement))
      (common-lisp:list
       (common-lisp:cons "rejectionStatement"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input follow-up-prompt))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (fulfillment-activity (:copier common-lisp:nil)
      (:conc-name "struct-shape-fulfillment-activity-"))
   (type (common-lisp:error ":type is required") :type
    (common-lisp:or fulfillment-activity-type common-lisp:null))
   (code-hook common-lisp:nil :type
    (common-lisp:or code-hook common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'fulfillment-activity 'make-fulfillment-activity))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input fulfillment-activity))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input fulfillment-activity))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'type))
      (common-lisp:list
       (common-lisp:cons "type"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'code-hook))
      (common-lisp:list
       (common-lisp:cons "codeHook"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input fulfillment-activity))
   common-lisp:nil))
(common-lisp:deftype fulfillment-activity-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (get-bot-alias-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-bot-alias-request-"))
   (name (common-lisp:error ":name is required") :type
    (common-lisp:or alias-name common-lisp:null))
   (bot-name (common-lisp:error ":botname is required") :type
    (common-lisp:or bot-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-bot-alias-request 'make-get-bot-alias-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-bot-alias-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-bot-alias-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-bot-alias-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-bot-alias-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-bot-alias-response-"))
   (name common-lisp:nil :type (common-lisp:or alias-name common-lisp:null))
   (description common-lisp:nil :type
    (common-lisp:or description common-lisp:null))
   (bot-version common-lisp:nil :type
    (common-lisp:or version common-lisp:null))
   (bot-name common-lisp:nil :type (common-lisp:or bot-name common-lisp:null))
   (last-updated-date common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null))
   (created-date common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null))
   (checksum common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-bot-alias-response 'make-get-bot-alias-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-bot-alias-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-bot-alias-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'bot-version))
      (common-lisp:list
       (common-lisp:cons "botVersion"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'bot-name))
      (common-lisp:list
       (common-lisp:cons "botName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'last-updated-date))
      (common-lisp:list
       (common-lisp:cons "lastUpdatedDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created-date))
      (common-lisp:list
       (common-lisp:cons "createdDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'checksum))
      (common-lisp:list
       (common-lisp:cons "checksum"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-bot-alias-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-bot-aliases-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-bot-aliases-request-"))
   (bot-name (common-lisp:error ":botname is required") :type
    (common-lisp:or bot-name common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or max-results common-lisp:null))
   (name-contains common-lisp:nil :type
    (common-lisp:or alias-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-bot-aliases-request 'make-get-bot-aliases-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-bot-aliases-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-bot-aliases-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-bot-aliases-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-bot-aliases-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-bot-aliases-response-"))
   (bot-aliases common-lisp:nil :type
    (common-lisp:or bot-alias-metadata-list common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-bot-aliases-response 'make-get-bot-aliases-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-bot-aliases-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-bot-aliases-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'bot-aliases))
      (common-lisp:list
       (common-lisp:cons "BotAliases"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "nextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-bot-aliases-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-bot-channel-association-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-bot-channel-association-request-"))
   (name (common-lisp:error ":name is required") :type
    (common-lisp:or bot-channel-name common-lisp:null))
   (bot-name (common-lisp:error ":botname is required") :type
    (common-lisp:or bot-name common-lisp:null))
   (bot-alias (common-lisp:error ":botalias is required") :type
    (common-lisp:or alias-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-bot-channel-association-request
                    'make-get-bot-channel-association-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-bot-channel-association-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-bot-channel-association-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-bot-channel-association-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-bot-channel-association-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-bot-channel-association-response-"))
   (name common-lisp:nil :type
    (common-lisp:or bot-channel-name common-lisp:null))
   (description common-lisp:nil :type
    (common-lisp:or description common-lisp:null))
   (bot-alias common-lisp:nil :type
    (common-lisp:or alias-name common-lisp:null))
   (bot-name common-lisp:nil :type (common-lisp:or bot-name common-lisp:null))
   (created-date common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null))
   (type common-lisp:nil :type (common-lisp:or channel-type common-lisp:null))
   (bot-configuration common-lisp:nil :type
    (common-lisp:or channel-configuration-map common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-bot-channel-association-response
                    'make-get-bot-channel-association-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-bot-channel-association-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-bot-channel-association-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'bot-alias))
      (common-lisp:list
       (common-lisp:cons "botAlias"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'bot-name))
      (common-lisp:list
       (common-lisp:cons "botName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created-date))
      (common-lisp:list
       (common-lisp:cons "createdDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'type))
      (common-lisp:list
       (common-lisp:cons "type"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'bot-configuration))
      (common-lisp:list
       (common-lisp:cons "botConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-bot-channel-association-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-bot-channel-associations-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-bot-channel-associations-request-"))
   (bot-name (common-lisp:error ":botname is required") :type
    (common-lisp:or bot-name common-lisp:null))
   (bot-alias (common-lisp:error ":botalias is required") :type
    (common-lisp:or alias-name-or-list-all common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or max-results common-lisp:null))
   (name-contains common-lisp:nil :type
    (common-lisp:or bot-channel-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-bot-channel-associations-request
                    'make-get-bot-channel-associations-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-bot-channel-associations-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-bot-channel-associations-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-bot-channel-associations-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-bot-channel-associations-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-bot-channel-associations-response-"))
   (bot-channel-associations common-lisp:nil :type
    (common-lisp:or bot-channel-association-list common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-bot-channel-associations-response
                    'make-get-bot-channel-associations-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-bot-channel-associations-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-bot-channel-associations-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'bot-channel-associations))
      (common-lisp:list
       (common-lisp:cons "botChannelAssociations"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "nextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-bot-channel-associations-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-bot-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-bot-request-"))
   (name (common-lisp:error ":name is required") :type
    (common-lisp:or bot-name common-lisp:null))
   (version-or-alias (common-lisp:error ":versionoralias is required") :type
    (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'get-bot-request 'make-get-bot-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input get-bot-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input get-bot-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input get-bot-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-bot-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-bot-response-"))
   (name common-lisp:nil :type (common-lisp:or bot-name common-lisp:null))
   (description common-lisp:nil :type
    (common-lisp:or description common-lisp:null))
   (intents common-lisp:nil :type
    (common-lisp:or intent-list common-lisp:null))
   (clarification-prompt common-lisp:nil :type
    (common-lisp:or prompt common-lisp:null))
   (abort-statement common-lisp:nil :type
    (common-lisp:or statement common-lisp:null))
   (status common-lisp:nil :type (common-lisp:or status common-lisp:null))
   (failure-reason common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (last-updated-date common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null))
   (created-date common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null))
   (idle-session-ttlin-seconds common-lisp:nil :type
    (common-lisp:or session-ttl common-lisp:null))
   (voice-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (checksum common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (version common-lisp:nil :type (common-lisp:or version common-lisp:null))
   (locale common-lisp:nil :type (common-lisp:or locale common-lisp:null))
   (child-directed common-lisp:nil :type
    (common-lisp:or boolean common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-bot-response 'make-get-bot-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input get-bot-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input get-bot-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'intents))
      (common-lisp:list
       (common-lisp:cons "intents"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'clarification-prompt))
      (common-lisp:list
       (common-lisp:cons "clarificationPrompt"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'abort-statement))
      (common-lisp:list
       (common-lisp:cons "abortStatement"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'failure-reason))
      (common-lisp:list
       (common-lisp:cons "failureReason"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'last-updated-date))
      (common-lisp:list
       (common-lisp:cons "lastUpdatedDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created-date))
      (common-lisp:list
       (common-lisp:cons "createdDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'idle-session-ttlin-seconds))
      (common-lisp:list
       (common-lisp:cons "idleSessionTTLInSeconds"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'voice-id))
      (common-lisp:list
       (common-lisp:cons "voiceId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'checksum))
      (common-lisp:list
       (common-lisp:cons "checksum"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'version))
      (common-lisp:list
       (common-lisp:cons "version"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'locale))
      (common-lisp:list
       (common-lisp:cons "locale"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'child-directed))
      (common-lisp:list
       (common-lisp:cons "childDirected"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input get-bot-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-bot-versions-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-bot-versions-request-"))
   (name (common-lisp:error ":name is required") :type
    (common-lisp:or bot-name common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or max-results common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-bot-versions-request 'make-get-bot-versions-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-bot-versions-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-bot-versions-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-bot-versions-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-bot-versions-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-bot-versions-response-"))
   (bots common-lisp:nil :type
    (common-lisp:or bot-metadata-list common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-bot-versions-response
                    'make-get-bot-versions-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-bot-versions-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-bot-versions-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'bots))
      (common-lisp:list
       (common-lisp:cons "bots"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "nextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-bot-versions-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-bots-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-bots-request-"))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or max-results common-lisp:null))
   (name-contains common-lisp:nil :type
    (common-lisp:or bot-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-bots-request 'make-get-bots-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input get-bots-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input get-bots-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input get-bots-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-bots-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-bots-response-"))
   (bots common-lisp:nil :type
    (common-lisp:or bot-metadata-list common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-bots-response 'make-get-bots-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input get-bots-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input get-bots-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'bots))
      (common-lisp:list
       (common-lisp:cons "bots"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "nextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input get-bots-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-builtin-intent-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-builtin-intent-request-"))
   (signature (common-lisp:error ":signature is required") :type
    (common-lisp:or builtin-intent-signature common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-builtin-intent-request
                    'make-get-builtin-intent-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-builtin-intent-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-builtin-intent-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-builtin-intent-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-builtin-intent-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-builtin-intent-response-"))
   (signature common-lisp:nil :type
    (common-lisp:or builtin-intent-signature common-lisp:null))
   (supported-locales common-lisp:nil :type
    (common-lisp:or locale-list common-lisp:null))
   (slots common-lisp:nil :type
    (common-lisp:or builtin-intent-slot-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-builtin-intent-response
                    'make-get-builtin-intent-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-builtin-intent-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-builtin-intent-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'signature))
      (common-lisp:list
       (common-lisp:cons "signature"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'supported-locales))
      (common-lisp:list
       (common-lisp:cons "supportedLocales"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'slots))
      (common-lisp:list
       (common-lisp:cons "slots"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-builtin-intent-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-builtin-intents-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-builtin-intents-request-"))
   (locale common-lisp:nil :type (common-lisp:or locale common-lisp:null))
   (signature-contains common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or max-results common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-builtin-intents-request
                    'make-get-builtin-intents-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-builtin-intents-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-builtin-intents-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-builtin-intents-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-builtin-intents-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-builtin-intents-response-"))
   (intents common-lisp:nil :type
    (common-lisp:or builtin-intent-metadata-list common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-builtin-intents-response
                    'make-get-builtin-intents-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-builtin-intents-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-builtin-intents-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'intents))
      (common-lisp:list
       (common-lisp:cons "intents"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "nextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-builtin-intents-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-builtin-slot-types-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-builtin-slot-types-request-"))
   (locale common-lisp:nil :type (common-lisp:or locale common-lisp:null))
   (signature-contains common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or max-results common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-builtin-slot-types-request
                    'make-get-builtin-slot-types-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-builtin-slot-types-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-builtin-slot-types-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-builtin-slot-types-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-builtin-slot-types-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-builtin-slot-types-response-"))
   (slot-types common-lisp:nil :type
    (common-lisp:or builtin-slot-type-metadata-list common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-builtin-slot-types-response
                    'make-get-builtin-slot-types-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-builtin-slot-types-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-builtin-slot-types-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'slot-types))
      (common-lisp:list
       (common-lisp:cons "slotTypes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "nextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-builtin-slot-types-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-intent-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-intent-request-"))
   (name (common-lisp:error ":name is required") :type
    (common-lisp:or intent-name common-lisp:null))
   (version (common-lisp:error ":version is required") :type
    (common-lisp:or version common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-intent-request 'make-get-intent-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input get-intent-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input get-intent-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input get-intent-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-intent-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-intent-response-"))
   (name common-lisp:nil :type (common-lisp:or intent-name common-lisp:null))
   (description common-lisp:nil :type
    (common-lisp:or description common-lisp:null))
   (slots common-lisp:nil :type (common-lisp:or slot-list common-lisp:null))
   (sample-utterances common-lisp:nil :type
    (common-lisp:or intent-utterance-list common-lisp:null))
   (confirmation-prompt common-lisp:nil :type
    (common-lisp:or prompt common-lisp:null))
   (rejection-statement common-lisp:nil :type
    (common-lisp:or statement common-lisp:null))
   (follow-up-prompt common-lisp:nil :type
    (common-lisp:or follow-up-prompt common-lisp:null))
   (conclusion-statement common-lisp:nil :type
    (common-lisp:or statement common-lisp:null))
   (dialog-code-hook common-lisp:nil :type
    (common-lisp:or code-hook common-lisp:null))
   (fulfillment-activity common-lisp:nil :type
    (common-lisp:or fulfillment-activity common-lisp:null))
   (parent-intent-signature common-lisp:nil :type
    (common-lisp:or builtin-intent-signature common-lisp:null))
   (last-updated-date common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null))
   (created-date common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null))
   (version common-lisp:nil :type (common-lisp:or version common-lisp:null))
   (checksum common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-intent-response 'make-get-intent-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input get-intent-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input get-intent-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'slots))
      (common-lisp:list
       (common-lisp:cons "slots"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'sample-utterances))
      (common-lisp:list
       (common-lisp:cons "sampleUtterances"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'confirmation-prompt))
      (common-lisp:list
       (common-lisp:cons "confirmationPrompt"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'rejection-statement))
      (common-lisp:list
       (common-lisp:cons "rejectionStatement"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'follow-up-prompt))
      (common-lisp:list
       (common-lisp:cons "followUpPrompt"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'conclusion-statement))
      (common-lisp:list
       (common-lisp:cons "conclusionStatement"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'dialog-code-hook))
      (common-lisp:list
       (common-lisp:cons "dialogCodeHook"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'fulfillment-activity))
      (common-lisp:list
       (common-lisp:cons "fulfillmentActivity"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'parent-intent-signature))
      (common-lisp:list
       (common-lisp:cons "parentIntentSignature"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'last-updated-date))
      (common-lisp:list
       (common-lisp:cons "lastUpdatedDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created-date))
      (common-lisp:list
       (common-lisp:cons "createdDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'version))
      (common-lisp:list
       (common-lisp:cons "version"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'checksum))
      (common-lisp:list
       (common-lisp:cons "checksum"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input get-intent-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-intent-versions-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-intent-versions-request-"))
   (name (common-lisp:error ":name is required") :type
    (common-lisp:or intent-name common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or max-results common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-intent-versions-request
                    'make-get-intent-versions-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-intent-versions-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-intent-versions-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-intent-versions-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-intent-versions-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-intent-versions-response-"))
   (intents common-lisp:nil :type
    (common-lisp:or intent-metadata-list common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-intent-versions-response
                    'make-get-intent-versions-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-intent-versions-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-intent-versions-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'intents))
      (common-lisp:list
       (common-lisp:cons "intents"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "nextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-intent-versions-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-intents-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-intents-request-"))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or max-results common-lisp:null))
   (name-contains common-lisp:nil :type
    (common-lisp:or intent-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-intents-request 'make-get-intents-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input get-intents-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input get-intents-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input get-intents-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-intents-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-intents-response-"))
   (intents common-lisp:nil :type
    (common-lisp:or intent-metadata-list common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-intents-response 'make-get-intents-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input get-intents-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input get-intents-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'intents))
      (common-lisp:list
       (common-lisp:cons "intents"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "nextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input get-intents-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-slot-type-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-slot-type-request-"))
   (name (common-lisp:error ":name is required") :type
    (common-lisp:or slot-type-name common-lisp:null))
   (version (common-lisp:error ":version is required") :type
    (common-lisp:or version common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-slot-type-request 'make-get-slot-type-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-slot-type-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-slot-type-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-slot-type-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-slot-type-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-slot-type-response-"))
   (name common-lisp:nil :type
    (common-lisp:or slot-type-name common-lisp:null))
   (description common-lisp:nil :type
    (common-lisp:or description common-lisp:null))
   (enumeration-values common-lisp:nil :type
    (common-lisp:or enumeration-values common-lisp:null))
   (last-updated-date common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null))
   (created-date common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null))
   (version common-lisp:nil :type (common-lisp:or version common-lisp:null))
   (checksum common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-slot-type-response 'make-get-slot-type-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-slot-type-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-slot-type-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'enumeration-values))
      (common-lisp:list
       (common-lisp:cons "enumerationValues"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'last-updated-date))
      (common-lisp:list
       (common-lisp:cons "lastUpdatedDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created-date))
      (common-lisp:list
       (common-lisp:cons "createdDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'version))
      (common-lisp:list
       (common-lisp:cons "version"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'checksum))
      (common-lisp:list
       (common-lisp:cons "checksum"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-slot-type-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-slot-type-versions-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-slot-type-versions-request-"))
   (name (common-lisp:error ":name is required") :type
    (common-lisp:or slot-type-name common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or max-results common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-slot-type-versions-request
                    'make-get-slot-type-versions-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-slot-type-versions-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-slot-type-versions-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-slot-type-versions-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-slot-type-versions-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-slot-type-versions-response-"))
   (slot-types common-lisp:nil :type
    (common-lisp:or slot-type-metadata-list common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-slot-type-versions-response
                    'make-get-slot-type-versions-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-slot-type-versions-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-slot-type-versions-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'slot-types))
      (common-lisp:list
       (common-lisp:cons "slotTypes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "nextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-slot-type-versions-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-slot-types-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-slot-types-request-"))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or max-results common-lisp:null))
   (name-contains common-lisp:nil :type
    (common-lisp:or slot-type-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-slot-types-request 'make-get-slot-types-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-slot-types-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-slot-types-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-slot-types-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-slot-types-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-slot-types-response-"))
   (slot-types common-lisp:nil :type
    (common-lisp:or slot-type-metadata-list common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-slot-types-response 'make-get-slot-types-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-slot-types-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-slot-types-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'slot-types))
      (common-lisp:list
       (common-lisp:cons "slotTypes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "nextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-slot-types-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-utterances-view-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-utterances-view-request-"))
   (bot-name (common-lisp:error ":botname is required") :type
    (common-lisp:or bot-name common-lisp:null))
   (bot-versions (common-lisp:error ":botversions is required") :type
    (common-lisp:or bot-versions common-lisp:null))
   (status-type (common-lisp:error ":statustype is required") :type
    (common-lisp:or status-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-utterances-view-request
                    'make-get-utterances-view-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-utterances-view-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-utterances-view-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-utterances-view-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-utterances-view-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-utterances-view-response-"))
   (bot-name common-lisp:nil :type (common-lisp:or bot-name common-lisp:null))
   (utterances common-lisp:nil :type
    (common-lisp:or lists-of-utterances common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-utterances-view-response
                    'make-get-utterances-view-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-utterances-view-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-utterances-view-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'bot-name))
      (common-lisp:list
       (common-lisp:cons "botName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'utterances))
      (common-lisp:list
       (common-lisp:cons "utterances"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-utterances-view-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (intent (:copier common-lisp:nil) (:conc-name "struct-shape-intent-"))
   (intent-name (common-lisp:error ":intentname is required") :type
    (common-lisp:or intent-name common-lisp:null))
   (intent-version (common-lisp:error ":intentversion is required") :type
    (common-lisp:or version common-lisp:null)))
 (common-lisp:export (common-lisp:list 'intent 'make-intent))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input intent))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input intent))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'intent-name))
      (common-lisp:list
       (common-lisp:cons "intentName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'intent-version))
      (common-lisp:list
       (common-lisp:cons "intentVersion"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input intent))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype intent-list () '(trivial-types:proper-list intent))
 (common-lisp:defun |make-intent-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list intent))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (intent-metadata (:copier common-lisp:nil)
      (:conc-name "struct-shape-intent-metadata-"))
   (name common-lisp:nil :type (common-lisp:or intent-name common-lisp:null))
   (description common-lisp:nil :type
    (common-lisp:or description common-lisp:null))
   (last-updated-date common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null))
   (created-date common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null))
   (version common-lisp:nil :type (common-lisp:or version common-lisp:null)))
 (common-lisp:export (common-lisp:list 'intent-metadata 'make-intent-metadata))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input intent-metadata))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input intent-metadata))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'last-updated-date))
      (common-lisp:list
       (common-lisp:cons "lastUpdatedDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created-date))
      (common-lisp:list
       (common-lisp:cons "createdDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'version))
      (common-lisp:list
       (common-lisp:cons "version"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input intent-metadata))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype intent-metadata-list ()
   '(trivial-types:proper-list intent-metadata))
 (common-lisp:defun |make-intent-metadata-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list intent-metadata))
   aws-sdk/generator/shape::members))
(common-lisp:deftype intent-name () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype intent-utterance-list ()
   '(trivial-types:proper-list utterance))
 (common-lisp:defun |make-intent-utterance-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list utterance))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:define-condition internal-failure-exception
     (lex-models-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       internal-failure-exception-message)))
 (common-lisp:export
  (common-lisp:list 'internal-failure-exception
                    'internal-failure-exception-message)))
(common-lisp:deftype lambda-arn () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:define-condition limit-exceeded-exception
     (lex-models-error)
     ((retry-after-seconds :initarg :retry-after-seconds :initform
       common-lisp:nil :reader limit-exceeded-exception-retry-after-seconds)
      (message :initarg :message :initform common-lisp:nil :reader
       limit-exceeded-exception-message)))
 (common-lisp:export
  (common-lisp:list 'limit-exceeded-exception
                    'limit-exceeded-exception-retry-after-seconds
                    'limit-exceeded-exception-message)))
(common-lisp:progn
 (common-lisp:deftype list-of-utterance ()
   '(trivial-types:proper-list utterance-data))
 (common-lisp:defun |make-list-of-utterance|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list utterance-data))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype lists-of-utterances ()
   '(trivial-types:proper-list utterance-list))
 (common-lisp:defun |make-lists-of-utterances|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list utterance-list))
   aws-sdk/generator/shape::members))
(common-lisp:deftype locale () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype locale-list () '(trivial-types:proper-list locale))
 (common-lisp:defun |make-locale-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list locale))
   aws-sdk/generator/shape::members))
(common-lisp:deftype max-results () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:defstruct
     (message (:copier common-lisp:nil) (:conc-name "struct-shape-message-"))
   (content-type (common-lisp:error ":contenttype is required") :type
    (common-lisp:or content-type common-lisp:null))
   (content (common-lisp:error ":content is required") :type
    (common-lisp:or content-string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'message 'make-message))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input message))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input message))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'content-type))
      (common-lisp:list
       (common-lisp:cons "contentType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'content))
      (common-lisp:list
       (common-lisp:cons "content"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input message))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype message-list () '(trivial-types:proper-list message))
 (common-lisp:defun |make-message-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list message))
   aws-sdk/generator/shape::members))
(common-lisp:deftype message-version () 'common-lisp:string)
(common-lisp:deftype name () 'common-lisp:string)
(common-lisp:deftype next-token () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:define-condition not-found-exception
     (lex-models-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       not-found-exception-message)))
 (common-lisp:export
  (common-lisp:list 'not-found-exception 'not-found-exception-message)))
(common-lisp:deftype numerical-version () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:define-condition precondition-failed-exception
     (lex-models-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       precondition-failed-exception-message)))
 (common-lisp:export
  (common-lisp:list 'precondition-failed-exception
                    'precondition-failed-exception-message)))
(common-lisp:deftype priority () 'common-lisp:integer)
(common-lisp:deftype process-behavior () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (prompt (:copier common-lisp:nil) (:conc-name "struct-shape-prompt-"))
   (messages (common-lisp:error ":messages is required") :type
    (common-lisp:or message-list common-lisp:null))
   (max-attempts (common-lisp:error ":maxattempts is required") :type
    (common-lisp:or prompt-max-attempts common-lisp:null))
   (response-card common-lisp:nil :type
    (common-lisp:or response-card common-lisp:null)))
 (common-lisp:export (common-lisp:list 'prompt 'make-prompt))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input prompt))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input prompt))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'messages))
      (common-lisp:list
       (common-lisp:cons "messages"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-attempts))
      (common-lisp:list
       (common-lisp:cons "maxAttempts"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'response-card))
      (common-lisp:list
       (common-lisp:cons "responseCard"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input prompt))
   common-lisp:nil))
(common-lisp:deftype prompt-max-attempts () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:defstruct
     (put-bot-alias-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-put-bot-alias-request-"))
   (name (common-lisp:error ":name is required") :type
    (common-lisp:or alias-name common-lisp:null))
   (description common-lisp:nil :type
    (common-lisp:or description common-lisp:null))
   (bot-version (common-lisp:error ":botversion is required") :type
    (common-lisp:or version common-lisp:null))
   (bot-name (common-lisp:error ":botname is required") :type
    (common-lisp:or bot-name common-lisp:null))
   (checksum common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'put-bot-alias-request 'make-put-bot-alias-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          put-bot-alias-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          put-bot-alias-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'bot-version))
      (common-lisp:list
       (common-lisp:cons "botVersion"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'checksum))
      (common-lisp:list
       (common-lisp:cons "checksum"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          put-bot-alias-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (put-bot-alias-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-put-bot-alias-response-"))
   (name common-lisp:nil :type (common-lisp:or alias-name common-lisp:null))
   (description common-lisp:nil :type
    (common-lisp:or description common-lisp:null))
   (bot-version common-lisp:nil :type
    (common-lisp:or version common-lisp:null))
   (bot-name common-lisp:nil :type (common-lisp:or bot-name common-lisp:null))
   (last-updated-date common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null))
   (created-date common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null))
   (checksum common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'put-bot-alias-response 'make-put-bot-alias-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          put-bot-alias-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          put-bot-alias-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'bot-version))
      (common-lisp:list
       (common-lisp:cons "botVersion"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'bot-name))
      (common-lisp:list
       (common-lisp:cons "botName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'last-updated-date))
      (common-lisp:list
       (common-lisp:cons "lastUpdatedDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created-date))
      (common-lisp:list
       (common-lisp:cons "createdDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'checksum))
      (common-lisp:list
       (common-lisp:cons "checksum"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          put-bot-alias-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (put-bot-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-put-bot-request-"))
   (name (common-lisp:error ":name is required") :type
    (common-lisp:or bot-name common-lisp:null))
   (description common-lisp:nil :type
    (common-lisp:or description common-lisp:null))
   (intents common-lisp:nil :type
    (common-lisp:or intent-list common-lisp:null))
   (clarification-prompt common-lisp:nil :type
    (common-lisp:or prompt common-lisp:null))
   (abort-statement common-lisp:nil :type
    (common-lisp:or statement common-lisp:null))
   (idle-session-ttlin-seconds common-lisp:nil :type
    (common-lisp:or session-ttl common-lisp:null))
   (voice-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (checksum common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (process-behavior common-lisp:nil :type
    (common-lisp:or process-behavior common-lisp:null))
   (locale (common-lisp:error ":locale is required") :type
    (common-lisp:or locale common-lisp:null))
   (child-directed (common-lisp:error ":childdirected is required") :type
    (common-lisp:or boolean common-lisp:null)))
 (common-lisp:export (common-lisp:list 'put-bot-request 'make-put-bot-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input put-bot-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input put-bot-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'intents))
      (common-lisp:list
       (common-lisp:cons "intents"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'clarification-prompt))
      (common-lisp:list
       (common-lisp:cons "clarificationPrompt"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'abort-statement))
      (common-lisp:list
       (common-lisp:cons "abortStatement"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'idle-session-ttlin-seconds))
      (common-lisp:list
       (common-lisp:cons "idleSessionTTLInSeconds"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'voice-id))
      (common-lisp:list
       (common-lisp:cons "voiceId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'checksum))
      (common-lisp:list
       (common-lisp:cons "checksum"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'process-behavior))
      (common-lisp:list
       (common-lisp:cons "processBehavior"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'locale))
      (common-lisp:list
       (common-lisp:cons "locale"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'child-directed))
      (common-lisp:list
       (common-lisp:cons "childDirected"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input put-bot-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (put-bot-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-put-bot-response-"))
   (name common-lisp:nil :type (common-lisp:or bot-name common-lisp:null))
   (description common-lisp:nil :type
    (common-lisp:or description common-lisp:null))
   (intents common-lisp:nil :type
    (common-lisp:or intent-list common-lisp:null))
   (clarification-prompt common-lisp:nil :type
    (common-lisp:or prompt common-lisp:null))
   (abort-statement common-lisp:nil :type
    (common-lisp:or statement common-lisp:null))
   (status common-lisp:nil :type (common-lisp:or status common-lisp:null))
   (failure-reason common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (last-updated-date common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null))
   (created-date common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null))
   (idle-session-ttlin-seconds common-lisp:nil :type
    (common-lisp:or session-ttl common-lisp:null))
   (voice-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (checksum common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (version common-lisp:nil :type (common-lisp:or version common-lisp:null))
   (locale common-lisp:nil :type (common-lisp:or locale common-lisp:null))
   (child-directed common-lisp:nil :type
    (common-lisp:or boolean common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'put-bot-response 'make-put-bot-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input put-bot-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input put-bot-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'intents))
      (common-lisp:list
       (common-lisp:cons "intents"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'clarification-prompt))
      (common-lisp:list
       (common-lisp:cons "clarificationPrompt"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'abort-statement))
      (common-lisp:list
       (common-lisp:cons "abortStatement"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'failure-reason))
      (common-lisp:list
       (common-lisp:cons "failureReason"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'last-updated-date))
      (common-lisp:list
       (common-lisp:cons "lastUpdatedDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created-date))
      (common-lisp:list
       (common-lisp:cons "createdDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'idle-session-ttlin-seconds))
      (common-lisp:list
       (common-lisp:cons "idleSessionTTLInSeconds"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'voice-id))
      (common-lisp:list
       (common-lisp:cons "voiceId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'checksum))
      (common-lisp:list
       (common-lisp:cons "checksum"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'version))
      (common-lisp:list
       (common-lisp:cons "version"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'locale))
      (common-lisp:list
       (common-lisp:cons "locale"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'child-directed))
      (common-lisp:list
       (common-lisp:cons "childDirected"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input put-bot-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (put-intent-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-put-intent-request-"))
   (name (common-lisp:error ":name is required") :type
    (common-lisp:or intent-name common-lisp:null))
   (description common-lisp:nil :type
    (common-lisp:or description common-lisp:null))
   (slots common-lisp:nil :type (common-lisp:or slot-list common-lisp:null))
   (sample-utterances common-lisp:nil :type
    (common-lisp:or intent-utterance-list common-lisp:null))
   (confirmation-prompt common-lisp:nil :type
    (common-lisp:or prompt common-lisp:null))
   (rejection-statement common-lisp:nil :type
    (common-lisp:or statement common-lisp:null))
   (follow-up-prompt common-lisp:nil :type
    (common-lisp:or follow-up-prompt common-lisp:null))
   (conclusion-statement common-lisp:nil :type
    (common-lisp:or statement common-lisp:null))
   (dialog-code-hook common-lisp:nil :type
    (common-lisp:or code-hook common-lisp:null))
   (fulfillment-activity common-lisp:nil :type
    (common-lisp:or fulfillment-activity common-lisp:null))
   (parent-intent-signature common-lisp:nil :type
    (common-lisp:or builtin-intent-signature common-lisp:null))
   (checksum common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'put-intent-request 'make-put-intent-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input put-intent-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input put-intent-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'slots))
      (common-lisp:list
       (common-lisp:cons "slots"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'sample-utterances))
      (common-lisp:list
       (common-lisp:cons "sampleUtterances"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'confirmation-prompt))
      (common-lisp:list
       (common-lisp:cons "confirmationPrompt"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'rejection-statement))
      (common-lisp:list
       (common-lisp:cons "rejectionStatement"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'follow-up-prompt))
      (common-lisp:list
       (common-lisp:cons "followUpPrompt"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'conclusion-statement))
      (common-lisp:list
       (common-lisp:cons "conclusionStatement"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'dialog-code-hook))
      (common-lisp:list
       (common-lisp:cons "dialogCodeHook"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'fulfillment-activity))
      (common-lisp:list
       (common-lisp:cons "fulfillmentActivity"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'parent-intent-signature))
      (common-lisp:list
       (common-lisp:cons "parentIntentSignature"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'checksum))
      (common-lisp:list
       (common-lisp:cons "checksum"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input put-intent-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (put-intent-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-put-intent-response-"))
   (name common-lisp:nil :type (common-lisp:or intent-name common-lisp:null))
   (description common-lisp:nil :type
    (common-lisp:or description common-lisp:null))
   (slots common-lisp:nil :type (common-lisp:or slot-list common-lisp:null))
   (sample-utterances common-lisp:nil :type
    (common-lisp:or intent-utterance-list common-lisp:null))
   (confirmation-prompt common-lisp:nil :type
    (common-lisp:or prompt common-lisp:null))
   (rejection-statement common-lisp:nil :type
    (common-lisp:or statement common-lisp:null))
   (follow-up-prompt common-lisp:nil :type
    (common-lisp:or follow-up-prompt common-lisp:null))
   (conclusion-statement common-lisp:nil :type
    (common-lisp:or statement common-lisp:null))
   (dialog-code-hook common-lisp:nil :type
    (common-lisp:or code-hook common-lisp:null))
   (fulfillment-activity common-lisp:nil :type
    (common-lisp:or fulfillment-activity common-lisp:null))
   (parent-intent-signature common-lisp:nil :type
    (common-lisp:or builtin-intent-signature common-lisp:null))
   (last-updated-date common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null))
   (created-date common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null))
   (version common-lisp:nil :type (common-lisp:or version common-lisp:null))
   (checksum common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'put-intent-response 'make-put-intent-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input put-intent-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input put-intent-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'slots))
      (common-lisp:list
       (common-lisp:cons "slots"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'sample-utterances))
      (common-lisp:list
       (common-lisp:cons "sampleUtterances"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'confirmation-prompt))
      (common-lisp:list
       (common-lisp:cons "confirmationPrompt"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'rejection-statement))
      (common-lisp:list
       (common-lisp:cons "rejectionStatement"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'follow-up-prompt))
      (common-lisp:list
       (common-lisp:cons "followUpPrompt"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'conclusion-statement))
      (common-lisp:list
       (common-lisp:cons "conclusionStatement"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'dialog-code-hook))
      (common-lisp:list
       (common-lisp:cons "dialogCodeHook"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'fulfillment-activity))
      (common-lisp:list
       (common-lisp:cons "fulfillmentActivity"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'parent-intent-signature))
      (common-lisp:list
       (common-lisp:cons "parentIntentSignature"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'last-updated-date))
      (common-lisp:list
       (common-lisp:cons "lastUpdatedDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created-date))
      (common-lisp:list
       (common-lisp:cons "createdDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'version))
      (common-lisp:list
       (common-lisp:cons "version"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'checksum))
      (common-lisp:list
       (common-lisp:cons "checksum"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input put-intent-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (put-slot-type-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-put-slot-type-request-"))
   (name (common-lisp:error ":name is required") :type
    (common-lisp:or slot-type-name common-lisp:null))
   (description common-lisp:nil :type
    (common-lisp:or description common-lisp:null))
   (enumeration-values common-lisp:nil :type
    (common-lisp:or enumeration-values common-lisp:null))
   (checksum common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'put-slot-type-request 'make-put-slot-type-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          put-slot-type-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          put-slot-type-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'enumeration-values))
      (common-lisp:list
       (common-lisp:cons "enumerationValues"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'checksum))
      (common-lisp:list
       (common-lisp:cons "checksum"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          put-slot-type-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (put-slot-type-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-put-slot-type-response-"))
   (name common-lisp:nil :type
    (common-lisp:or slot-type-name common-lisp:null))
   (description common-lisp:nil :type
    (common-lisp:or description common-lisp:null))
   (enumeration-values common-lisp:nil :type
    (common-lisp:or enumeration-values common-lisp:null))
   (last-updated-date common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null))
   (created-date common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null))
   (version common-lisp:nil :type (common-lisp:or version common-lisp:null))
   (checksum common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'put-slot-type-response 'make-put-slot-type-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          put-slot-type-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          put-slot-type-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'enumeration-values))
      (common-lisp:list
       (common-lisp:cons "enumerationValues"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'last-updated-date))
      (common-lisp:list
       (common-lisp:cons "lastUpdatedDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created-date))
      (common-lisp:list
       (common-lisp:cons "createdDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'version))
      (common-lisp:list
       (common-lisp:cons "version"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'checksum))
      (common-lisp:list
       (common-lisp:cons "checksum"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          put-slot-type-response))
   common-lisp:nil))
(common-lisp:deftype reference-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:define-condition resource-in-use-exception
     (lex-models-error)
     ((reference-type :initarg :reference-type :initform common-lisp:nil
       :reader resource-in-use-exception-reference-type)
      (example-reference :initarg :example-reference :initform common-lisp:nil
       :reader resource-in-use-exception-example-reference)))
 (common-lisp:export
  (common-lisp:list 'resource-in-use-exception
                    'resource-in-use-exception-reference-type
                    'resource-in-use-exception-example-reference)))
(common-lisp:progn
 (common-lisp:defstruct
     (resource-reference (:copier common-lisp:nil)
      (:conc-name "struct-shape-resource-reference-"))
   (name common-lisp:nil :type (common-lisp:or name common-lisp:null))
   (version common-lisp:nil :type (common-lisp:or version common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'resource-reference 'make-resource-reference))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input resource-reference))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input resource-reference))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'version))
      (common-lisp:list
       (common-lisp:cons "version"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input resource-reference))
   common-lisp:nil))
(common-lisp:deftype response-card () 'common-lisp:string)
(common-lisp:deftype session-ttl () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:defstruct
     (slot (:copier common-lisp:nil) (:conc-name "struct-shape-slot-"))
   (name (common-lisp:error ":name is required") :type
    (common-lisp:or slot-name common-lisp:null))
   (description common-lisp:nil :type
    (common-lisp:or description common-lisp:null))
   (slot-constraint (common-lisp:error ":slotconstraint is required") :type
    (common-lisp:or slot-constraint common-lisp:null))
   (slot-type common-lisp:nil :type
    (common-lisp:or custom-or-builtin-slot-type-name common-lisp:null))
   (slot-type-version common-lisp:nil :type
    (common-lisp:or version common-lisp:null))
   (value-elicitation-prompt common-lisp:nil :type
    (common-lisp:or prompt common-lisp:null))
   (priority common-lisp:nil :type (common-lisp:or priority common-lisp:null))
   (sample-utterances common-lisp:nil :type
    (common-lisp:or slot-utterance-list common-lisp:null))
   (response-card common-lisp:nil :type
    (common-lisp:or response-card common-lisp:null)))
 (common-lisp:export (common-lisp:list 'slot 'make-slot))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input slot))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input slot))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'slot-constraint))
      (common-lisp:list
       (common-lisp:cons "slotConstraint"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'slot-type))
      (common-lisp:list
       (common-lisp:cons "slotType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'slot-type-version))
      (common-lisp:list
       (common-lisp:cons "slotTypeVersion"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'value-elicitation-prompt))
      (common-lisp:list
       (common-lisp:cons "valueElicitationPrompt"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'priority))
      (common-lisp:list
       (common-lisp:cons "priority"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'sample-utterances))
      (common-lisp:list
       (common-lisp:cons "sampleUtterances"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'response-card))
      (common-lisp:list
       (common-lisp:cons "responseCard"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input slot))
   common-lisp:nil))
(common-lisp:deftype slot-constraint () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype slot-list () '(trivial-types:proper-list slot))
 (common-lisp:defun |make-slot-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list slot))
   aws-sdk/generator/shape::members))
(common-lisp:deftype slot-name () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (slot-type-metadata (:copier common-lisp:nil)
      (:conc-name "struct-shape-slot-type-metadata-"))
   (name common-lisp:nil :type
    (common-lisp:or slot-type-name common-lisp:null))
   (description common-lisp:nil :type
    (common-lisp:or description common-lisp:null))
   (last-updated-date common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null))
   (created-date common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null))
   (version common-lisp:nil :type (common-lisp:or version common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'slot-type-metadata 'make-slot-type-metadata))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input slot-type-metadata))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input slot-type-metadata))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'last-updated-date))
      (common-lisp:list
       (common-lisp:cons "lastUpdatedDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created-date))
      (common-lisp:list
       (common-lisp:cons "createdDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'version))
      (common-lisp:list
       (common-lisp:cons "version"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input slot-type-metadata))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype slot-type-metadata-list ()
   '(trivial-types:proper-list slot-type-metadata))
 (common-lisp:defun |make-slot-type-metadata-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list slot-type-metadata))
   aws-sdk/generator/shape::members))
(common-lisp:deftype slot-type-name () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype slot-utterance-list ()
   '(trivial-types:proper-list utterance))
 (common-lisp:defun |make-slot-utterance-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list utterance))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (statement (:copier common-lisp:nil)
      (:conc-name "struct-shape-statement-"))
   (messages (common-lisp:error ":messages is required") :type
    (common-lisp:or message-list common-lisp:null))
   (response-card common-lisp:nil :type
    (common-lisp:or response-card common-lisp:null)))
 (common-lisp:export (common-lisp:list 'statement 'make-statement))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input statement))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input statement))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'messages))
      (common-lisp:list
       (common-lisp:cons "messages"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'response-card))
      (common-lisp:list
       (common-lisp:cons "responseCard"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input statement))
   common-lisp:nil))
(common-lisp:deftype status () 'common-lisp:string)
(common-lisp:deftype status-type () 'common-lisp:string)
(common-lisp:deftype string () 'common-lisp:string)
(common-lisp:deftype timestamp () 'common-lisp:string)
(common-lisp:deftype user-id () 'common-lisp:string)
(common-lisp:deftype utterance () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (utterance-data (:copier common-lisp:nil)
      (:conc-name "struct-shape-utterance-data-"))
   (utterance-string common-lisp:nil :type
    (common-lisp:or utterance-string common-lisp:null))
   (count common-lisp:nil :type (common-lisp:or count common-lisp:null))
   (distinct-users common-lisp:nil :type
    (common-lisp:or count common-lisp:null))
   (first-uttered-date common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null))
   (last-uttered-date common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null)))
 (common-lisp:export (common-lisp:list 'utterance-data 'make-utterance-data))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input utterance-data))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input utterance-data))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'utterance-string))
      (common-lisp:list
       (common-lisp:cons "utteranceString"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'count))
      (common-lisp:list
       (common-lisp:cons "count"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'distinct-users))
      (common-lisp:list
       (common-lisp:cons "distinctUsers"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'first-uttered-date))
      (common-lisp:list
       (common-lisp:cons "firstUtteredDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'last-uttered-date))
      (common-lisp:list
       (common-lisp:cons "lastUtteredDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input utterance-data))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (utterance-list (:copier common-lisp:nil)
      (:conc-name "struct-shape-utterance-list-"))
   (bot-version common-lisp:nil :type
    (common-lisp:or version common-lisp:null))
   (utterances common-lisp:nil :type
    (common-lisp:or list-of-utterance common-lisp:null)))
 (common-lisp:export (common-lisp:list 'utterance-list 'make-utterance-list))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input utterance-list))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input utterance-list))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'bot-version))
      (common-lisp:list
       (common-lisp:cons "botVersion"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'utterances))
      (common-lisp:list
       (common-lisp:cons "utterances"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input utterance-list))
   common-lisp:nil))
(common-lisp:deftype utterance-string () 'common-lisp:string)
(common-lisp:deftype value () 'common-lisp:string)
(common-lisp:deftype version () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defun create-bot-version
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key name checksum)
   (common-lisp:declare (common-lisp:ignorable name checksum))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-bot-version-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'lex-models-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/bots/~A/versions"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'name))))
                                                        "CreateBotVersion"
                                                        "2017-04-19"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'create-bot-version))
(common-lisp:progn
 (common-lisp:defun create-intent-version
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key name checksum)
   (common-lisp:declare (common-lisp:ignorable name checksum))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-intent-version-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'lex-models-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/intents/~A/versions"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'name))))
                                                        "CreateIntentVersion"
                                                        "2017-04-19"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'create-intent-version))
(common-lisp:progn
 (common-lisp:defun create-slot-type-version
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key name checksum)
   (common-lisp:declare (common-lisp:ignorable name checksum))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-slot-type-version-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'lex-models-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/slottypes/~A/versions"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'name))))
                                                        "CreateSlotTypeVersion"
                                                        "2017-04-19"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'create-slot-type-version))
(common-lisp:progn
 (common-lisp:defun delete-bot
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key name)
   (common-lisp:declare (common-lisp:ignorable name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-bot-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'lex-models-request
                                                        aws-sdk/generator/operation::input
                                                        "DELETE"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/bots/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'name))))
                                                        "DeleteBot"
                                                        "2017-04-19"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'delete-bot))
(common-lisp:progn
 (common-lisp:defun delete-bot-alias
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key name bot-name)
   (common-lisp:declare (common-lisp:ignorable name bot-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-bot-alias-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'lex-models-request
                                                        aws-sdk/generator/operation::input
                                                        "DELETE"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/bots/~A/aliases/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'bot-name))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'name))))
                                                        "DeleteBotAlias"
                                                        "2017-04-19"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'delete-bot-alias))
(common-lisp:progn
 (common-lisp:defun delete-bot-channel-association
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key name bot-name bot-alias)
   (common-lisp:declare (common-lisp:ignorable name bot-name bot-alias))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-delete-bot-channel-association-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'lex-models-request
                                                        aws-sdk/generator/operation::input
                                                        "DELETE"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/bots/~A/aliases/~A/channels/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'bot-name))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'alias-name))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'name))))
                                                        "DeleteBotChannelAssociation"
                                                        "2017-04-19"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'delete-bot-channel-association))
(common-lisp:progn
 (common-lisp:defun delete-bot-version
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key name version)
   (common-lisp:declare (common-lisp:ignorable name version))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-bot-version-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'lex-models-request
                                                        aws-sdk/generator/operation::input
                                                        "DELETE"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/bots/~A/versions/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'name))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'version))))
                                                        "DeleteBotVersion"
                                                        "2017-04-19"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'delete-bot-version))
(common-lisp:progn
 (common-lisp:defun delete-intent
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key name)
   (common-lisp:declare (common-lisp:ignorable name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-intent-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'lex-models-request
                                                        aws-sdk/generator/operation::input
                                                        "DELETE"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/intents/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'name))))
                                                        "DeleteIntent"
                                                        "2017-04-19"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'delete-intent))
(common-lisp:progn
 (common-lisp:defun delete-intent-version
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key name version)
   (common-lisp:declare (common-lisp:ignorable name version))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-intent-version-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'lex-models-request
                                                        aws-sdk/generator/operation::input
                                                        "DELETE"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/intents/~A/versions/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'name))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'version))))
                                                        "DeleteIntentVersion"
                                                        "2017-04-19"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'delete-intent-version))
(common-lisp:progn
 (common-lisp:defun delete-slot-type
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key name)
   (common-lisp:declare (common-lisp:ignorable name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-slot-type-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'lex-models-request
                                                        aws-sdk/generator/operation::input
                                                        "DELETE"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/slottypes/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'name))))
                                                        "DeleteSlotType"
                                                        "2017-04-19"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'delete-slot-type))
(common-lisp:progn
 (common-lisp:defun delete-slot-type-version
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key name version)
   (common-lisp:declare (common-lisp:ignorable name version))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-slot-type-version-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'lex-models-request
                                                        aws-sdk/generator/operation::input
                                                        "DELETE"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/slottypes/~A/version/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'name))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'version))))
                                                        "DeleteSlotTypeVersion"
                                                        "2017-04-19"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'delete-slot-type-version))
(common-lisp:progn
 (common-lisp:defun delete-utterances
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key bot-name user-id)
   (common-lisp:declare (common-lisp:ignorable bot-name user-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-utterances-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'lex-models-request
                                                        aws-sdk/generator/operation::input
                                                        "DELETE"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/bots/~A/utterances/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'bot-name))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'user-id))))
                                                        "DeleteUtterances"
                                                        "2017-04-19"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'delete-utterances))
(common-lisp:progn
 (common-lisp:defun get-bot
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key name version-or-alias)
   (common-lisp:declare (common-lisp:ignorable name version-or-alias))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-bot-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'lex-models-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/bots/~A/versions/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'name))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'versionoralias))))
                                                        "GetBot" "2017-04-19"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-bot))
(common-lisp:progn
 (common-lisp:defun get-bot-alias
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key name bot-name)
   (common-lisp:declare (common-lisp:ignorable name bot-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-bot-alias-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'lex-models-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/bots/~A/aliases/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'bot-name))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'name))))
                                                        "GetBotAlias"
                                                        "2017-04-19"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-bot-alias))
(common-lisp:progn
 (common-lisp:defun get-bot-aliases
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key bot-name next-token max-results
                     name-contains)
   (common-lisp:declare
    (common-lisp:ignorable bot-name next-token max-results name-contains))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-bot-aliases-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'lex-models-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/bots/~A/aliases/"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'bot-name))))
                                                        "GetBotAliases"
                                                        "2017-04-19"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-bot-aliases))
(common-lisp:progn
 (common-lisp:defun get-bot-channel-association
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key name bot-name bot-alias)
   (common-lisp:declare (common-lisp:ignorable name bot-name bot-alias))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-get-bot-channel-association-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'lex-models-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/bots/~A/aliases/~A/channels/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'bot-name))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'alias-name))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'name))))
                                                        "GetBotChannelAssociation"
                                                        "2017-04-19"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-bot-channel-association))
(common-lisp:progn
 (common-lisp:defun get-bot-channel-associations
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key bot-name bot-alias next-token max-results
                     name-contains)
   (common-lisp:declare
    (common-lisp:ignorable bot-name bot-alias next-token max-results
     name-contains))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-get-bot-channel-associations-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'lex-models-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/bots/~A/aliases/~A/channels/"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'bot-name))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'alias-name))))
                                                        "GetBotChannelAssociations"
                                                        "2017-04-19"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-bot-channel-associations))
(common-lisp:progn
 (common-lisp:defun get-bot-versions
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key name next-token max-results)
   (common-lisp:declare (common-lisp:ignorable name next-token max-results))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-bot-versions-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'lex-models-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/bots/~A/versions/"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'name))))
                                                        "GetBotVersions"
                                                        "2017-04-19"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-bot-versions))
(common-lisp:progn
 (common-lisp:defun get-bots
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key next-token max-results name-contains)
   (common-lisp:declare
    (common-lisp:ignorable next-token max-results name-contains))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-bots-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'lex-models-request
                                                        aws-sdk/generator/operation::input
                                                        "GET" "/bots/"
                                                        "GetBots"
                                                        "2017-04-19"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-bots))
(common-lisp:progn
 (common-lisp:defun get-builtin-intent
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key signature)
   (common-lisp:declare (common-lisp:ignorable signature))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-builtin-intent-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'lex-models-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/builtins/intents/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'signature))))
                                                        "GetBuiltinIntent"
                                                        "2017-04-19"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-builtin-intent))
(common-lisp:progn
 (common-lisp:defun get-builtin-intents
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key locale signature-contains next-token
                     max-results)
   (common-lisp:declare
    (common-lisp:ignorable locale signature-contains next-token max-results))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-builtin-intents-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'lex-models-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        "/builtins/intents/"
                                                        "GetBuiltinIntents"
                                                        "2017-04-19"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-builtin-intents))
(common-lisp:progn
 (common-lisp:defun get-builtin-slot-types
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key locale signature-contains next-token
                     max-results)
   (common-lisp:declare
    (common-lisp:ignorable locale signature-contains next-token max-results))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-builtin-slot-types-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'lex-models-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        "/builtins/slottypes/"
                                                        "GetBuiltinSlotTypes"
                                                        "2017-04-19"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-builtin-slot-types))
(common-lisp:progn
 (common-lisp:defun get-intent
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key name version)
   (common-lisp:declare (common-lisp:ignorable name version))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-intent-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'lex-models-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/intents/~A/versions/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'name))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'version))))
                                                        "GetIntent"
                                                        "2017-04-19"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-intent))
(common-lisp:progn
 (common-lisp:defun get-intent-versions
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key name next-token max-results)
   (common-lisp:declare (common-lisp:ignorable name next-token max-results))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-intent-versions-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'lex-models-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/intents/~A/versions/"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'name))))
                                                        "GetIntentVersions"
                                                        "2017-04-19"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-intent-versions))
(common-lisp:progn
 (common-lisp:defun get-intents
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key next-token max-results name-contains)
   (common-lisp:declare
    (common-lisp:ignorable next-token max-results name-contains))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-intents-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'lex-models-request
                                                        aws-sdk/generator/operation::input
                                                        "GET" "/intents/"
                                                        "GetIntents"
                                                        "2017-04-19"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-intents))
(common-lisp:progn
 (common-lisp:defun get-slot-type
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key name version)
   (common-lisp:declare (common-lisp:ignorable name version))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-slot-type-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'lex-models-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/slottypes/~A/versions/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'name))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'version))))
                                                        "GetSlotType"
                                                        "2017-04-19"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-slot-type))
(common-lisp:progn
 (common-lisp:defun get-slot-type-versions
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key name next-token max-results)
   (common-lisp:declare (common-lisp:ignorable name next-token max-results))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-slot-type-versions-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'lex-models-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/slottypes/~A/versions/"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'name))))
                                                        "GetSlotTypeVersions"
                                                        "2017-04-19"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-slot-type-versions))
(common-lisp:progn
 (common-lisp:defun get-slot-types
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key next-token max-results name-contains)
   (common-lisp:declare
    (common-lisp:ignorable next-token max-results name-contains))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-slot-types-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'lex-models-request
                                                        aws-sdk/generator/operation::input
                                                        "GET" "/slottypes/"
                                                        "GetSlotTypes"
                                                        "2017-04-19"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-slot-types))
(common-lisp:progn
 (common-lisp:defun get-utterances-view
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key bot-name bot-versions status-type)
   (common-lisp:declare
    (common-lisp:ignorable bot-name bot-versions status-type))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-utterances-view-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'lex-models-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/bots/~A/utterances?view=aggregation"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'botname))))
                                                        "GetUtterancesView"
                                                        "2017-04-19"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'get-utterances-view))
(common-lisp:progn
 (common-lisp:defun put-bot
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key name description intents
                     clarification-prompt abort-statement
                     idle-session-ttlin-seconds voice-id checksum
                     process-behavior locale child-directed)
   (common-lisp:declare
    (common-lisp:ignorable name description intents clarification-prompt
     abort-statement idle-session-ttlin-seconds voice-id checksum
     process-behavior locale child-directed))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-put-bot-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'lex-models-request
                                                        aws-sdk/generator/operation::input
                                                        "PUT"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/bots/~A/versions/$LATEST"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'name))))
                                                        "PutBot" "2017-04-19"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'put-bot))
(common-lisp:progn
 (common-lisp:defun put-bot-alias
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key name description bot-version bot-name
                     checksum)
   (common-lisp:declare
    (common-lisp:ignorable name description bot-version bot-name checksum))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-put-bot-alias-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'lex-models-request
                                                        aws-sdk/generator/operation::input
                                                        "PUT"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/bots/~A/aliases/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'bot-name))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'name))))
                                                        "PutBotAlias"
                                                        "2017-04-19"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'put-bot-alias))
(common-lisp:progn
 (common-lisp:defun put-intent
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key name description slots sample-utterances
                     confirmation-prompt rejection-statement follow-up-prompt
                     conclusion-statement dialog-code-hook fulfillment-activity
                     parent-intent-signature checksum)
   (common-lisp:declare
    (common-lisp:ignorable name description slots sample-utterances
     confirmation-prompt rejection-statement follow-up-prompt
     conclusion-statement dialog-code-hook fulfillment-activity
     parent-intent-signature checksum))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-put-intent-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'lex-models-request
                                                        aws-sdk/generator/operation::input
                                                        "PUT"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/intents/~A/versions/$LATEST"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'name))))
                                                        "PutIntent"
                                                        "2017-04-19"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'put-intent))
(common-lisp:progn
 (common-lisp:defun put-slot-type
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key name description enumeration-values
                     checksum)
   (common-lisp:declare
    (common-lisp:ignorable name description enumeration-values checksum))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-put-slot-type-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'lex-models-request
                                                        aws-sdk/generator/operation::input
                                                        "PUT"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/slottypes/~A/versions/$LATEST"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'name))))
                                                        "PutSlotType"
                                                        "2017-04-19"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'put-slot-type))
