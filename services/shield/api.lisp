;; DO NOT EDIT: File is generated by AWS-SDK/GENERATOR.

(common-lisp:defpackage #:aws-sdk/services/shield/api
  (:use)
  (:nicknames #:aws/shield)
  (:import-from #:aws-sdk/generator/shape)
  (:import-from #:aws-sdk/generator/operation)
  (:import-from #:aws-sdk/api)
  (:import-from #:aws-sdk/request)
  (:import-from #:aws-sdk/error))
(common-lisp:in-package #:aws-sdk/services/shield/api)
(common-lisp:progn
 (common-lisp:defclass shield-request (aws-sdk/request:request) common-lisp:nil
                       (:default-initargs :service "shield"))
 (common-lisp:export 'shield-request))
(common-lisp:progn
 (common-lisp:define-condition shield-error
     (aws-sdk/error:aws-error)
     common-lisp:nil)
 (common-lisp:export 'shield-error))
(common-lisp:defvar *error-map*
  '(("InternalErrorException" . internal-error-exception)
    ("InvalidOperationException" . invalid-operation-exception)
    ("InvalidParameterException" . invalid-parameter-exception)
    ("InvalidResourceException" . invalid-resource-exception)
    ("LimitsExceededException" . limits-exceeded-exception)
    ("LockedSubscriptionException" . locked-subscription-exception)
    ("OptimisticLockException" . optimistic-lock-exception)
    ("ResourceAlreadyExistsException" . resource-already-exists-exception)
    ("ResourceNotFoundException" . resource-not-found-exception)))
(common-lisp:progn
 (common-lisp:defstruct
     (attack-detail (:copier common-lisp:nil)
      (:conc-name "struct-shape-attack-detail-"))
   (attack-id common-lisp:nil :type
    (common-lisp:or attack-id common-lisp:null))
   (resource-arn common-lisp:nil :type
    (common-lisp:or resource-arn common-lisp:null))
   (sub-resources common-lisp:nil :type
    (common-lisp:or sub-resource-summary-list common-lisp:null))
   (start-time common-lisp:nil :type
    (common-lisp:or attack-timestamp common-lisp:null))
   (end-time common-lisp:nil :type
    (common-lisp:or attack-timestamp common-lisp:null))
   (attack-counters common-lisp:nil :type
    (common-lisp:or summarized-counter-list common-lisp:null))
   (mitigations common-lisp:nil :type
    (common-lisp:or mitigation-list common-lisp:null)))
 (common-lisp:export (common-lisp:list 'attack-detail 'make-attack-detail))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input attack-detail))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input attack-detail))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'attack-id))
      (common-lisp:list
       (common-lisp:cons "AttackId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-arn))
      (common-lisp:list
       (common-lisp:cons "ResourceArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'sub-resources))
      (common-lisp:list
       (common-lisp:cons "SubResources"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'start-time))
      (common-lisp:list
       (common-lisp:cons "StartTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'end-time))
      (common-lisp:list
       (common-lisp:cons "EndTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'attack-counters))
      (common-lisp:list
       (common-lisp:cons "AttackCounters"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'mitigations))
      (common-lisp:list
       (common-lisp:cons "Mitigations"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input attack-detail))
   common-lisp:nil))
(common-lisp:deftype attack-id () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype attack-summaries ()
   '(trivial-types:proper-list attack-summary))
 (common-lisp:defun |make-attack-summaries|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list attack-summary))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (attack-summary (:copier common-lisp:nil)
      (:conc-name "struct-shape-attack-summary-"))
   (attack-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (resource-arn common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (start-time common-lisp:nil :type
    (common-lisp:or attack-timestamp common-lisp:null))
   (end-time common-lisp:nil :type
    (common-lisp:or attack-timestamp common-lisp:null))
   (attack-vectors common-lisp:nil :type
    (common-lisp:or attack-vector-description-list common-lisp:null)))
 (common-lisp:export (common-lisp:list 'attack-summary 'make-attack-summary))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input attack-summary))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input attack-summary))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'attack-id))
      (common-lisp:list
       (common-lisp:cons "AttackId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-arn))
      (common-lisp:list
       (common-lisp:cons "ResourceArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'start-time))
      (common-lisp:list
       (common-lisp:cons "StartTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'end-time))
      (common-lisp:list
       (common-lisp:cons "EndTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'attack-vectors))
      (common-lisp:list
       (common-lisp:cons "AttackVectors"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input attack-summary))
   common-lisp:nil))
(common-lisp:deftype attack-timestamp () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (attack-vector-description (:copier common-lisp:nil)
      (:conc-name "struct-shape-attack-vector-description-"))
   (vector-type (common-lisp:error ":vector-type is required") :type
    (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'attack-vector-description
                    'make-attack-vector-description))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          attack-vector-description))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          attack-vector-description))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'vector-type))
      (common-lisp:list
       (common-lisp:cons "VectorType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          attack-vector-description))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype attack-vector-description-list ()
   '(trivial-types:proper-list attack-vector-description))
 (common-lisp:defun |make-attack-vector-description-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            attack-vector-description))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (create-protection-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-protection-request-"))
   (name (common-lisp:error ":name is required") :type
    (common-lisp:or protection-name common-lisp:null))
   (resource-arn (common-lisp:error ":resource-arn is required") :type
    (common-lisp:or resource-arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-protection-request
                    'make-create-protection-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-protection-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-protection-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-arn))
      (common-lisp:list
       (common-lisp:cons "ResourceArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-protection-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-protection-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-protection-response-"))
   (protection-id common-lisp:nil :type
    (common-lisp:or protection-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-protection-response
                    'make-create-protection-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-protection-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-protection-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'protection-id))
      (common-lisp:list
       (common-lisp:cons "ProtectionId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-protection-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-subscription-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-subscription-request-")))
 (common-lisp:export
  (common-lisp:list 'create-subscription-request
                    'make-create-subscription-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-subscription-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-subscription-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-subscription-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-subscription-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-subscription-response-")))
 (common-lisp:export
  (common-lisp:list 'create-subscription-response
                    'make-create-subscription-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-subscription-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-subscription-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-subscription-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-protection-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-protection-request-"))
   (protection-id (common-lisp:error ":protection-id is required") :type
    (common-lisp:or protection-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-protection-request
                    'make-delete-protection-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-protection-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-protection-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'protection-id))
      (common-lisp:list
       (common-lisp:cons "ProtectionId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-protection-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-protection-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-protection-response-")))
 (common-lisp:export
  (common-lisp:list 'delete-protection-response
                    'make-delete-protection-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-protection-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-protection-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-protection-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-subscription-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-subscription-request-")))
 (common-lisp:export
  (common-lisp:list 'delete-subscription-request
                    'make-delete-subscription-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-subscription-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-subscription-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-subscription-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-subscription-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-subscription-response-")))
 (common-lisp:export
  (common-lisp:list 'delete-subscription-response
                    'make-delete-subscription-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-subscription-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-subscription-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-subscription-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-attack-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-describe-attack-request-"))
   (attack-id (common-lisp:error ":attack-id is required") :type
    (common-lisp:or attack-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-attack-request 'make-describe-attack-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-attack-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-attack-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'attack-id))
      (common-lisp:list
       (common-lisp:cons "AttackId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-attack-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-attack-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-describe-attack-response-"))
   (attack common-lisp:nil :type
    (common-lisp:or attack-detail common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-attack-response 'make-describe-attack-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-attack-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-attack-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'attack))
      (common-lisp:list
       (common-lisp:cons "Attack"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-attack-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-protection-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-describe-protection-request-"))
   (protection-id (common-lisp:error ":protection-id is required") :type
    (common-lisp:or protection-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-protection-request
                    'make-describe-protection-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-protection-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-protection-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'protection-id))
      (common-lisp:list
       (common-lisp:cons "ProtectionId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-protection-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-protection-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-describe-protection-response-"))
   (protection common-lisp:nil :type
    (common-lisp:or protection common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-protection-response
                    'make-describe-protection-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-protection-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-protection-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'protection))
      (common-lisp:list
       (common-lisp:cons "Protection"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-protection-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-subscription-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-describe-subscription-request-")))
 (common-lisp:export
  (common-lisp:list 'describe-subscription-request
                    'make-describe-subscription-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-subscription-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-subscription-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-subscription-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-subscription-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-describe-subscription-response-"))
   (subscription common-lisp:nil :type
    (common-lisp:or subscription common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-subscription-response
                    'make-describe-subscription-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-subscription-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-subscription-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'subscription))
      (common-lisp:list
       (common-lisp:cons "Subscription"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-subscription-response))
   common-lisp:nil))
(common-lisp:deftype double () 'common-lisp:double-float)
(common-lisp:deftype duration-in-seconds () 'common-lisp:integer)
(common-lisp:deftype integer () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:define-condition internal-error-exception
     (shield-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       internal-error-exception-message)))
 (common-lisp:export
  (common-lisp:list 'internal-error-exception
                    'internal-error-exception-message)))
(common-lisp:progn
 (common-lisp:define-condition invalid-operation-exception
     (shield-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       invalid-operation-exception-message)))
 (common-lisp:export
  (common-lisp:list 'invalid-operation-exception
                    'invalid-operation-exception-message)))
(common-lisp:progn
 (common-lisp:define-condition invalid-parameter-exception
     (shield-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       invalid-parameter-exception-message)))
 (common-lisp:export
  (common-lisp:list 'invalid-parameter-exception
                    'invalid-parameter-exception-message)))
(common-lisp:progn
 (common-lisp:define-condition invalid-resource-exception
     (shield-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       invalid-resource-exception-message)))
 (common-lisp:export
  (common-lisp:list 'invalid-resource-exception
                    'invalid-resource-exception-message)))
(common-lisp:deftype limit-number () 'common-lisp:integer)
(common-lisp:deftype limit-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:define-condition limits-exceeded-exception
     (shield-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       limits-exceeded-exception-message)
      (type :initarg :type :initform common-lisp:nil :reader
       limits-exceeded-exception-type)
      (limit :initarg :limit :initform common-lisp:nil :reader
       limits-exceeded-exception-limit)))
 (common-lisp:export
  (common-lisp:list 'limits-exceeded-exception
                    'limits-exceeded-exception-message
                    'limits-exceeded-exception-type
                    'limits-exceeded-exception-limit)))
(common-lisp:progn
 (common-lisp:defstruct
     (list-attacks-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-attacks-request-"))
   (resource-arns common-lisp:nil :type
    (common-lisp:or resource-arn-filter-list common-lisp:null))
   (start-time common-lisp:nil :type
    (common-lisp:or time-range common-lisp:null))
   (end-time common-lisp:nil :type
    (common-lisp:or time-range common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or token common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or max-results common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-attacks-request 'make-list-attacks-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input list-attacks-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input list-attacks-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-arns))
      (common-lisp:list
       (common-lisp:cons "ResourceArns"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'start-time))
      (common-lisp:list
       (common-lisp:cons "StartTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'end-time))
      (common-lisp:list
       (common-lisp:cons "EndTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-results))
      (common-lisp:list
       (common-lisp:cons "MaxResults"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input list-attacks-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-attacks-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-attacks-response-"))
   (attack-summaries common-lisp:nil :type
    (common-lisp:or attack-summaries common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-attacks-response 'make-list-attacks-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-attacks-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-attacks-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'attack-summaries))
      (common-lisp:list
       (common-lisp:cons "AttackSummaries"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-attacks-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-protections-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-protections-request-"))
   (next-token common-lisp:nil :type (common-lisp:or token common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or max-results common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-protections-request 'make-list-protections-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-protections-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-protections-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-results))
      (common-lisp:list
       (common-lisp:cons "MaxResults"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-protections-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-protections-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-protections-response-"))
   (protections common-lisp:nil :type
    (common-lisp:or protections common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-protections-response
                    'make-list-protections-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-protections-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-protections-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'protections))
      (common-lisp:list
       (common-lisp:cons "Protections"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-protections-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:define-condition locked-subscription-exception
     (shield-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       locked-subscription-exception-message)))
 (common-lisp:export
  (common-lisp:list 'locked-subscription-exception
                    'locked-subscription-exception-message)))
(common-lisp:deftype max-results () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:defstruct
     (mitigation (:copier common-lisp:nil)
      (:conc-name "struct-shape-mitigation-"))
   (mitigation-name common-lisp:nil :type
    (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'mitigation 'make-mitigation))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input mitigation))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input mitigation))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'mitigation-name))
      (common-lisp:list
       (common-lisp:cons "MitigationName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input mitigation))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype mitigation-list ()
   '(trivial-types:proper-list mitigation))
 (common-lisp:defun |make-mitigation-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list mitigation))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:define-condition optimistic-lock-exception
     (shield-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       optimistic-lock-exception-message)))
 (common-lisp:export
  (common-lisp:list 'optimistic-lock-exception
                    'optimistic-lock-exception-message)))
(common-lisp:progn
 (common-lisp:defstruct
     (protection (:copier common-lisp:nil)
      (:conc-name "struct-shape-protection-"))
   (id common-lisp:nil :type (common-lisp:or protection-id common-lisp:null))
   (name common-lisp:nil :type
    (common-lisp:or protection-name common-lisp:null))
   (resource-arn common-lisp:nil :type
    (common-lisp:or resource-arn common-lisp:null)))
 (common-lisp:export (common-lisp:list 'protection 'make-protection))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input protection))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input protection))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "Id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-arn))
      (common-lisp:list
       (common-lisp:cons "ResourceArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input protection))
   common-lisp:nil))
(common-lisp:deftype protection-id () 'common-lisp:string)
(common-lisp:deftype protection-name () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype protections () '(trivial-types:proper-list protection))
 (common-lisp:defun |make-protections|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list protection))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:define-condition resource-already-exists-exception
     (shield-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       resource-already-exists-exception-message)))
 (common-lisp:export
  (common-lisp:list 'resource-already-exists-exception
                    'resource-already-exists-exception-message)))
(common-lisp:deftype resource-arn () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype resource-arn-filter-list ()
   '(trivial-types:proper-list resource-arn))
 (common-lisp:defun |make-resource-arn-filter-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list resource-arn))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:define-condition resource-not-found-exception
     (shield-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       resource-not-found-exception-message)))
 (common-lisp:export
  (common-lisp:list 'resource-not-found-exception
                    'resource-not-found-exception-message)))
(common-lisp:deftype string () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (sub-resource-summary (:copier common-lisp:nil)
      (:conc-name "struct-shape-sub-resource-summary-"))
   (type common-lisp:nil :type
    (common-lisp:or sub-resource-type common-lisp:null))
   (id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (attack-vectors common-lisp:nil :type
    (common-lisp:or summarized-attack-vector-list common-lisp:null))
   (counters common-lisp:nil :type
    (common-lisp:or summarized-counter-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'sub-resource-summary 'make-sub-resource-summary))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input sub-resource-summary))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input sub-resource-summary))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'type))
      (common-lisp:list
       (common-lisp:cons "Type"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "Id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'attack-vectors))
      (common-lisp:list
       (common-lisp:cons "AttackVectors"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'counters))
      (common-lisp:list
       (common-lisp:cons "Counters"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input sub-resource-summary))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype sub-resource-summary-list ()
   '(trivial-types:proper-list sub-resource-summary))
 (common-lisp:defun |make-sub-resource-summary-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list sub-resource-summary))
   aws-sdk/generator/shape::members))
(common-lisp:deftype sub-resource-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (subscription (:copier common-lisp:nil)
      (:conc-name "struct-shape-subscription-"))
   (start-time common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null))
   (time-commitment-in-seconds common-lisp:nil :type
    (common-lisp:or duration-in-seconds common-lisp:null)))
 (common-lisp:export (common-lisp:list 'subscription 'make-subscription))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input subscription))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input subscription))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'start-time))
      (common-lisp:list
       (common-lisp:cons "StartTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'time-commitment-in-seconds))
      (common-lisp:list
       (common-lisp:cons "TimeCommitmentInSeconds"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input subscription))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (summarized-attack-vector (:copier common-lisp:nil)
      (:conc-name "struct-shape-summarized-attack-vector-"))
   (vector-type (common-lisp:error ":vector-type is required") :type
    (common-lisp:or string common-lisp:null))
   (vector-counters common-lisp:nil :type
    (common-lisp:or summarized-counter-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'summarized-attack-vector 'make-summarized-attack-vector))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          summarized-attack-vector))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          summarized-attack-vector))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'vector-type))
      (common-lisp:list
       (common-lisp:cons "VectorType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'vector-counters))
      (common-lisp:list
       (common-lisp:cons "VectorCounters"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          summarized-attack-vector))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype summarized-attack-vector-list ()
   '(trivial-types:proper-list summarized-attack-vector))
 (common-lisp:defun |make-summarized-attack-vector-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            summarized-attack-vector))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (summarized-counter (:copier common-lisp:nil)
      (:conc-name "struct-shape-summarized-counter-"))
   (name common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (max common-lisp:nil :type (common-lisp:or double common-lisp:null))
   (average common-lisp:nil :type (common-lisp:or double common-lisp:null))
   (sum common-lisp:nil :type (common-lisp:or double common-lisp:null))
   (n common-lisp:nil :type (common-lisp:or integer common-lisp:null))
   (unit common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'summarized-counter 'make-summarized-counter))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input summarized-counter))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input summarized-counter))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max))
      (common-lisp:list
       (common-lisp:cons "Max"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'average))
      (common-lisp:list
       (common-lisp:cons "Average"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'sum))
      (common-lisp:list
       (common-lisp:cons "Sum"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'n))
      (common-lisp:list
       (common-lisp:cons "N"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'unit))
      (common-lisp:list
       (common-lisp:cons "Unit"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input summarized-counter))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype summarized-counter-list ()
   '(trivial-types:proper-list summarized-counter))
 (common-lisp:defun |make-summarized-counter-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list summarized-counter))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (time-range (:copier common-lisp:nil)
      (:conc-name "struct-shape-time-range-"))
   (from-inclusive common-lisp:nil :type
    (common-lisp:or attack-timestamp common-lisp:null))
   (to-exclusive common-lisp:nil :type
    (common-lisp:or attack-timestamp common-lisp:null)))
 (common-lisp:export (common-lisp:list 'time-range 'make-time-range))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input time-range))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input time-range))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'from-inclusive))
      (common-lisp:list
       (common-lisp:cons "FromInclusive"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'to-exclusive))
      (common-lisp:list
       (common-lisp:cons "ToExclusive"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input time-range))
   common-lisp:nil))
(common-lisp:deftype timestamp () 'common-lisp:string)
(common-lisp:deftype token () 'common-lisp:string)
(common-lisp:deftype |errorMessage| () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defun create-protection
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key name resource-arn)
   (common-lisp:declare (common-lisp:ignorable name resource-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-protection-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'shield-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "CreateProtection"
                                                        "2016-06-02"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'create-protection))
(common-lisp:progn
 (common-lisp:defun create-subscription ()
   (aws-sdk/generator/operation::parse-response
    (aws-sdk/api:aws-request
     (common-lisp:make-instance 'shield-request :method "POST" :path "/"
                                :params
                                `(("Action" ,@"CreateSubscription")
                                  ("Version" ,@"2016-06-02"))))
    common-lisp:nil common-lisp:nil *error-map*))
 (common-lisp:export 'create-subscription))
(common-lisp:progn
 (common-lisp:defun delete-protection
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key protection-id)
   (common-lisp:declare (common-lisp:ignorable protection-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-protection-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'shield-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "DeleteProtection"
                                                        "2016-06-02"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'delete-protection))
(common-lisp:progn
 (common-lisp:defun delete-subscription ()
   (aws-sdk/generator/operation::parse-response
    (aws-sdk/api:aws-request
     (common-lisp:make-instance 'shield-request :method "POST" :path "/"
                                :params
                                `(("Action" ,@"DeleteSubscription")
                                  ("Version" ,@"2016-06-02"))))
    common-lisp:nil common-lisp:nil *error-map*))
 (common-lisp:export 'delete-subscription))
(common-lisp:progn
 (common-lisp:defun describe-attack
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key attack-id)
   (common-lisp:declare (common-lisp:ignorable attack-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-describe-attack-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'shield-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "DescribeAttack"
                                                        "2016-06-02"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'describe-attack))
(common-lisp:progn
 (common-lisp:defun describe-protection
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key protection-id)
   (common-lisp:declare (common-lisp:ignorable protection-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-describe-protection-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'shield-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "DescribeProtection"
                                                        "2016-06-02"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'describe-protection))
(common-lisp:progn
 (common-lisp:defun describe-subscription ()
   (aws-sdk/generator/operation::parse-response
    (aws-sdk/api:aws-request
     (common-lisp:make-instance 'shield-request :method "POST" :path "/"
                                :params
                                `(("Action" ,@"DescribeSubscription")
                                  ("Version" ,@"2016-06-02"))))
    common-lisp:nil common-lisp:nil *error-map*))
 (common-lisp:export 'describe-subscription))
(common-lisp:progn
 (common-lisp:defun list-attacks
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key resource-arns start-time end-time
                     next-token max-results)
   (common-lisp:declare
    (common-lisp:ignorable resource-arns start-time end-time next-token
     max-results))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-attacks-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'shield-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "ListAttacks"
                                                        "2016-06-02"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-attacks))
(common-lisp:progn
 (common-lisp:defun list-protections
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key next-token max-results)
   (common-lisp:declare (common-lisp:ignorable next-token max-results))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-protections-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'shield-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "ListProtections"
                                                        "2016-06-02"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-protections))
