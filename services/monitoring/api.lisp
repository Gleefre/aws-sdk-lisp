;; DO NOT EDIT: File is generated by AWS-SDK/GENERATOR.

(common-lisp:defpackage #:aws-sdk/services/monitoring/api
  (:use)
  (:nicknames #:aws/monitoring)
  (:import-from #:aws-sdk/generator/shape)
  (:import-from #:aws-sdk/generator/operation)
  (:import-from #:aws-sdk/api)
  (:import-from #:aws-sdk/request)
  (:import-from #:aws-sdk/error))
(common-lisp:in-package #:aws-sdk/services/monitoring/api)
(common-lisp:progn
 (common-lisp:defclass monitoring-request (aws-sdk/request:request)
                       common-lisp:nil
                       (:default-initargs :service "monitoring"))
 (common-lisp:export 'monitoring-request))
(common-lisp:progn
 (common-lisp:define-condition monitoring-error
     (aws-sdk/error:aws-error)
     common-lisp:nil)
 (common-lisp:export 'monitoring-error))
(common-lisp:deftype action-prefix () 'common-lisp:string)
(common-lisp:deftype actions-enabled () 'common-lisp:boolean)
(common-lisp:deftype alarm-arn () 'common-lisp:string)
(common-lisp:deftype alarm-description () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (alarm-history-item (:copier common-lisp:nil)
      (:conc-name "struct-shape-alarm-history-item-"))
   (alarm-name common-lisp:nil :type
    (common-lisp:or alarm-name common-lisp:null))
   (timestamp common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null))
   (history-item-type common-lisp:nil :type
    (common-lisp:or history-item-type common-lisp:null))
   (history-summary common-lisp:nil :type
    (common-lisp:or history-summary common-lisp:null))
   (history-data common-lisp:nil :type
    (common-lisp:or history-data common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'alarm-history-item 'make-alarm-history-item))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input alarm-history-item))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input alarm-history-item))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'alarm-name))
      (common-lisp:list
       (common-lisp:cons "AlarmName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'timestamp))
      (common-lisp:list
       (common-lisp:cons "Timestamp"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'history-item-type))
      (common-lisp:list
       (common-lisp:cons "HistoryItemType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'history-summary))
      (common-lisp:list
       (common-lisp:cons "HistorySummary"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'history-data))
      (common-lisp:list
       (common-lisp:cons "HistoryData"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input alarm-history-item))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype alarm-history-items ()
   '(trivial-types:proper-list alarm-history-item))
 (common-lisp:defun |make-alarm-history-items|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list alarm-history-item))
   aws-sdk/generator/shape::members))
(common-lisp:deftype alarm-name () 'common-lisp:string)
(common-lisp:deftype alarm-name-prefix () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype alarm-names () '(trivial-types:proper-list alarm-name))
 (common-lisp:defun |make-alarm-names|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list alarm-name))
   aws-sdk/generator/shape::members))
(common-lisp:deftype aws-query-error-message () 'common-lisp:string)
(common-lisp:deftype comparison-operator () 'common-lisp:string)
(common-lisp:deftype dashboard-arn () 'common-lisp:string)
(common-lisp:deftype dashboard-body () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype dashboard-entries ()
   '(trivial-types:proper-list dashboard-entry))
 (common-lisp:defun |make-dashboard-entries|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list dashboard-entry))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (dashboard-entry (:copier common-lisp:nil)
      (:conc-name "struct-shape-dashboard-entry-"))
   (dashboard-name common-lisp:nil :type
    (common-lisp:or dashboard-name common-lisp:null))
   (dashboard-arn common-lisp:nil :type
    (common-lisp:or dashboard-arn common-lisp:null))
   (last-modified common-lisp:nil :type
    (common-lisp:or last-modified common-lisp:null))
   (size common-lisp:nil :type (common-lisp:or size common-lisp:null)))
 (common-lisp:export (common-lisp:list 'dashboard-entry 'make-dashboard-entry))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input dashboard-entry))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input dashboard-entry))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'dashboard-name))
      (common-lisp:list
       (common-lisp:cons "DashboardName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'dashboard-arn))
      (common-lisp:list
       (common-lisp:cons "DashboardArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'last-modified))
      (common-lisp:list
       (common-lisp:cons "LastModified"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'size))
      (common-lisp:list
       (common-lisp:cons "Size"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input dashboard-entry))
   common-lisp:nil))
(common-lisp:deftype dashboard-error-message () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:define-condition dashboard-invalid-input-error
     (monitoring-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       dashboard-invalid-input-error-message)
      (dashboard-validation-messages :initarg :dashboard-validation-messages
       :initform common-lisp:nil :reader
       dashboard-invalid-input-error-dashboard-validation-messages)))
 (common-lisp:export
  (common-lisp:list 'dashboard-invalid-input-error
                    'dashboard-invalid-input-error-message
                    'dashboard-invalid-input-error-dashboard-validation-messages)))
(common-lisp:deftype dashboard-name () 'common-lisp:string)
(common-lisp:deftype dashboard-name-prefix () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype dashboard-names ()
   '(trivial-types:proper-list dashboard-name))
 (common-lisp:defun |make-dashboard-names|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list dashboard-name))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:define-condition dashboard-not-found-error
     (monitoring-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       dashboard-not-found-error-message)))
 (common-lisp:export
  (common-lisp:list 'dashboard-not-found-error
                    'dashboard-not-found-error-message)))
(common-lisp:progn
 (common-lisp:defstruct
     (dashboard-validation-message (:copier common-lisp:nil)
      (:conc-name "struct-shape-dashboard-validation-message-"))
   (data-path common-lisp:nil :type
    (common-lisp:or data-path common-lisp:null))
   (message common-lisp:nil :type (common-lisp:or message common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'dashboard-validation-message
                    'make-dashboard-validation-message))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          dashboard-validation-message))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          dashboard-validation-message))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'data-path))
      (common-lisp:list
       (common-lisp:cons "DataPath"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'message))
      (common-lisp:list
       (common-lisp:cons "Message"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          dashboard-validation-message))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype dashboard-validation-messages ()
   '(trivial-types:proper-list dashboard-validation-message))
 (common-lisp:defun |make-dashboard-validation-messages|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            dashboard-validation-message))
   aws-sdk/generator/shape::members))
(common-lisp:deftype data-path () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (datapoint (:copier common-lisp:nil)
      (:conc-name "struct-shape-datapoint-"))
   (timestamp common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null))
   (sample-count common-lisp:nil :type
    (common-lisp:or datapoint-value common-lisp:null))
   (average common-lisp:nil :type
    (common-lisp:or datapoint-value common-lisp:null))
   (sum common-lisp:nil :type
    (common-lisp:or datapoint-value common-lisp:null))
   (minimum common-lisp:nil :type
    (common-lisp:or datapoint-value common-lisp:null))
   (maximum common-lisp:nil :type
    (common-lisp:or datapoint-value common-lisp:null))
   (unit common-lisp:nil :type (common-lisp:or standard-unit common-lisp:null))
   (extended-statistics common-lisp:nil :type
    (common-lisp:or datapoint-value-map common-lisp:null)))
 (common-lisp:export (common-lisp:list 'datapoint 'make-datapoint))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input datapoint))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input datapoint))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'timestamp))
      (common-lisp:list
       (common-lisp:cons "Timestamp"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'sample-count))
      (common-lisp:list
       (common-lisp:cons "SampleCount"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'average))
      (common-lisp:list
       (common-lisp:cons "Average"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'sum))
      (common-lisp:list
       (common-lisp:cons "Sum"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'minimum))
      (common-lisp:list
       (common-lisp:cons "Minimum"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'maximum))
      (common-lisp:list
       (common-lisp:cons "Maximum"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'unit))
      (common-lisp:list
       (common-lisp:cons "Unit"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'extended-statistics))
      (common-lisp:list
       (common-lisp:cons "ExtendedStatistics"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input datapoint))
   common-lisp:nil))
(common-lisp:deftype datapoint-value () 'common-lisp:double-float)
(common-lisp:progn
 (common-lisp:deftype datapoint-value-map () 'common-lisp:hash-table)
 (common-lisp:defun |make-datapoint-value-map|
                    (aws-sdk/generator/shape::key-values)
   (common-lisp:etypecase aws-sdk/generator/shape::key-values
     (common-lisp:hash-table aws-sdk/generator/shape::key-values)
     (common-lisp:list
      (alexandria:alist-hash-table aws-sdk/generator/shape::key-values)))))
(common-lisp:progn
 (common-lisp:deftype datapoints () '(trivial-types:proper-list datapoint))
 (common-lisp:defun |make-datapoints|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list datapoint))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-alarms-input (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-alarms-input-"))
   (alarm-names (common-lisp:error ":alarm-names is required") :type
    (common-lisp:or alarm-names common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-alarms-input 'make-delete-alarms-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input delete-alarms-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input delete-alarms-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'alarm-names))
      (common-lisp:list
       (common-lisp:cons "AlarmNames"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input delete-alarms-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-dashboards-input (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-dashboards-input-"))
   (dashboard-names common-lisp:nil :type
    (common-lisp:or dashboard-names common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-dashboards-input 'make-delete-dashboards-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-dashboards-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-dashboards-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'dashboard-names))
      (common-lisp:list
       (common-lisp:cons "DashboardNames"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-dashboards-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-dashboards-output (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-dashboards-output-")))
 (common-lisp:export
  (common-lisp:list 'delete-dashboards-output 'make-delete-dashboards-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-dashboards-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-dashboards-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-dashboards-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-alarm-history-input (:copier common-lisp:nil)
      (:conc-name "struct-shape-describe-alarm-history-input-"))
   (alarm-name common-lisp:nil :type
    (common-lisp:or alarm-name common-lisp:null))
   (history-item-type common-lisp:nil :type
    (common-lisp:or history-item-type common-lisp:null))
   (start-date common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null))
   (end-date common-lisp:nil :type (common-lisp:or timestamp common-lisp:null))
   (max-records common-lisp:nil :type
    (common-lisp:or max-records common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-alarm-history-input
                    'make-describe-alarm-history-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-alarm-history-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-alarm-history-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'alarm-name))
      (common-lisp:list
       (common-lisp:cons "AlarmName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'history-item-type))
      (common-lisp:list
       (common-lisp:cons "HistoryItemType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'start-date))
      (common-lisp:list
       (common-lisp:cons "StartDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'end-date))
      (common-lisp:list
       (common-lisp:cons "EndDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-records))
      (common-lisp:list
       (common-lisp:cons "MaxRecords"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-alarm-history-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-alarm-history-output (:copier common-lisp:nil)
      (:conc-name "struct-shape-describe-alarm-history-output-"))
   (alarm-history-items common-lisp:nil :type
    (common-lisp:or alarm-history-items common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-alarm-history-output
                    'make-describe-alarm-history-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-alarm-history-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-alarm-history-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'alarm-history-items))
      (common-lisp:list
       (common-lisp:cons "AlarmHistoryItems"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-alarm-history-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-alarms-for-metric-input (:copier common-lisp:nil)
      (:conc-name "struct-shape-describe-alarms-for-metric-input-"))
   (metric-name (common-lisp:error ":metric-name is required") :type
    (common-lisp:or metric-name common-lisp:null))
   (namespace (common-lisp:error ":namespace is required") :type
    (common-lisp:or namespace common-lisp:null))
   (statistic common-lisp:nil :type
    (common-lisp:or statistic common-lisp:null))
   (extended-statistic common-lisp:nil :type
    (common-lisp:or extended-statistic common-lisp:null))
   (dimensions common-lisp:nil :type
    (common-lisp:or dimensions common-lisp:null))
   (period common-lisp:nil :type (common-lisp:or period common-lisp:null))
   (unit common-lisp:nil :type
    (common-lisp:or standard-unit common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-alarms-for-metric-input
                    'make-describe-alarms-for-metric-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-alarms-for-metric-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-alarms-for-metric-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'metric-name))
      (common-lisp:list
       (common-lisp:cons "MetricName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'namespace))
      (common-lisp:list
       (common-lisp:cons "Namespace"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'statistic))
      (common-lisp:list
       (common-lisp:cons "Statistic"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'extended-statistic))
      (common-lisp:list
       (common-lisp:cons "ExtendedStatistic"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'dimensions))
      (common-lisp:list
       (common-lisp:cons "Dimensions"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'period))
      (common-lisp:list
       (common-lisp:cons "Period"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'unit))
      (common-lisp:list
       (common-lisp:cons "Unit"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-alarms-for-metric-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-alarms-for-metric-output (:copier common-lisp:nil)
      (:conc-name "struct-shape-describe-alarms-for-metric-output-"))
   (metric-alarms common-lisp:nil :type
    (common-lisp:or metric-alarms common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-alarms-for-metric-output
                    'make-describe-alarms-for-metric-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-alarms-for-metric-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-alarms-for-metric-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'metric-alarms))
      (common-lisp:list
       (common-lisp:cons "MetricAlarms"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-alarms-for-metric-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-alarms-input (:copier common-lisp:nil)
      (:conc-name "struct-shape-describe-alarms-input-"))
   (alarm-names common-lisp:nil :type
    (common-lisp:or alarm-names common-lisp:null))
   (alarm-name-prefix common-lisp:nil :type
    (common-lisp:or alarm-name-prefix common-lisp:null))
   (state-value common-lisp:nil :type
    (common-lisp:or state-value common-lisp:null))
   (action-prefix common-lisp:nil :type
    (common-lisp:or action-prefix common-lisp:null))
   (max-records common-lisp:nil :type
    (common-lisp:or max-records common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-alarms-input 'make-describe-alarms-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-alarms-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-alarms-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'alarm-names))
      (common-lisp:list
       (common-lisp:cons "AlarmNames"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'alarm-name-prefix))
      (common-lisp:list
       (common-lisp:cons "AlarmNamePrefix"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'state-value))
      (common-lisp:list
       (common-lisp:cons "StateValue"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'action-prefix))
      (common-lisp:list
       (common-lisp:cons "ActionPrefix"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-records))
      (common-lisp:list
       (common-lisp:cons "MaxRecords"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-alarms-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-alarms-output (:copier common-lisp:nil)
      (:conc-name "struct-shape-describe-alarms-output-"))
   (metric-alarms common-lisp:nil :type
    (common-lisp:or metric-alarms common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-alarms-output 'make-describe-alarms-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-alarms-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-alarms-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'metric-alarms))
      (common-lisp:list
       (common-lisp:cons "MetricAlarms"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-alarms-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (dimension (:copier common-lisp:nil)
      (:conc-name "struct-shape-dimension-"))
   (name (common-lisp:error ":name is required") :type
    (common-lisp:or dimension-name common-lisp:null))
   (value (common-lisp:error ":value is required") :type
    (common-lisp:or dimension-value common-lisp:null)))
 (common-lisp:export (common-lisp:list 'dimension 'make-dimension))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input dimension))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input dimension))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'value))
      (common-lisp:list
       (common-lisp:cons "Value"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input dimension))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (dimension-filter (:copier common-lisp:nil)
      (:conc-name "struct-shape-dimension-filter-"))
   (name (common-lisp:error ":name is required") :type
    (common-lisp:or dimension-name common-lisp:null))
   (value common-lisp:nil :type
    (common-lisp:or dimension-value common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'dimension-filter 'make-dimension-filter))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input dimension-filter))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input dimension-filter))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'value))
      (common-lisp:list
       (common-lisp:cons "Value"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input dimension-filter))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype dimension-filters ()
   '(trivial-types:proper-list dimension-filter))
 (common-lisp:defun |make-dimension-filters|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list dimension-filter))
   aws-sdk/generator/shape::members))
(common-lisp:deftype dimension-name () 'common-lisp:string)
(common-lisp:deftype dimension-value () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype dimensions () '(trivial-types:proper-list dimension))
 (common-lisp:defun |make-dimensions|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list dimension))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (disable-alarm-actions-input (:copier common-lisp:nil)
      (:conc-name "struct-shape-disable-alarm-actions-input-"))
   (alarm-names (common-lisp:error ":alarm-names is required") :type
    (common-lisp:or alarm-names common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'disable-alarm-actions-input
                    'make-disable-alarm-actions-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          disable-alarm-actions-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          disable-alarm-actions-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'alarm-names))
      (common-lisp:list
       (common-lisp:cons "AlarmNames"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          disable-alarm-actions-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (enable-alarm-actions-input (:copier common-lisp:nil)
      (:conc-name "struct-shape-enable-alarm-actions-input-"))
   (alarm-names (common-lisp:error ":alarm-names is required") :type
    (common-lisp:or alarm-names common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'enable-alarm-actions-input
                    'make-enable-alarm-actions-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          enable-alarm-actions-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          enable-alarm-actions-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'alarm-names))
      (common-lisp:list
       (common-lisp:cons "AlarmNames"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          enable-alarm-actions-input))
   common-lisp:nil))
(common-lisp:deftype error-message () 'common-lisp:string)
(common-lisp:deftype evaluate-low-sample-count-percentile ()
  'common-lisp:string)
(common-lisp:deftype evaluation-periods () 'common-lisp:integer)
(common-lisp:deftype extended-statistic () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype extended-statistics ()
   '(trivial-types:proper-list extended-statistic))
 (common-lisp:defun |make-extended-statistics|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list extended-statistic))
   aws-sdk/generator/shape::members))
(common-lisp:deftype fault-description () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (get-dashboard-input (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-dashboard-input-"))
   (dashboard-name common-lisp:nil :type
    (common-lisp:or dashboard-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-dashboard-input 'make-get-dashboard-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input get-dashboard-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input get-dashboard-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'dashboard-name))
      (common-lisp:list
       (common-lisp:cons "DashboardName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input get-dashboard-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-dashboard-output (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-dashboard-output-"))
   (dashboard-arn common-lisp:nil :type
    (common-lisp:or dashboard-arn common-lisp:null))
   (dashboard-body common-lisp:nil :type
    (common-lisp:or dashboard-body common-lisp:null))
   (dashboard-name common-lisp:nil :type
    (common-lisp:or dashboard-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-dashboard-output 'make-get-dashboard-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input get-dashboard-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input get-dashboard-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'dashboard-arn))
      (common-lisp:list
       (common-lisp:cons "DashboardArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'dashboard-body))
      (common-lisp:list
       (common-lisp:cons "DashboardBody"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'dashboard-name))
      (common-lisp:list
       (common-lisp:cons "DashboardName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input get-dashboard-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-metric-statistics-input (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-metric-statistics-input-"))
   (namespace (common-lisp:error ":namespace is required") :type
    (common-lisp:or namespace common-lisp:null))
   (metric-name (common-lisp:error ":metric-name is required") :type
    (common-lisp:or metric-name common-lisp:null))
   (dimensions common-lisp:nil :type
    (common-lisp:or dimensions common-lisp:null))
   (start-time (common-lisp:error ":start-time is required") :type
    (common-lisp:or timestamp common-lisp:null))
   (end-time (common-lisp:error ":end-time is required") :type
    (common-lisp:or timestamp common-lisp:null))
   (period (common-lisp:error ":period is required") :type
    (common-lisp:or period common-lisp:null))
   (statistics common-lisp:nil :type
    (common-lisp:or statistics common-lisp:null))
   (extended-statistics common-lisp:nil :type
    (common-lisp:or extended-statistics common-lisp:null))
   (unit common-lisp:nil :type
    (common-lisp:or standard-unit common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-metric-statistics-input
                    'make-get-metric-statistics-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-metric-statistics-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-metric-statistics-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'namespace))
      (common-lisp:list
       (common-lisp:cons "Namespace"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'metric-name))
      (common-lisp:list
       (common-lisp:cons "MetricName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'dimensions))
      (common-lisp:list
       (common-lisp:cons "Dimensions"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'start-time))
      (common-lisp:list
       (common-lisp:cons "StartTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'end-time))
      (common-lisp:list
       (common-lisp:cons "EndTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'period))
      (common-lisp:list
       (common-lisp:cons "Period"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'statistics))
      (common-lisp:list
       (common-lisp:cons "Statistics"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'extended-statistics))
      (common-lisp:list
       (common-lisp:cons "ExtendedStatistics"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'unit))
      (common-lisp:list
       (common-lisp:cons "Unit"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-metric-statistics-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-metric-statistics-output (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-metric-statistics-output-"))
   (label common-lisp:nil :type (common-lisp:or metric-label common-lisp:null))
   (datapoints common-lisp:nil :type
    (common-lisp:or datapoints common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-metric-statistics-output
                    'make-get-metric-statistics-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-metric-statistics-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-metric-statistics-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'label))
      (common-lisp:list
       (common-lisp:cons "Label"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'datapoints))
      (common-lisp:list
       (common-lisp:cons "Datapoints"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-metric-statistics-output))
   common-lisp:nil))
(common-lisp:deftype history-data () 'common-lisp:string)
(common-lisp:deftype history-item-type () 'common-lisp:string)
(common-lisp:deftype history-summary () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:define-condition internal-service-fault
     (monitoring-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       internal-service-fault-message)))
 (common-lisp:export
  (common-lisp:list 'internal-service-fault 'internal-service-fault-message)))
(common-lisp:progn
 (common-lisp:define-condition invalid-format-fault
     (monitoring-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       invalid-format-fault-message)))
 (common-lisp:export
  (common-lisp:list 'invalid-format-fault 'invalid-format-fault-message)))
(common-lisp:progn
 (common-lisp:define-condition invalid-next-token
     (monitoring-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       invalid-next-token-message)))
 (common-lisp:export
  (common-lisp:list 'invalid-next-token 'invalid-next-token-message)))
(common-lisp:progn
 (common-lisp:define-condition invalid-parameter-combination-exception
     (monitoring-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       invalid-parameter-combination-exception-message)))
 (common-lisp:export
  (common-lisp:list 'invalid-parameter-combination-exception
                    'invalid-parameter-combination-exception-message)))
(common-lisp:progn
 (common-lisp:define-condition invalid-parameter-value-exception
     (monitoring-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       invalid-parameter-value-exception-message)))
 (common-lisp:export
  (common-lisp:list 'invalid-parameter-value-exception
                    'invalid-parameter-value-exception-message)))
(common-lisp:deftype last-modified () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:define-condition limit-exceeded-fault
     (monitoring-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       limit-exceeded-fault-message)))
 (common-lisp:export
  (common-lisp:list 'limit-exceeded-fault 'limit-exceeded-fault-message)))
(common-lisp:progn
 (common-lisp:defstruct
     (list-dashboards-input (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-dashboards-input-"))
   (dashboard-name-prefix common-lisp:nil :type
    (common-lisp:or dashboard-name-prefix common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-dashboards-input 'make-list-dashboards-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-dashboards-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-dashboards-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'dashboard-name-prefix))
      (common-lisp:list
       (common-lisp:cons "DashboardNamePrefix"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-dashboards-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-dashboards-output (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-dashboards-output-"))
   (dashboard-entries common-lisp:nil :type
    (common-lisp:or dashboard-entries common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-dashboards-output 'make-list-dashboards-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-dashboards-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-dashboards-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'dashboard-entries))
      (common-lisp:list
       (common-lisp:cons "DashboardEntries"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-dashboards-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-metrics-input (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-metrics-input-"))
   (namespace common-lisp:nil :type
    (common-lisp:or namespace common-lisp:null))
   (metric-name common-lisp:nil :type
    (common-lisp:or metric-name common-lisp:null))
   (dimensions common-lisp:nil :type
    (common-lisp:or dimension-filters common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-metrics-input 'make-list-metrics-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input list-metrics-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input list-metrics-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'namespace))
      (common-lisp:list
       (common-lisp:cons "Namespace"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'metric-name))
      (common-lisp:list
       (common-lisp:cons "MetricName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'dimensions))
      (common-lisp:list
       (common-lisp:cons "Dimensions"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input list-metrics-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-metrics-output (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-metrics-output-"))
   (metrics common-lisp:nil :type (common-lisp:or metrics common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-metrics-output 'make-list-metrics-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input list-metrics-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input list-metrics-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'metrics))
      (common-lisp:list
       (common-lisp:cons "Metrics"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input list-metrics-output))
   common-lisp:nil))
(common-lisp:deftype max-records () 'common-lisp:integer)
(common-lisp:deftype message () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (metric (:copier common-lisp:nil) (:conc-name "struct-shape-metric-"))
   (namespace common-lisp:nil :type
    (common-lisp:or namespace common-lisp:null))
   (metric-name common-lisp:nil :type
    (common-lisp:or metric-name common-lisp:null))
   (dimensions common-lisp:nil :type
    (common-lisp:or dimensions common-lisp:null)))
 (common-lisp:export (common-lisp:list 'metric 'make-metric))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input metric))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input metric))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'namespace))
      (common-lisp:list
       (common-lisp:cons "Namespace"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'metric-name))
      (common-lisp:list
       (common-lisp:cons "MetricName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'dimensions))
      (common-lisp:list
       (common-lisp:cons "Dimensions"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input metric))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (metric-alarm (:copier common-lisp:nil)
      (:conc-name "struct-shape-metric-alarm-"))
   (alarm-name common-lisp:nil :type
    (common-lisp:or alarm-name common-lisp:null))
   (alarm-arn common-lisp:nil :type
    (common-lisp:or alarm-arn common-lisp:null))
   (alarm-description common-lisp:nil :type
    (common-lisp:or alarm-description common-lisp:null))
   (alarm-configuration-updated-timestamp common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null))
   (actions-enabled common-lisp:nil :type
    (common-lisp:or actions-enabled common-lisp:null))
   (okactions common-lisp:nil :type
    (common-lisp:or resource-list common-lisp:null))
   (alarm-actions common-lisp:nil :type
    (common-lisp:or resource-list common-lisp:null))
   (insufficient-data-actions common-lisp:nil :type
    (common-lisp:or resource-list common-lisp:null))
   (state-value common-lisp:nil :type
    (common-lisp:or state-value common-lisp:null))
   (state-reason common-lisp:nil :type
    (common-lisp:or state-reason common-lisp:null))
   (state-reason-data common-lisp:nil :type
    (common-lisp:or state-reason-data common-lisp:null))
   (state-updated-timestamp common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null))
   (metric-name common-lisp:nil :type
    (common-lisp:or metric-name common-lisp:null))
   (namespace common-lisp:nil :type
    (common-lisp:or namespace common-lisp:null))
   (statistic common-lisp:nil :type
    (common-lisp:or statistic common-lisp:null))
   (extended-statistic common-lisp:nil :type
    (common-lisp:or extended-statistic common-lisp:null))
   (dimensions common-lisp:nil :type
    (common-lisp:or dimensions common-lisp:null))
   (period common-lisp:nil :type (common-lisp:or period common-lisp:null))
   (unit common-lisp:nil :type (common-lisp:or standard-unit common-lisp:null))
   (evaluation-periods common-lisp:nil :type
    (common-lisp:or evaluation-periods common-lisp:null))
   (threshold common-lisp:nil :type
    (common-lisp:or threshold common-lisp:null))
   (comparison-operator common-lisp:nil :type
    (common-lisp:or comparison-operator common-lisp:null))
   (treat-missing-data common-lisp:nil :type
    (common-lisp:or treat-missing-data common-lisp:null))
   (evaluate-low-sample-count-percentile common-lisp:nil :type
    (common-lisp:or evaluate-low-sample-count-percentile common-lisp:null)))
 (common-lisp:export (common-lisp:list 'metric-alarm 'make-metric-alarm))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input metric-alarm))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input metric-alarm))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'alarm-name))
      (common-lisp:list
       (common-lisp:cons "AlarmName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'alarm-arn))
      (common-lisp:list
       (common-lisp:cons "AlarmArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'alarm-description))
      (common-lisp:list
       (common-lisp:cons "AlarmDescription"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'alarm-configuration-updated-timestamp))
      (common-lisp:list
       (common-lisp:cons "AlarmConfigurationUpdatedTimestamp"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'actions-enabled))
      (common-lisp:list
       (common-lisp:cons "ActionsEnabled"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'okactions))
      (common-lisp:list
       (common-lisp:cons "OKActions"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'alarm-actions))
      (common-lisp:list
       (common-lisp:cons "AlarmActions"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'insufficient-data-actions))
      (common-lisp:list
       (common-lisp:cons "InsufficientDataActions"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'state-value))
      (common-lisp:list
       (common-lisp:cons "StateValue"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'state-reason))
      (common-lisp:list
       (common-lisp:cons "StateReason"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'state-reason-data))
      (common-lisp:list
       (common-lisp:cons "StateReasonData"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'state-updated-timestamp))
      (common-lisp:list
       (common-lisp:cons "StateUpdatedTimestamp"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'metric-name))
      (common-lisp:list
       (common-lisp:cons "MetricName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'namespace))
      (common-lisp:list
       (common-lisp:cons "Namespace"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'statistic))
      (common-lisp:list
       (common-lisp:cons "Statistic"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'extended-statistic))
      (common-lisp:list
       (common-lisp:cons "ExtendedStatistic"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'dimensions))
      (common-lisp:list
       (common-lisp:cons "Dimensions"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'period))
      (common-lisp:list
       (common-lisp:cons "Period"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'unit))
      (common-lisp:list
       (common-lisp:cons "Unit"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'evaluation-periods))
      (common-lisp:list
       (common-lisp:cons "EvaluationPeriods"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'threshold))
      (common-lisp:list
       (common-lisp:cons "Threshold"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'comparison-operator))
      (common-lisp:list
       (common-lisp:cons "ComparisonOperator"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'treat-missing-data))
      (common-lisp:list
       (common-lisp:cons "TreatMissingData"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'evaluate-low-sample-count-percentile))
      (common-lisp:list
       (common-lisp:cons "EvaluateLowSampleCountPercentile"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input metric-alarm))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype metric-alarms ()
   '(trivial-types:proper-list metric-alarm))
 (common-lisp:defun |make-metric-alarms|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list metric-alarm))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype metric-data () '(trivial-types:proper-list metric-datum))
 (common-lisp:defun |make-metric-data|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list metric-datum))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (metric-datum (:copier common-lisp:nil)
      (:conc-name "struct-shape-metric-datum-"))
   (metric-name (common-lisp:error ":metric-name is required") :type
    (common-lisp:or metric-name common-lisp:null))
   (dimensions common-lisp:nil :type
    (common-lisp:or dimensions common-lisp:null))
   (timestamp common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null))
   (value common-lisp:nil :type
    (common-lisp:or datapoint-value common-lisp:null))
   (statistic-values common-lisp:nil :type
    (common-lisp:or statistic-set common-lisp:null))
   (unit common-lisp:nil :type (common-lisp:or standard-unit common-lisp:null))
   (storage-resolution common-lisp:nil :type
    (common-lisp:or storage-resolution common-lisp:null)))
 (common-lisp:export (common-lisp:list 'metric-datum 'make-metric-datum))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input metric-datum))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input metric-datum))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'metric-name))
      (common-lisp:list
       (common-lisp:cons "MetricName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'dimensions))
      (common-lisp:list
       (common-lisp:cons "Dimensions"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'timestamp))
      (common-lisp:list
       (common-lisp:cons "Timestamp"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'value))
      (common-lisp:list
       (common-lisp:cons "Value"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'statistic-values))
      (common-lisp:list
       (common-lisp:cons "StatisticValues"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'unit))
      (common-lisp:list
       (common-lisp:cons "Unit"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'storage-resolution))
      (common-lisp:list
       (common-lisp:cons "StorageResolution"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input metric-datum))
   common-lisp:nil))
(common-lisp:deftype metric-label () 'common-lisp:string)
(common-lisp:deftype metric-name () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype metrics () '(trivial-types:proper-list metric))
 (common-lisp:defun |make-metrics|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list metric))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:define-condition missing-required-parameter-exception
     (monitoring-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       missing-required-parameter-exception-message)))
 (common-lisp:export
  (common-lisp:list 'missing-required-parameter-exception
                    'missing-required-parameter-exception-message)))
(common-lisp:deftype namespace () 'common-lisp:string)
(common-lisp:deftype next-token () 'common-lisp:string)
(common-lisp:deftype period () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:defstruct
     (put-dashboard-input (:copier common-lisp:nil)
      (:conc-name "struct-shape-put-dashboard-input-"))
   (dashboard-name common-lisp:nil :type
    (common-lisp:or dashboard-name common-lisp:null))
   (dashboard-body common-lisp:nil :type
    (common-lisp:or dashboard-body common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'put-dashboard-input 'make-put-dashboard-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input put-dashboard-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input put-dashboard-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'dashboard-name))
      (common-lisp:list
       (common-lisp:cons "DashboardName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'dashboard-body))
      (common-lisp:list
       (common-lisp:cons "DashboardBody"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input put-dashboard-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (put-dashboard-output (:copier common-lisp:nil)
      (:conc-name "struct-shape-put-dashboard-output-"))
   (dashboard-validation-messages common-lisp:nil :type
    (common-lisp:or dashboard-validation-messages common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'put-dashboard-output 'make-put-dashboard-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input put-dashboard-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input put-dashboard-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'dashboard-validation-messages))
      (common-lisp:list
       (common-lisp:cons "DashboardValidationMessages"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input put-dashboard-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (put-metric-alarm-input (:copier common-lisp:nil)
      (:conc-name "struct-shape-put-metric-alarm-input-"))
   (alarm-name (common-lisp:error ":alarm-name is required") :type
    (common-lisp:or alarm-name common-lisp:null))
   (alarm-description common-lisp:nil :type
    (common-lisp:or alarm-description common-lisp:null))
   (actions-enabled common-lisp:nil :type
    (common-lisp:or actions-enabled common-lisp:null))
   (okactions common-lisp:nil :type
    (common-lisp:or resource-list common-lisp:null))
   (alarm-actions common-lisp:nil :type
    (common-lisp:or resource-list common-lisp:null))
   (insufficient-data-actions common-lisp:nil :type
    (common-lisp:or resource-list common-lisp:null))
   (metric-name (common-lisp:error ":metric-name is required") :type
    (common-lisp:or metric-name common-lisp:null))
   (namespace (common-lisp:error ":namespace is required") :type
    (common-lisp:or namespace common-lisp:null))
   (statistic common-lisp:nil :type
    (common-lisp:or statistic common-lisp:null))
   (extended-statistic common-lisp:nil :type
    (common-lisp:or extended-statistic common-lisp:null))
   (dimensions common-lisp:nil :type
    (common-lisp:or dimensions common-lisp:null))
   (period (common-lisp:error ":period is required") :type
    (common-lisp:or period common-lisp:null))
   (unit common-lisp:nil :type (common-lisp:or standard-unit common-lisp:null))
   (evaluation-periods (common-lisp:error ":evaluation-periods is required")
    :type (common-lisp:or evaluation-periods common-lisp:null))
   (threshold (common-lisp:error ":threshold is required") :type
    (common-lisp:or threshold common-lisp:null))
   (comparison-operator (common-lisp:error ":comparison-operator is required")
    :type (common-lisp:or comparison-operator common-lisp:null))
   (treat-missing-data common-lisp:nil :type
    (common-lisp:or treat-missing-data common-lisp:null))
   (evaluate-low-sample-count-percentile common-lisp:nil :type
    (common-lisp:or evaluate-low-sample-count-percentile common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'put-metric-alarm-input 'make-put-metric-alarm-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          put-metric-alarm-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          put-metric-alarm-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'alarm-name))
      (common-lisp:list
       (common-lisp:cons "AlarmName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'alarm-description))
      (common-lisp:list
       (common-lisp:cons "AlarmDescription"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'actions-enabled))
      (common-lisp:list
       (common-lisp:cons "ActionsEnabled"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'okactions))
      (common-lisp:list
       (common-lisp:cons "OKActions"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'alarm-actions))
      (common-lisp:list
       (common-lisp:cons "AlarmActions"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'insufficient-data-actions))
      (common-lisp:list
       (common-lisp:cons "InsufficientDataActions"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'metric-name))
      (common-lisp:list
       (common-lisp:cons "MetricName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'namespace))
      (common-lisp:list
       (common-lisp:cons "Namespace"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'statistic))
      (common-lisp:list
       (common-lisp:cons "Statistic"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'extended-statistic))
      (common-lisp:list
       (common-lisp:cons "ExtendedStatistic"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'dimensions))
      (common-lisp:list
       (common-lisp:cons "Dimensions"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'period))
      (common-lisp:list
       (common-lisp:cons "Period"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'unit))
      (common-lisp:list
       (common-lisp:cons "Unit"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'evaluation-periods))
      (common-lisp:list
       (common-lisp:cons "EvaluationPeriods"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'threshold))
      (common-lisp:list
       (common-lisp:cons "Threshold"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'comparison-operator))
      (common-lisp:list
       (common-lisp:cons "ComparisonOperator"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'treat-missing-data))
      (common-lisp:list
       (common-lisp:cons "TreatMissingData"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'evaluate-low-sample-count-percentile))
      (common-lisp:list
       (common-lisp:cons "EvaluateLowSampleCountPercentile"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          put-metric-alarm-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (put-metric-data-input (:copier common-lisp:nil)
      (:conc-name "struct-shape-put-metric-data-input-"))
   (namespace (common-lisp:error ":namespace is required") :type
    (common-lisp:or namespace common-lisp:null))
   (metric-data (common-lisp:error ":metric-data is required") :type
    (common-lisp:or metric-data common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'put-metric-data-input 'make-put-metric-data-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          put-metric-data-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          put-metric-data-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'namespace))
      (common-lisp:list
       (common-lisp:cons "Namespace"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'metric-data))
      (common-lisp:list
       (common-lisp:cons "MetricData"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          put-metric-data-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype resource-list ()
   '(trivial-types:proper-list resource-name))
 (common-lisp:defun |make-resource-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list resource-name))
   aws-sdk/generator/shape::members))
(common-lisp:deftype resource-name () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:define-condition resource-not-found
     (monitoring-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       resource-not-found-message)))
 (common-lisp:export
  (common-lisp:list 'resource-not-found 'resource-not-found-message)))
(common-lisp:progn
 (common-lisp:defstruct
     (set-alarm-state-input (:copier common-lisp:nil)
      (:conc-name "struct-shape-set-alarm-state-input-"))
   (alarm-name (common-lisp:error ":alarm-name is required") :type
    (common-lisp:or alarm-name common-lisp:null))
   (state-value (common-lisp:error ":state-value is required") :type
    (common-lisp:or state-value common-lisp:null))
   (state-reason (common-lisp:error ":state-reason is required") :type
    (common-lisp:or state-reason common-lisp:null))
   (state-reason-data common-lisp:nil :type
    (common-lisp:or state-reason-data common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'set-alarm-state-input 'make-set-alarm-state-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          set-alarm-state-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          set-alarm-state-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'alarm-name))
      (common-lisp:list
       (common-lisp:cons "AlarmName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'state-value))
      (common-lisp:list
       (common-lisp:cons "StateValue"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'state-reason))
      (common-lisp:list
       (common-lisp:cons "StateReason"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'state-reason-data))
      (common-lisp:list
       (common-lisp:cons "StateReasonData"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          set-alarm-state-input))
   common-lisp:nil))
(common-lisp:deftype size () 'common-lisp:integer)
(common-lisp:deftype standard-unit () 'common-lisp:string)
(common-lisp:deftype state-reason () 'common-lisp:string)
(common-lisp:deftype state-reason-data () 'common-lisp:string)
(common-lisp:deftype state-value () 'common-lisp:string)
(common-lisp:deftype statistic () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (statistic-set (:copier common-lisp:nil)
      (:conc-name "struct-shape-statistic-set-"))
   (sample-count (common-lisp:error ":sample-count is required") :type
    (common-lisp:or datapoint-value common-lisp:null))
   (sum (common-lisp:error ":sum is required") :type
    (common-lisp:or datapoint-value common-lisp:null))
   (minimum (common-lisp:error ":minimum is required") :type
    (common-lisp:or datapoint-value common-lisp:null))
   (maximum (common-lisp:error ":maximum is required") :type
    (common-lisp:or datapoint-value common-lisp:null)))
 (common-lisp:export (common-lisp:list 'statistic-set 'make-statistic-set))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input statistic-set))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input statistic-set))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'sample-count))
      (common-lisp:list
       (common-lisp:cons "SampleCount"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'sum))
      (common-lisp:list
       (common-lisp:cons "Sum"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'minimum))
      (common-lisp:list
       (common-lisp:cons "Minimum"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'maximum))
      (common-lisp:list
       (common-lisp:cons "Maximum"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input statistic-set))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype statistics () '(trivial-types:proper-list statistic))
 (common-lisp:defun |make-statistics|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list statistic))
   aws-sdk/generator/shape::members))
(common-lisp:deftype storage-resolution () 'common-lisp:integer)
(common-lisp:deftype threshold () 'common-lisp:double-float)
(common-lisp:deftype timestamp () 'common-lisp:string)
(common-lisp:deftype treat-missing-data () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defun delete-alarms
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key alarm-names)
   (common-lisp:declare (common-lisp:ignorable alarm-names))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-alarms-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'monitoring-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "DeleteAlarms"
                                                        "2010-08-01"))
      common-lisp:nil common-lisp:nil
      '(("DashboardInvalidInputError" . dashboard-invalid-input-error)
        ("DashboardNotFoundError" . dashboard-not-found-error)
        ("InternalServiceFault" . internal-service-fault)
        ("InvalidFormatFault" . invalid-format-fault)
        ("InvalidNextToken" . invalid-next-token)
        ("InvalidParameterCombinationException"
         . invalid-parameter-combination-exception)
        ("InvalidParameterValueException" . invalid-parameter-value-exception)
        ("LimitExceededFault" . limit-exceeded-fault)
        ("MissingRequiredParameterException"
         . missing-required-parameter-exception)
        ("ResourceNotFound" . resource-not-found)))))
 (common-lisp:export 'delete-alarms))
(common-lisp:progn
 (common-lisp:defun delete-dashboards
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key dashboard-names)
   (common-lisp:declare (common-lisp:ignorable dashboard-names))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-dashboards-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'monitoring-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "DeleteDashboards"
                                                        "2010-08-01"))
      common-lisp:nil "DeleteDashboardsResult"
      '(("DashboardInvalidInputError" . dashboard-invalid-input-error)
        ("DashboardNotFoundError" . dashboard-not-found-error)
        ("InternalServiceFault" . internal-service-fault)
        ("InvalidFormatFault" . invalid-format-fault)
        ("InvalidNextToken" . invalid-next-token)
        ("InvalidParameterCombinationException"
         . invalid-parameter-combination-exception)
        ("InvalidParameterValueException" . invalid-parameter-value-exception)
        ("LimitExceededFault" . limit-exceeded-fault)
        ("MissingRequiredParameterException"
         . missing-required-parameter-exception)
        ("ResourceNotFound" . resource-not-found)))))
 (common-lisp:export 'delete-dashboards))
(common-lisp:progn
 (common-lisp:defun describe-alarm-history
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key alarm-name history-item-type start-date
                     end-date max-records next-token)
   (common-lisp:declare
    (common-lisp:ignorable alarm-name history-item-type start-date end-date
     max-records next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-describe-alarm-history-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'monitoring-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "DescribeAlarmHistory"
                                                        "2010-08-01"))
      common-lisp:nil "DescribeAlarmHistoryResult"
      '(("DashboardInvalidInputError" . dashboard-invalid-input-error)
        ("DashboardNotFoundError" . dashboard-not-found-error)
        ("InternalServiceFault" . internal-service-fault)
        ("InvalidFormatFault" . invalid-format-fault)
        ("InvalidNextToken" . invalid-next-token)
        ("InvalidParameterCombinationException"
         . invalid-parameter-combination-exception)
        ("InvalidParameterValueException" . invalid-parameter-value-exception)
        ("LimitExceededFault" . limit-exceeded-fault)
        ("MissingRequiredParameterException"
         . missing-required-parameter-exception)
        ("ResourceNotFound" . resource-not-found)))))
 (common-lisp:export 'describe-alarm-history))
(common-lisp:progn
 (common-lisp:defun describe-alarms
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key alarm-names alarm-name-prefix state-value
                     action-prefix max-records next-token)
   (common-lisp:declare
    (common-lisp:ignorable alarm-names alarm-name-prefix state-value
     action-prefix max-records next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-describe-alarms-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'monitoring-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "DescribeAlarms"
                                                        "2010-08-01"))
      common-lisp:nil "DescribeAlarmsResult"
      '(("DashboardInvalidInputError" . dashboard-invalid-input-error)
        ("DashboardNotFoundError" . dashboard-not-found-error)
        ("InternalServiceFault" . internal-service-fault)
        ("InvalidFormatFault" . invalid-format-fault)
        ("InvalidNextToken" . invalid-next-token)
        ("InvalidParameterCombinationException"
         . invalid-parameter-combination-exception)
        ("InvalidParameterValueException" . invalid-parameter-value-exception)
        ("LimitExceededFault" . limit-exceeded-fault)
        ("MissingRequiredParameterException"
         . missing-required-parameter-exception)
        ("ResourceNotFound" . resource-not-found)))))
 (common-lisp:export 'describe-alarms))
(common-lisp:progn
 (common-lisp:defun describe-alarms-for-metric
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key metric-name namespace statistic
                     extended-statistic dimensions period unit)
   (common-lisp:declare
    (common-lisp:ignorable metric-name namespace statistic extended-statistic
     dimensions period unit))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-describe-alarms-for-metric-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'monitoring-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "DescribeAlarmsForMetric"
                                                        "2010-08-01"))
      common-lisp:nil "DescribeAlarmsForMetricResult"
      '(("DashboardInvalidInputError" . dashboard-invalid-input-error)
        ("DashboardNotFoundError" . dashboard-not-found-error)
        ("InternalServiceFault" . internal-service-fault)
        ("InvalidFormatFault" . invalid-format-fault)
        ("InvalidNextToken" . invalid-next-token)
        ("InvalidParameterCombinationException"
         . invalid-parameter-combination-exception)
        ("InvalidParameterValueException" . invalid-parameter-value-exception)
        ("LimitExceededFault" . limit-exceeded-fault)
        ("MissingRequiredParameterException"
         . missing-required-parameter-exception)
        ("ResourceNotFound" . resource-not-found)))))
 (common-lisp:export 'describe-alarms-for-metric))
(common-lisp:progn
 (common-lisp:defun disable-alarm-actions
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key alarm-names)
   (common-lisp:declare (common-lisp:ignorable alarm-names))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-disable-alarm-actions-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'monitoring-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "DisableAlarmActions"
                                                        "2010-08-01"))
      common-lisp:nil common-lisp:nil
      '(("DashboardInvalidInputError" . dashboard-invalid-input-error)
        ("DashboardNotFoundError" . dashboard-not-found-error)
        ("InternalServiceFault" . internal-service-fault)
        ("InvalidFormatFault" . invalid-format-fault)
        ("InvalidNextToken" . invalid-next-token)
        ("InvalidParameterCombinationException"
         . invalid-parameter-combination-exception)
        ("InvalidParameterValueException" . invalid-parameter-value-exception)
        ("LimitExceededFault" . limit-exceeded-fault)
        ("MissingRequiredParameterException"
         . missing-required-parameter-exception)
        ("ResourceNotFound" . resource-not-found)))))
 (common-lisp:export 'disable-alarm-actions))
(common-lisp:progn
 (common-lisp:defun enable-alarm-actions
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key alarm-names)
   (common-lisp:declare (common-lisp:ignorable alarm-names))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-enable-alarm-actions-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'monitoring-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "EnableAlarmActions"
                                                        "2010-08-01"))
      common-lisp:nil common-lisp:nil
      '(("DashboardInvalidInputError" . dashboard-invalid-input-error)
        ("DashboardNotFoundError" . dashboard-not-found-error)
        ("InternalServiceFault" . internal-service-fault)
        ("InvalidFormatFault" . invalid-format-fault)
        ("InvalidNextToken" . invalid-next-token)
        ("InvalidParameterCombinationException"
         . invalid-parameter-combination-exception)
        ("InvalidParameterValueException" . invalid-parameter-value-exception)
        ("LimitExceededFault" . limit-exceeded-fault)
        ("MissingRequiredParameterException"
         . missing-required-parameter-exception)
        ("ResourceNotFound" . resource-not-found)))))
 (common-lisp:export 'enable-alarm-actions))
(common-lisp:progn
 (common-lisp:defun get-dashboard
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key dashboard-name)
   (common-lisp:declare (common-lisp:ignorable dashboard-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-dashboard-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'monitoring-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "GetDashboard"
                                                        "2010-08-01"))
      common-lisp:nil "GetDashboardResult"
      '(("DashboardInvalidInputError" . dashboard-invalid-input-error)
        ("DashboardNotFoundError" . dashboard-not-found-error)
        ("InternalServiceFault" . internal-service-fault)
        ("InvalidFormatFault" . invalid-format-fault)
        ("InvalidNextToken" . invalid-next-token)
        ("InvalidParameterCombinationException"
         . invalid-parameter-combination-exception)
        ("InvalidParameterValueException" . invalid-parameter-value-exception)
        ("LimitExceededFault" . limit-exceeded-fault)
        ("MissingRequiredParameterException"
         . missing-required-parameter-exception)
        ("ResourceNotFound" . resource-not-found)))))
 (common-lisp:export 'get-dashboard))
(common-lisp:progn
 (common-lisp:defun get-metric-statistics
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key namespace metric-name dimensions
                     start-time end-time period statistics extended-statistics
                     unit)
   (common-lisp:declare
    (common-lisp:ignorable namespace metric-name dimensions start-time end-time
     period statistics extended-statistics unit))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-metric-statistics-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'monitoring-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "GetMetricStatistics"
                                                        "2010-08-01"))
      common-lisp:nil "GetMetricStatisticsResult"
      '(("DashboardInvalidInputError" . dashboard-invalid-input-error)
        ("DashboardNotFoundError" . dashboard-not-found-error)
        ("InternalServiceFault" . internal-service-fault)
        ("InvalidFormatFault" . invalid-format-fault)
        ("InvalidNextToken" . invalid-next-token)
        ("InvalidParameterCombinationException"
         . invalid-parameter-combination-exception)
        ("InvalidParameterValueException" . invalid-parameter-value-exception)
        ("LimitExceededFault" . limit-exceeded-fault)
        ("MissingRequiredParameterException"
         . missing-required-parameter-exception)
        ("ResourceNotFound" . resource-not-found)))))
 (common-lisp:export 'get-metric-statistics))
(common-lisp:progn
 (common-lisp:defun list-dashboards
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key dashboard-name-prefix next-token)
   (common-lisp:declare
    (common-lisp:ignorable dashboard-name-prefix next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-dashboards-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'monitoring-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "ListDashboards"
                                                        "2010-08-01"))
      common-lisp:nil "ListDashboardsResult"
      '(("DashboardInvalidInputError" . dashboard-invalid-input-error)
        ("DashboardNotFoundError" . dashboard-not-found-error)
        ("InternalServiceFault" . internal-service-fault)
        ("InvalidFormatFault" . invalid-format-fault)
        ("InvalidNextToken" . invalid-next-token)
        ("InvalidParameterCombinationException"
         . invalid-parameter-combination-exception)
        ("InvalidParameterValueException" . invalid-parameter-value-exception)
        ("LimitExceededFault" . limit-exceeded-fault)
        ("MissingRequiredParameterException"
         . missing-required-parameter-exception)
        ("ResourceNotFound" . resource-not-found)))))
 (common-lisp:export 'list-dashboards))
(common-lisp:progn
 (common-lisp:defun list-metrics
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key namespace metric-name dimensions
                     next-token)
   (common-lisp:declare
    (common-lisp:ignorable namespace metric-name dimensions next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-metrics-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'monitoring-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "ListMetrics"
                                                        "2010-08-01"))
      common-lisp:nil "ListMetricsResult"
      '(("DashboardInvalidInputError" . dashboard-invalid-input-error)
        ("DashboardNotFoundError" . dashboard-not-found-error)
        ("InternalServiceFault" . internal-service-fault)
        ("InvalidFormatFault" . invalid-format-fault)
        ("InvalidNextToken" . invalid-next-token)
        ("InvalidParameterCombinationException"
         . invalid-parameter-combination-exception)
        ("InvalidParameterValueException" . invalid-parameter-value-exception)
        ("LimitExceededFault" . limit-exceeded-fault)
        ("MissingRequiredParameterException"
         . missing-required-parameter-exception)
        ("ResourceNotFound" . resource-not-found)))))
 (common-lisp:export 'list-metrics))
(common-lisp:progn
 (common-lisp:defun put-dashboard
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key dashboard-name dashboard-body)
   (common-lisp:declare (common-lisp:ignorable dashboard-name dashboard-body))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-put-dashboard-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'monitoring-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "PutDashboard"
                                                        "2010-08-01"))
      common-lisp:nil "PutDashboardResult"
      '(("DashboardInvalidInputError" . dashboard-invalid-input-error)
        ("DashboardNotFoundError" . dashboard-not-found-error)
        ("InternalServiceFault" . internal-service-fault)
        ("InvalidFormatFault" . invalid-format-fault)
        ("InvalidNextToken" . invalid-next-token)
        ("InvalidParameterCombinationException"
         . invalid-parameter-combination-exception)
        ("InvalidParameterValueException" . invalid-parameter-value-exception)
        ("LimitExceededFault" . limit-exceeded-fault)
        ("MissingRequiredParameterException"
         . missing-required-parameter-exception)
        ("ResourceNotFound" . resource-not-found)))))
 (common-lisp:export 'put-dashboard))
(common-lisp:progn
 (common-lisp:defun put-metric-alarm
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key alarm-name alarm-description
                     actions-enabled okactions alarm-actions
                     insufficient-data-actions metric-name namespace statistic
                     extended-statistic dimensions period unit
                     evaluation-periods threshold comparison-operator
                     treat-missing-data evaluate-low-sample-count-percentile)
   (common-lisp:declare
    (common-lisp:ignorable alarm-name alarm-description actions-enabled
     okactions alarm-actions insufficient-data-actions metric-name namespace
     statistic extended-statistic dimensions period unit evaluation-periods
     threshold comparison-operator treat-missing-data
     evaluate-low-sample-count-percentile))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-put-metric-alarm-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'monitoring-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "PutMetricAlarm"
                                                        "2010-08-01"))
      common-lisp:nil common-lisp:nil
      '(("DashboardInvalidInputError" . dashboard-invalid-input-error)
        ("DashboardNotFoundError" . dashboard-not-found-error)
        ("InternalServiceFault" . internal-service-fault)
        ("InvalidFormatFault" . invalid-format-fault)
        ("InvalidNextToken" . invalid-next-token)
        ("InvalidParameterCombinationException"
         . invalid-parameter-combination-exception)
        ("InvalidParameterValueException" . invalid-parameter-value-exception)
        ("LimitExceededFault" . limit-exceeded-fault)
        ("MissingRequiredParameterException"
         . missing-required-parameter-exception)
        ("ResourceNotFound" . resource-not-found)))))
 (common-lisp:export 'put-metric-alarm))
(common-lisp:progn
 (common-lisp:defun put-metric-data
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key namespace metric-data)
   (common-lisp:declare (common-lisp:ignorable namespace metric-data))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-put-metric-data-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'monitoring-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "PutMetricData"
                                                        "2010-08-01"))
      common-lisp:nil common-lisp:nil
      '(("DashboardInvalidInputError" . dashboard-invalid-input-error)
        ("DashboardNotFoundError" . dashboard-not-found-error)
        ("InternalServiceFault" . internal-service-fault)
        ("InvalidFormatFault" . invalid-format-fault)
        ("InvalidNextToken" . invalid-next-token)
        ("InvalidParameterCombinationException"
         . invalid-parameter-combination-exception)
        ("InvalidParameterValueException" . invalid-parameter-value-exception)
        ("LimitExceededFault" . limit-exceeded-fault)
        ("MissingRequiredParameterException"
         . missing-required-parameter-exception)
        ("ResourceNotFound" . resource-not-found)))))
 (common-lisp:export 'put-metric-data))
(common-lisp:progn
 (common-lisp:defun set-alarm-state
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key alarm-name state-value state-reason
                     state-reason-data)
   (common-lisp:declare
    (common-lisp:ignorable alarm-name state-value state-reason
     state-reason-data))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-set-alarm-state-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'monitoring-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "SetAlarmState"
                                                        "2010-08-01"))
      common-lisp:nil common-lisp:nil
      '(("DashboardInvalidInputError" . dashboard-invalid-input-error)
        ("DashboardNotFoundError" . dashboard-not-found-error)
        ("InternalServiceFault" . internal-service-fault)
        ("InvalidFormatFault" . invalid-format-fault)
        ("InvalidNextToken" . invalid-next-token)
        ("InvalidParameterCombinationException"
         . invalid-parameter-combination-exception)
        ("InvalidParameterValueException" . invalid-parameter-value-exception)
        ("LimitExceededFault" . limit-exceeded-fault)
        ("MissingRequiredParameterException"
         . missing-required-parameter-exception)
        ("ResourceNotFound" . resource-not-found)))))
 (common-lisp:export 'set-alarm-state))
