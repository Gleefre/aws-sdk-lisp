;; DO NOT EDIT: File is generated by AWS-SDK/GENERATOR.

(common-lisp:defpackage #:aws-sdk/services/storagegateway/api
  (:use)
  (:nicknames #:aws/storagegateway)
  (:import-from #:aws-sdk/generator/shape)
  (:import-from #:aws-sdk/generator/operation)
  (:import-from #:aws-sdk/api)
  (:import-from #:aws-sdk/request)
  (:import-from #:aws-sdk/error))
(common-lisp:in-package #:aws-sdk/services/storagegateway/api)
(common-lisp:progn
 (common-lisp:defclass storagegateway-request (aws-sdk/request:request)
                       common-lisp:nil
                       (:default-initargs :service "storagegateway"))
 (common-lisp:export 'storagegateway-request))
(common-lisp:progn
 (common-lisp:define-condition storagegateway-error
     (aws-sdk/error:aws-error)
     common-lisp:nil)
 (common-lisp:export 'storagegateway-error))
(common-lisp:defvar *error-map*
  '(("InternalServerError" . internal-server-error)
    ("InvalidGatewayRequestException" . invalid-gateway-request-exception)
    ("ServiceUnavailableError" . service-unavailable-error)))
(common-lisp:progn
 (common-lisp:defstruct
     (activate-gateway-input (:copier common-lisp:nil)
      (:conc-name "struct-shape-activate-gateway-input-"))
   (activation-key (common-lisp:error ":activation-key is required") :type
    (common-lisp:or activation-key common-lisp:null))
   (gateway-name (common-lisp:error ":gateway-name is required") :type
    (common-lisp:or gateway-name common-lisp:null))
   (gateway-timezone (common-lisp:error ":gateway-timezone is required") :type
    (common-lisp:or gateway-timezone common-lisp:null))
   (gateway-region (common-lisp:error ":gateway-region is required") :type
    (common-lisp:or region-id common-lisp:null))
   (gateway-type common-lisp:nil :type
    (common-lisp:or gateway-type common-lisp:null))
   (tape-drive-type common-lisp:nil :type
    (common-lisp:or tape-drive-type common-lisp:null))
   (medium-changer-type common-lisp:nil :type
    (common-lisp:or medium-changer-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'activate-gateway-input 'make-activate-gateway-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          activate-gateway-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          activate-gateway-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'activation-key))
      (common-lisp:list
       (common-lisp:cons "ActivationKey"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'gateway-name))
      (common-lisp:list
       (common-lisp:cons "GatewayName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'gateway-timezone))
      (common-lisp:list
       (common-lisp:cons "GatewayTimezone"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'gateway-region))
      (common-lisp:list
       (common-lisp:cons "GatewayRegion"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'gateway-type))
      (common-lisp:list
       (common-lisp:cons "GatewayType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tape-drive-type))
      (common-lisp:list
       (common-lisp:cons "TapeDriveType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'medium-changer-type))
      (common-lisp:list
       (common-lisp:cons "MediumChangerType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          activate-gateway-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (activate-gateway-output (:copier common-lisp:nil)
      (:conc-name "struct-shape-activate-gateway-output-"))
   (gateway-arn common-lisp:nil :type
    (common-lisp:or gateway-arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'activate-gateway-output 'make-activate-gateway-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          activate-gateway-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          activate-gateway-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'gateway-arn))
      (common-lisp:list
       (common-lisp:cons "GatewayARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          activate-gateway-output))
   common-lisp:nil))
(common-lisp:deftype activation-key () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (add-cache-input (:copier common-lisp:nil)
      (:conc-name "struct-shape-add-cache-input-"))
   (gateway-arn (common-lisp:error ":gateway-arn is required") :type
    (common-lisp:or gateway-arn common-lisp:null))
   (disk-ids (common-lisp:error ":disk-ids is required") :type
    (common-lisp:or disk-ids common-lisp:null)))
 (common-lisp:export (common-lisp:list 'add-cache-input 'make-add-cache-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input add-cache-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input add-cache-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'gateway-arn))
      (common-lisp:list
       (common-lisp:cons "GatewayARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'disk-ids))
      (common-lisp:list
       (common-lisp:cons "DiskIds"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input add-cache-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (add-cache-output (:copier common-lisp:nil)
      (:conc-name "struct-shape-add-cache-output-"))
   (gateway-arn common-lisp:nil :type
    (common-lisp:or gateway-arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'add-cache-output 'make-add-cache-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input add-cache-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input add-cache-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'gateway-arn))
      (common-lisp:list
       (common-lisp:cons "GatewayARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input add-cache-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (add-tags-to-resource-input (:copier common-lisp:nil)
      (:conc-name "struct-shape-add-tags-to-resource-input-"))
   (resource-arn (common-lisp:error ":resource-arn is required") :type
    (common-lisp:or resource-arn common-lisp:null))
   (tags (common-lisp:error ":tags is required") :type
    (common-lisp:or tags common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'add-tags-to-resource-input
                    'make-add-tags-to-resource-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          add-tags-to-resource-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          add-tags-to-resource-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-arn))
      (common-lisp:list
       (common-lisp:cons "ResourceARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          add-tags-to-resource-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (add-tags-to-resource-output (:copier common-lisp:nil)
      (:conc-name "struct-shape-add-tags-to-resource-output-"))
   (resource-arn common-lisp:nil :type
    (common-lisp:or resource-arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'add-tags-to-resource-output
                    'make-add-tags-to-resource-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          add-tags-to-resource-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          add-tags-to-resource-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-arn))
      (common-lisp:list
       (common-lisp:cons "ResourceARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          add-tags-to-resource-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (add-upload-buffer-input (:copier common-lisp:nil)
      (:conc-name "struct-shape-add-upload-buffer-input-"))
   (gateway-arn (common-lisp:error ":gateway-arn is required") :type
    (common-lisp:or gateway-arn common-lisp:null))
   (disk-ids (common-lisp:error ":disk-ids is required") :type
    (common-lisp:or disk-ids common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'add-upload-buffer-input 'make-add-upload-buffer-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          add-upload-buffer-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          add-upload-buffer-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'gateway-arn))
      (common-lisp:list
       (common-lisp:cons "GatewayARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'disk-ids))
      (common-lisp:list
       (common-lisp:cons "DiskIds"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          add-upload-buffer-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (add-upload-buffer-output (:copier common-lisp:nil)
      (:conc-name "struct-shape-add-upload-buffer-output-"))
   (gateway-arn common-lisp:nil :type
    (common-lisp:or gateway-arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'add-upload-buffer-output 'make-add-upload-buffer-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          add-upload-buffer-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          add-upload-buffer-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'gateway-arn))
      (common-lisp:list
       (common-lisp:cons "GatewayARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          add-upload-buffer-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (add-working-storage-input (:copier common-lisp:nil)
      (:conc-name "struct-shape-add-working-storage-input-"))
   (gateway-arn (common-lisp:error ":gateway-arn is required") :type
    (common-lisp:or gateway-arn common-lisp:null))
   (disk-ids (common-lisp:error ":disk-ids is required") :type
    (common-lisp:or disk-ids common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'add-working-storage-input
                    'make-add-working-storage-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          add-working-storage-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          add-working-storage-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'gateway-arn))
      (common-lisp:list
       (common-lisp:cons "GatewayARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'disk-ids))
      (common-lisp:list
       (common-lisp:cons "DiskIds"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          add-working-storage-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (add-working-storage-output (:copier common-lisp:nil)
      (:conc-name "struct-shape-add-working-storage-output-"))
   (gateway-arn common-lisp:nil :type
    (common-lisp:or gateway-arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'add-working-storage-output
                    'make-add-working-storage-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          add-working-storage-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          add-working-storage-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'gateway-arn))
      (common-lisp:list
       (common-lisp:cons "GatewayARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          add-working-storage-output))
   common-lisp:nil))
(common-lisp:deftype bandwidth-download-rate-limit () 'common-lisp:integer)
(common-lisp:deftype bandwidth-type () 'common-lisp:string)
(common-lisp:deftype bandwidth-upload-rate-limit () 'common-lisp:integer)
(common-lisp:deftype boolean () 'common-lisp:boolean)
(common-lisp:progn
 (common-lisp:defstruct
     (cachedi-scsivolume (:copier common-lisp:nil)
      (:conc-name "struct-shape-cachedi-scsivolume-"))
   (volume-arn common-lisp:nil :type
    (common-lisp:or volume-arn common-lisp:null))
   (volume-id common-lisp:nil :type
    (common-lisp:or volume-id common-lisp:null))
   (volume-type common-lisp:nil :type
    (common-lisp:or volume-type common-lisp:null))
   (volume-status common-lisp:nil :type
    (common-lisp:or volume-status common-lisp:null))
   (volume-size-in-bytes common-lisp:nil :type
    (common-lisp:or common-lisp:integer common-lisp:null))
   (volume-progress common-lisp:nil :type
    (common-lisp:or double-object common-lisp:null))
   (source-snapshot-id common-lisp:nil :type
    (common-lisp:or snapshot-id common-lisp:null))
   (volumei-scsiattributes common-lisp:nil :type
    (common-lisp:or volumei-scsiattributes common-lisp:null))
   (created-date common-lisp:nil :type
    (common-lisp:or created-date common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'cachedi-scsivolume 'make-cachedi-scsivolume))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input cachedi-scsivolume))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input cachedi-scsivolume))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'volume-arn))
      (common-lisp:list
       (common-lisp:cons "VolumeARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'volume-id))
      (common-lisp:list
       (common-lisp:cons "VolumeId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'volume-type))
      (common-lisp:list
       (common-lisp:cons "VolumeType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'volume-status))
      (common-lisp:list
       (common-lisp:cons "VolumeStatus"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'volume-size-in-bytes))
      (common-lisp:list
       (common-lisp:cons "VolumeSizeInBytes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'volume-progress))
      (common-lisp:list
       (common-lisp:cons "VolumeProgress"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'source-snapshot-id))
      (common-lisp:list
       (common-lisp:cons "SourceSnapshotId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'volumei-scsiattributes))
      (common-lisp:list
       (common-lisp:cons "VolumeiSCSIAttributes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created-date))
      (common-lisp:list
       (common-lisp:cons "CreatedDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input cachedi-scsivolume))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype cachedi-scsivolumes ()
   '(trivial-types:proper-list cachedi-scsivolume))
 (common-lisp:defun |make-cachedi-scsivolumes|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list cachedi-scsivolume))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (cancel-archival-input (:copier common-lisp:nil)
      (:conc-name "struct-shape-cancel-archival-input-"))
   (gateway-arn (common-lisp:error ":gateway-arn is required") :type
    (common-lisp:or gateway-arn common-lisp:null))
   (tape-arn (common-lisp:error ":tape-arn is required") :type
    (common-lisp:or tape-arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'cancel-archival-input 'make-cancel-archival-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          cancel-archival-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          cancel-archival-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'gateway-arn))
      (common-lisp:list
       (common-lisp:cons "GatewayARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tape-arn))
      (common-lisp:list
       (common-lisp:cons "TapeARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          cancel-archival-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (cancel-archival-output (:copier common-lisp:nil)
      (:conc-name "struct-shape-cancel-archival-output-"))
   (tape-arn common-lisp:nil :type (common-lisp:or tape-arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'cancel-archival-output 'make-cancel-archival-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          cancel-archival-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          cancel-archival-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tape-arn))
      (common-lisp:list
       (common-lisp:cons "TapeARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          cancel-archival-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (cancel-retrieval-input (:copier common-lisp:nil)
      (:conc-name "struct-shape-cancel-retrieval-input-"))
   (gateway-arn (common-lisp:error ":gateway-arn is required") :type
    (common-lisp:or gateway-arn common-lisp:null))
   (tape-arn (common-lisp:error ":tape-arn is required") :type
    (common-lisp:or tape-arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'cancel-retrieval-input 'make-cancel-retrieval-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          cancel-retrieval-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          cancel-retrieval-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'gateway-arn))
      (common-lisp:list
       (common-lisp:cons "GatewayARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tape-arn))
      (common-lisp:list
       (common-lisp:cons "TapeARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          cancel-retrieval-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (cancel-retrieval-output (:copier common-lisp:nil)
      (:conc-name "struct-shape-cancel-retrieval-output-"))
   (tape-arn common-lisp:nil :type (common-lisp:or tape-arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'cancel-retrieval-output 'make-cancel-retrieval-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          cancel-retrieval-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          cancel-retrieval-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tape-arn))
      (common-lisp:list
       (common-lisp:cons "TapeARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          cancel-retrieval-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype chap-credentials ()
   '(trivial-types:proper-list chap-info))
 (common-lisp:defun |make-chap-credentials|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list chap-info))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (chap-info (:copier common-lisp:nil)
      (:conc-name "struct-shape-chap-info-"))
   (target-arn common-lisp:nil :type
    (common-lisp:or target-arn common-lisp:null))
   (secret-to-authenticate-initiator common-lisp:nil :type
    (common-lisp:or chap-secret common-lisp:null))
   (initiator-name common-lisp:nil :type
    (common-lisp:or iqn-name common-lisp:null))
   (secret-to-authenticate-target common-lisp:nil :type
    (common-lisp:or chap-secret common-lisp:null)))
 (common-lisp:export (common-lisp:list 'chap-info 'make-chap-info))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input chap-info))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input chap-info))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'target-arn))
      (common-lisp:list
       (common-lisp:cons "TargetARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'secret-to-authenticate-initiator))
      (common-lisp:list
       (common-lisp:cons "SecretToAuthenticateInitiator"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'initiator-name))
      (common-lisp:list
       (common-lisp:cons "InitiatorName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'secret-to-authenticate-target))
      (common-lisp:list
       (common-lisp:cons "SecretToAuthenticateTarget"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input chap-info))
   common-lisp:nil))
(common-lisp:deftype chap-secret () 'common-lisp:string)
(common-lisp:deftype client-token () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (create-cachedi-scsivolume-input (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-cachedi-scsivolume-input-"))
   (gateway-arn (common-lisp:error ":gateway-arn is required") :type
    (common-lisp:or gateway-arn common-lisp:null))
   (volume-size-in-bytes
    (common-lisp:error ":volume-size-in-bytes is required") :type
    (common-lisp:or common-lisp:integer common-lisp:null))
   (snapshot-id common-lisp:nil :type
    (common-lisp:or snapshot-id common-lisp:null))
   (target-name (common-lisp:error ":target-name is required") :type
    (common-lisp:or target-name common-lisp:null))
   (source-volume-arn common-lisp:nil :type
    (common-lisp:or volume-arn common-lisp:null))
   (network-interface-id
    (common-lisp:error ":network-interface-id is required") :type
    (common-lisp:or network-interface-id common-lisp:null))
   (client-token (common-lisp:error ":client-token is required") :type
    (common-lisp:or client-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-cachedi-scsivolume-input
                    'make-create-cachedi-scsivolume-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-cachedi-scsivolume-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-cachedi-scsivolume-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'gateway-arn))
      (common-lisp:list
       (common-lisp:cons "GatewayARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'volume-size-in-bytes))
      (common-lisp:list
       (common-lisp:cons "VolumeSizeInBytes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'snapshot-id))
      (common-lisp:list
       (common-lisp:cons "SnapshotId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'target-name))
      (common-lisp:list
       (common-lisp:cons "TargetName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'source-volume-arn))
      (common-lisp:list
       (common-lisp:cons "SourceVolumeARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'network-interface-id))
      (common-lisp:list
       (common-lisp:cons "NetworkInterfaceId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'client-token))
      (common-lisp:list
       (common-lisp:cons "ClientToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-cachedi-scsivolume-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-cachedi-scsivolume-output (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-cachedi-scsivolume-output-"))
   (volume-arn common-lisp:nil :type
    (common-lisp:or volume-arn common-lisp:null))
   (target-arn common-lisp:nil :type
    (common-lisp:or target-arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-cachedi-scsivolume-output
                    'make-create-cachedi-scsivolume-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-cachedi-scsivolume-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-cachedi-scsivolume-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'volume-arn))
      (common-lisp:list
       (common-lisp:cons "VolumeARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'target-arn))
      (common-lisp:list
       (common-lisp:cons "TargetARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-cachedi-scsivolume-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-nfsfile-share-input (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-nfsfile-share-input-"))
   (client-token (common-lisp:error ":client-token is required") :type
    (common-lisp:or client-token common-lisp:null))
   (nfsfile-share-defaults common-lisp:nil :type
    (common-lisp:or nfsfile-share-defaults common-lisp:null))
   (gateway-arn (common-lisp:error ":gateway-arn is required") :type
    (common-lisp:or gateway-arn common-lisp:null))
   (kmsencrypted common-lisp:nil :type
    (common-lisp:or boolean common-lisp:null))
   (kmskey common-lisp:nil :type (common-lisp:or kmskey common-lisp:null))
   (role (common-lisp:error ":role is required") :type
    (common-lisp:or role common-lisp:null))
   (location-arn (common-lisp:error ":location-arn is required") :type
    (common-lisp:or location-arn common-lisp:null))
   (default-storage-class common-lisp:nil :type
    (common-lisp:or storage-class common-lisp:null))
   (client-list common-lisp:nil :type
    (common-lisp:or file-share-client-list common-lisp:null))
   (squash common-lisp:nil :type (common-lisp:or squash common-lisp:null))
   (read-only common-lisp:nil :type (common-lisp:or boolean common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-nfsfile-share-input
                    'make-create-nfsfile-share-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-nfsfile-share-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-nfsfile-share-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'client-token))
      (common-lisp:list
       (common-lisp:cons "ClientToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'nfsfile-share-defaults))
      (common-lisp:list
       (common-lisp:cons "NFSFileShareDefaults"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'gateway-arn))
      (common-lisp:list
       (common-lisp:cons "GatewayARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'kmsencrypted))
      (common-lisp:list
       (common-lisp:cons "KMSEncrypted"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'kmskey))
      (common-lisp:list
       (common-lisp:cons "KMSKey"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'role))
      (common-lisp:list
       (common-lisp:cons "Role"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'location-arn))
      (common-lisp:list
       (common-lisp:cons "LocationARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'default-storage-class))
      (common-lisp:list
       (common-lisp:cons "DefaultStorageClass"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'client-list))
      (common-lisp:list
       (common-lisp:cons "ClientList"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'squash))
      (common-lisp:list
       (common-lisp:cons "Squash"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'read-only))
      (common-lisp:list
       (common-lisp:cons "ReadOnly"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-nfsfile-share-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-nfsfile-share-output (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-nfsfile-share-output-"))
   (file-share-arn common-lisp:nil :type
    (common-lisp:or file-share-arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-nfsfile-share-output
                    'make-create-nfsfile-share-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-nfsfile-share-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-nfsfile-share-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'file-share-arn))
      (common-lisp:list
       (common-lisp:cons "FileShareARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-nfsfile-share-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-snapshot-from-volume-recovery-point-input
      (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-create-snapshot-from-volume-recovery-point-input-"))
   (volume-arn (common-lisp:error ":volume-arn is required") :type
    (common-lisp:or volume-arn common-lisp:null))
   (snapshot-description
    (common-lisp:error ":snapshot-description is required") :type
    (common-lisp:or snapshot-description common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-snapshot-from-volume-recovery-point-input
                    'make-create-snapshot-from-volume-recovery-point-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-snapshot-from-volume-recovery-point-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-snapshot-from-volume-recovery-point-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'volume-arn))
      (common-lisp:list
       (common-lisp:cons "VolumeARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'snapshot-description))
      (common-lisp:list
       (common-lisp:cons "SnapshotDescription"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-snapshot-from-volume-recovery-point-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-snapshot-from-volume-recovery-point-output
      (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-create-snapshot-from-volume-recovery-point-output-"))
   (snapshot-id common-lisp:nil :type
    (common-lisp:or snapshot-id common-lisp:null))
   (volume-arn common-lisp:nil :type
    (common-lisp:or volume-arn common-lisp:null))
   (volume-recovery-point-time common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-snapshot-from-volume-recovery-point-output
                    'make-create-snapshot-from-volume-recovery-point-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-snapshot-from-volume-recovery-point-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-snapshot-from-volume-recovery-point-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'snapshot-id))
      (common-lisp:list
       (common-lisp:cons "SnapshotId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'volume-arn))
      (common-lisp:list
       (common-lisp:cons "VolumeARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'volume-recovery-point-time))
      (common-lisp:list
       (common-lisp:cons "VolumeRecoveryPointTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-snapshot-from-volume-recovery-point-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-snapshot-input (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-snapshot-input-"))
   (volume-arn (common-lisp:error ":volume-arn is required") :type
    (common-lisp:or volume-arn common-lisp:null))
   (snapshot-description
    (common-lisp:error ":snapshot-description is required") :type
    (common-lisp:or snapshot-description common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-snapshot-input 'make-create-snapshot-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-snapshot-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-snapshot-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'volume-arn))
      (common-lisp:list
       (common-lisp:cons "VolumeARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'snapshot-description))
      (common-lisp:list
       (common-lisp:cons "SnapshotDescription"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-snapshot-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-snapshot-output (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-snapshot-output-"))
   (volume-arn common-lisp:nil :type
    (common-lisp:or volume-arn common-lisp:null))
   (snapshot-id common-lisp:nil :type
    (common-lisp:or snapshot-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-snapshot-output 'make-create-snapshot-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-snapshot-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-snapshot-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'volume-arn))
      (common-lisp:list
       (common-lisp:cons "VolumeARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'snapshot-id))
      (common-lisp:list
       (common-lisp:cons "SnapshotId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-snapshot-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-storedi-scsivolume-input (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-storedi-scsivolume-input-"))
   (gateway-arn (common-lisp:error ":gateway-arn is required") :type
    (common-lisp:or gateway-arn common-lisp:null))
   (disk-id (common-lisp:error ":disk-id is required") :type
    (common-lisp:or disk-id common-lisp:null))
   (snapshot-id common-lisp:nil :type
    (common-lisp:or snapshot-id common-lisp:null))
   (preserve-existing-data
    (common-lisp:error ":preserve-existing-data is required") :type
    (common-lisp:or common-lisp:boolean common-lisp:null))
   (target-name (common-lisp:error ":target-name is required") :type
    (common-lisp:or target-name common-lisp:null))
   (network-interface-id
    (common-lisp:error ":network-interface-id is required") :type
    (common-lisp:or network-interface-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-storedi-scsivolume-input
                    'make-create-storedi-scsivolume-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-storedi-scsivolume-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-storedi-scsivolume-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'gateway-arn))
      (common-lisp:list
       (common-lisp:cons "GatewayARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'disk-id))
      (common-lisp:list
       (common-lisp:cons "DiskId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'snapshot-id))
      (common-lisp:list
       (common-lisp:cons "SnapshotId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'preserve-existing-data))
      (common-lisp:list
       (common-lisp:cons "PreserveExistingData"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'target-name))
      (common-lisp:list
       (common-lisp:cons "TargetName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'network-interface-id))
      (common-lisp:list
       (common-lisp:cons "NetworkInterfaceId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-storedi-scsivolume-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-storedi-scsivolume-output (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-storedi-scsivolume-output-"))
   (volume-arn common-lisp:nil :type
    (common-lisp:or volume-arn common-lisp:null))
   (volume-size-in-bytes common-lisp:nil :type
    (common-lisp:or common-lisp:integer common-lisp:null))
   (target-arn common-lisp:nil :type
    (common-lisp:or target-arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-storedi-scsivolume-output
                    'make-create-storedi-scsivolume-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-storedi-scsivolume-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-storedi-scsivolume-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'volume-arn))
      (common-lisp:list
       (common-lisp:cons "VolumeARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'volume-size-in-bytes))
      (common-lisp:list
       (common-lisp:cons "VolumeSizeInBytes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'target-arn))
      (common-lisp:list
       (common-lisp:cons "TargetARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-storedi-scsivolume-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-tape-with-barcode-input (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-tape-with-barcode-input-"))
   (gateway-arn (common-lisp:error ":gateway-arn is required") :type
    (common-lisp:or gateway-arn common-lisp:null))
   (tape-size-in-bytes (common-lisp:error ":tape-size-in-bytes is required")
    :type (common-lisp:or tape-size common-lisp:null))
   (tape-barcode (common-lisp:error ":tape-barcode is required") :type
    (common-lisp:or tape-barcode common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-tape-with-barcode-input
                    'make-create-tape-with-barcode-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-tape-with-barcode-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-tape-with-barcode-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'gateway-arn))
      (common-lisp:list
       (common-lisp:cons "GatewayARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tape-size-in-bytes))
      (common-lisp:list
       (common-lisp:cons "TapeSizeInBytes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tape-barcode))
      (common-lisp:list
       (common-lisp:cons "TapeBarcode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-tape-with-barcode-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-tape-with-barcode-output (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-tape-with-barcode-output-"))
   (tape-arn common-lisp:nil :type (common-lisp:or tape-arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-tape-with-barcode-output
                    'make-create-tape-with-barcode-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-tape-with-barcode-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-tape-with-barcode-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tape-arn))
      (common-lisp:list
       (common-lisp:cons "TapeARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-tape-with-barcode-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-tapes-input (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-tapes-input-"))
   (gateway-arn (common-lisp:error ":gateway-arn is required") :type
    (common-lisp:or gateway-arn common-lisp:null))
   (tape-size-in-bytes (common-lisp:error ":tape-size-in-bytes is required")
    :type (common-lisp:or tape-size common-lisp:null))
   (client-token (common-lisp:error ":client-token is required") :type
    (common-lisp:or client-token common-lisp:null))
   (num-tapes-to-create (common-lisp:error ":num-tapes-to-create is required")
    :type (common-lisp:or num-tapes-to-create common-lisp:null))
   (tape-barcode-prefix (common-lisp:error ":tape-barcode-prefix is required")
    :type (common-lisp:or tape-barcode-prefix common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-tapes-input 'make-create-tapes-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input create-tapes-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input create-tapes-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'gateway-arn))
      (common-lisp:list
       (common-lisp:cons "GatewayARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tape-size-in-bytes))
      (common-lisp:list
       (common-lisp:cons "TapeSizeInBytes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'client-token))
      (common-lisp:list
       (common-lisp:cons "ClientToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'num-tapes-to-create))
      (common-lisp:list
       (common-lisp:cons "NumTapesToCreate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tape-barcode-prefix))
      (common-lisp:list
       (common-lisp:cons "TapeBarcodePrefix"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input create-tapes-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-tapes-output (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-tapes-output-"))
   (tape-arns common-lisp:nil :type
    (common-lisp:or tape-arns common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-tapes-output 'make-create-tapes-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input create-tapes-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input create-tapes-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tape-arns))
      (common-lisp:list
       (common-lisp:cons "TapeARNs"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input create-tapes-output))
   common-lisp:nil))
(common-lisp:deftype created-date () 'common-lisp:string)
(common-lisp:deftype day-of-week () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:defstruct
     (delete-bandwidth-rate-limit-input (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-bandwidth-rate-limit-input-"))
   (gateway-arn (common-lisp:error ":gateway-arn is required") :type
    (common-lisp:or gateway-arn common-lisp:null))
   (bandwidth-type (common-lisp:error ":bandwidth-type is required") :type
    (common-lisp:or bandwidth-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-bandwidth-rate-limit-input
                    'make-delete-bandwidth-rate-limit-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-bandwidth-rate-limit-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-bandwidth-rate-limit-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'gateway-arn))
      (common-lisp:list
       (common-lisp:cons "GatewayARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'bandwidth-type))
      (common-lisp:list
       (common-lisp:cons "BandwidthType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-bandwidth-rate-limit-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-bandwidth-rate-limit-output (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-bandwidth-rate-limit-output-"))
   (gateway-arn common-lisp:nil :type
    (common-lisp:or gateway-arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-bandwidth-rate-limit-output
                    'make-delete-bandwidth-rate-limit-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-bandwidth-rate-limit-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-bandwidth-rate-limit-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'gateway-arn))
      (common-lisp:list
       (common-lisp:cons "GatewayARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-bandwidth-rate-limit-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-chap-credentials-input (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-chap-credentials-input-"))
   (target-arn (common-lisp:error ":target-arn is required") :type
    (common-lisp:or target-arn common-lisp:null))
   (initiator-name (common-lisp:error ":initiator-name is required") :type
    (common-lisp:or iqn-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-chap-credentials-input
                    'make-delete-chap-credentials-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-chap-credentials-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-chap-credentials-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'target-arn))
      (common-lisp:list
       (common-lisp:cons "TargetARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'initiator-name))
      (common-lisp:list
       (common-lisp:cons "InitiatorName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-chap-credentials-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-chap-credentials-output (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-chap-credentials-output-"))
   (target-arn common-lisp:nil :type
    (common-lisp:or target-arn common-lisp:null))
   (initiator-name common-lisp:nil :type
    (common-lisp:or iqn-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-chap-credentials-output
                    'make-delete-chap-credentials-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-chap-credentials-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-chap-credentials-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'target-arn))
      (common-lisp:list
       (common-lisp:cons "TargetARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'initiator-name))
      (common-lisp:list
       (common-lisp:cons "InitiatorName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-chap-credentials-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-file-share-input (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-file-share-input-"))
   (file-share-arn (common-lisp:error ":file-share-arn is required") :type
    (common-lisp:or file-share-arn common-lisp:null))
   (force-delete common-lisp:nil :type
    (common-lisp:or common-lisp:boolean common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-file-share-input 'make-delete-file-share-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-file-share-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-file-share-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'file-share-arn))
      (common-lisp:list
       (common-lisp:cons "FileShareARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'force-delete))
      (common-lisp:list
       (common-lisp:cons "ForceDelete"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-file-share-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-file-share-output (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-file-share-output-"))
   (file-share-arn common-lisp:nil :type
    (common-lisp:or file-share-arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-file-share-output 'make-delete-file-share-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-file-share-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-file-share-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'file-share-arn))
      (common-lisp:list
       (common-lisp:cons "FileShareARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-file-share-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-gateway-input (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-gateway-input-"))
   (gateway-arn (common-lisp:error ":gateway-arn is required") :type
    (common-lisp:or gateway-arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-gateway-input 'make-delete-gateway-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input delete-gateway-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input delete-gateway-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'gateway-arn))
      (common-lisp:list
       (common-lisp:cons "GatewayARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input delete-gateway-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-gateway-output (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-gateway-output-"))
   (gateway-arn common-lisp:nil :type
    (common-lisp:or gateway-arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-gateway-output 'make-delete-gateway-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-gateway-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-gateway-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'gateway-arn))
      (common-lisp:list
       (common-lisp:cons "GatewayARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-gateway-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-snapshot-schedule-input (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-snapshot-schedule-input-"))
   (volume-arn (common-lisp:error ":volume-arn is required") :type
    (common-lisp:or volume-arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-snapshot-schedule-input
                    'make-delete-snapshot-schedule-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-snapshot-schedule-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-snapshot-schedule-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'volume-arn))
      (common-lisp:list
       (common-lisp:cons "VolumeARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-snapshot-schedule-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-snapshot-schedule-output (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-snapshot-schedule-output-"))
   (volume-arn common-lisp:nil :type
    (common-lisp:or volume-arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-snapshot-schedule-output
                    'make-delete-snapshot-schedule-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-snapshot-schedule-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-snapshot-schedule-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'volume-arn))
      (common-lisp:list
       (common-lisp:cons "VolumeARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-snapshot-schedule-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-tape-archive-input (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-tape-archive-input-"))
   (tape-arn (common-lisp:error ":tape-arn is required") :type
    (common-lisp:or tape-arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-tape-archive-input
                    'make-delete-tape-archive-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-tape-archive-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-tape-archive-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tape-arn))
      (common-lisp:list
       (common-lisp:cons "TapeARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-tape-archive-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-tape-archive-output (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-tape-archive-output-"))
   (tape-arn common-lisp:nil :type (common-lisp:or tape-arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-tape-archive-output
                    'make-delete-tape-archive-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-tape-archive-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-tape-archive-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tape-arn))
      (common-lisp:list
       (common-lisp:cons "TapeARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-tape-archive-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-tape-input (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-tape-input-"))
   (gateway-arn (common-lisp:error ":gateway-arn is required") :type
    (common-lisp:or gateway-arn common-lisp:null))
   (tape-arn (common-lisp:error ":tape-arn is required") :type
    (common-lisp:or tape-arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-tape-input 'make-delete-tape-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input delete-tape-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input delete-tape-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'gateway-arn))
      (common-lisp:list
       (common-lisp:cons "GatewayARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tape-arn))
      (common-lisp:list
       (common-lisp:cons "TapeARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input delete-tape-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-tape-output (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-tape-output-"))
   (tape-arn common-lisp:nil :type (common-lisp:or tape-arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-tape-output 'make-delete-tape-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input delete-tape-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input delete-tape-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tape-arn))
      (common-lisp:list
       (common-lisp:cons "TapeARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input delete-tape-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-volume-input (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-volume-input-"))
   (volume-arn (common-lisp:error ":volume-arn is required") :type
    (common-lisp:or volume-arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-volume-input 'make-delete-volume-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input delete-volume-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input delete-volume-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'volume-arn))
      (common-lisp:list
       (common-lisp:cons "VolumeARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input delete-volume-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-volume-output (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-volume-output-"))
   (volume-arn common-lisp:nil :type
    (common-lisp:or volume-arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-volume-output 'make-delete-volume-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input delete-volume-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input delete-volume-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'volume-arn))
      (common-lisp:list
       (common-lisp:cons "VolumeARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input delete-volume-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-bandwidth-rate-limit-input (:copier common-lisp:nil)
      (:conc-name "struct-shape-describe-bandwidth-rate-limit-input-"))
   (gateway-arn (common-lisp:error ":gateway-arn is required") :type
    (common-lisp:or gateway-arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-bandwidth-rate-limit-input
                    'make-describe-bandwidth-rate-limit-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-bandwidth-rate-limit-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-bandwidth-rate-limit-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'gateway-arn))
      (common-lisp:list
       (common-lisp:cons "GatewayARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-bandwidth-rate-limit-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-bandwidth-rate-limit-output (:copier common-lisp:nil)
      (:conc-name "struct-shape-describe-bandwidth-rate-limit-output-"))
   (gateway-arn common-lisp:nil :type
    (common-lisp:or gateway-arn common-lisp:null))
   (average-upload-rate-limit-in-bits-per-sec common-lisp:nil :type
    (common-lisp:or bandwidth-upload-rate-limit common-lisp:null))
   (average-download-rate-limit-in-bits-per-sec common-lisp:nil :type
    (common-lisp:or bandwidth-download-rate-limit common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-bandwidth-rate-limit-output
                    'make-describe-bandwidth-rate-limit-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-bandwidth-rate-limit-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-bandwidth-rate-limit-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'gateway-arn))
      (common-lisp:list
       (common-lisp:cons "GatewayARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'average-upload-rate-limit-in-bits-per-sec))
      (common-lisp:list
       (common-lisp:cons "AverageUploadRateLimitInBitsPerSec"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'average-download-rate-limit-in-bits-per-sec))
      (common-lisp:list
       (common-lisp:cons "AverageDownloadRateLimitInBitsPerSec"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-bandwidth-rate-limit-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-cache-input (:copier common-lisp:nil)
      (:conc-name "struct-shape-describe-cache-input-"))
   (gateway-arn (common-lisp:error ":gateway-arn is required") :type
    (common-lisp:or gateway-arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-cache-input 'make-describe-cache-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input describe-cache-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input describe-cache-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'gateway-arn))
      (common-lisp:list
       (common-lisp:cons "GatewayARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input describe-cache-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-cache-output (:copier common-lisp:nil)
      (:conc-name "struct-shape-describe-cache-output-"))
   (gateway-arn common-lisp:nil :type
    (common-lisp:or gateway-arn common-lisp:null))
   (disk-ids common-lisp:nil :type (common-lisp:or disk-ids common-lisp:null))
   (cache-allocated-in-bytes common-lisp:nil :type
    (common-lisp:or common-lisp:integer common-lisp:null))
   (cache-used-percentage common-lisp:nil :type
    (common-lisp:or common-lisp:double-float common-lisp:null))
   (cache-dirty-percentage common-lisp:nil :type
    (common-lisp:or common-lisp:double-float common-lisp:null))
   (cache-hit-percentage common-lisp:nil :type
    (common-lisp:or common-lisp:double-float common-lisp:null))
   (cache-miss-percentage common-lisp:nil :type
    (common-lisp:or common-lisp:double-float common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-cache-output 'make-describe-cache-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-cache-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-cache-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'gateway-arn))
      (common-lisp:list
       (common-lisp:cons "GatewayARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'disk-ids))
      (common-lisp:list
       (common-lisp:cons "DiskIds"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'cache-allocated-in-bytes))
      (common-lisp:list
       (common-lisp:cons "CacheAllocatedInBytes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'cache-used-percentage))
      (common-lisp:list
       (common-lisp:cons "CacheUsedPercentage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'cache-dirty-percentage))
      (common-lisp:list
       (common-lisp:cons "CacheDirtyPercentage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'cache-hit-percentage))
      (common-lisp:list
       (common-lisp:cons "CacheHitPercentage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'cache-miss-percentage))
      (common-lisp:list
       (common-lisp:cons "CacheMissPercentage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-cache-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-cachedi-scsivolumes-input (:copier common-lisp:nil)
      (:conc-name "struct-shape-describe-cachedi-scsivolumes-input-"))
   (volume-arns (common-lisp:error ":volume-arns is required") :type
    (common-lisp:or volume-arns common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-cachedi-scsivolumes-input
                    'make-describe-cachedi-scsivolumes-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-cachedi-scsivolumes-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-cachedi-scsivolumes-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'volume-arns))
      (common-lisp:list
       (common-lisp:cons "VolumeARNs"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-cachedi-scsivolumes-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-cachedi-scsivolumes-output (:copier common-lisp:nil)
      (:conc-name "struct-shape-describe-cachedi-scsivolumes-output-"))
   (cachedi-scsivolumes common-lisp:nil :type
    (common-lisp:or cachedi-scsivolumes common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-cachedi-scsivolumes-output
                    'make-describe-cachedi-scsivolumes-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-cachedi-scsivolumes-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-cachedi-scsivolumes-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'cachedi-scsivolumes))
      (common-lisp:list
       (common-lisp:cons "CachediSCSIVolumes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-cachedi-scsivolumes-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-chap-credentials-input (:copier common-lisp:nil)
      (:conc-name "struct-shape-describe-chap-credentials-input-"))
   (target-arn (common-lisp:error ":target-arn is required") :type
    (common-lisp:or target-arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-chap-credentials-input
                    'make-describe-chap-credentials-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-chap-credentials-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-chap-credentials-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'target-arn))
      (common-lisp:list
       (common-lisp:cons "TargetARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-chap-credentials-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-chap-credentials-output (:copier common-lisp:nil)
      (:conc-name "struct-shape-describe-chap-credentials-output-"))
   (chap-credentials common-lisp:nil :type
    (common-lisp:or chap-credentials common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-chap-credentials-output
                    'make-describe-chap-credentials-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-chap-credentials-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-chap-credentials-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'chap-credentials))
      (common-lisp:list
       (common-lisp:cons "ChapCredentials"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-chap-credentials-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-gateway-information-input (:copier common-lisp:nil)
      (:conc-name "struct-shape-describe-gateway-information-input-"))
   (gateway-arn (common-lisp:error ":gateway-arn is required") :type
    (common-lisp:or gateway-arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-gateway-information-input
                    'make-describe-gateway-information-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-gateway-information-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-gateway-information-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'gateway-arn))
      (common-lisp:list
       (common-lisp:cons "GatewayARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-gateway-information-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-gateway-information-output (:copier common-lisp:nil)
      (:conc-name "struct-shape-describe-gateway-information-output-"))
   (gateway-arn common-lisp:nil :type
    (common-lisp:or gateway-arn common-lisp:null))
   (gateway-id common-lisp:nil :type
    (common-lisp:or gateway-id common-lisp:null))
   (gateway-name common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (gateway-timezone common-lisp:nil :type
    (common-lisp:or gateway-timezone common-lisp:null))
   (gateway-state common-lisp:nil :type
    (common-lisp:or gateway-state common-lisp:null))
   (gateway-network-interfaces common-lisp:nil :type
    (common-lisp:or gateway-network-interfaces common-lisp:null))
   (gateway-type common-lisp:nil :type
    (common-lisp:or gateway-type common-lisp:null))
   (next-update-availability-date common-lisp:nil :type
    (common-lisp:or next-update-availability-date common-lisp:null))
   (last-software-update common-lisp:nil :type
    (common-lisp:or last-software-update common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-gateway-information-output
                    'make-describe-gateway-information-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-gateway-information-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-gateway-information-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'gateway-arn))
      (common-lisp:list
       (common-lisp:cons "GatewayARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'gateway-id))
      (common-lisp:list
       (common-lisp:cons "GatewayId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'gateway-name))
      (common-lisp:list
       (common-lisp:cons "GatewayName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'gateway-timezone))
      (common-lisp:list
       (common-lisp:cons "GatewayTimezone"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'gateway-state))
      (common-lisp:list
       (common-lisp:cons "GatewayState"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'gateway-network-interfaces))
      (common-lisp:list
       (common-lisp:cons "GatewayNetworkInterfaces"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'gateway-type))
      (common-lisp:list
       (common-lisp:cons "GatewayType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'next-update-availability-date))
      (common-lisp:list
       (common-lisp:cons "NextUpdateAvailabilityDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'last-software-update))
      (common-lisp:list
       (common-lisp:cons "LastSoftwareUpdate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-gateway-information-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-maintenance-start-time-input (:copier common-lisp:nil)
      (:conc-name "struct-shape-describe-maintenance-start-time-input-"))
   (gateway-arn (common-lisp:error ":gateway-arn is required") :type
    (common-lisp:or gateway-arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-maintenance-start-time-input
                    'make-describe-maintenance-start-time-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-maintenance-start-time-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-maintenance-start-time-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'gateway-arn))
      (common-lisp:list
       (common-lisp:cons "GatewayARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-maintenance-start-time-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-maintenance-start-time-output (:copier common-lisp:nil)
      (:conc-name "struct-shape-describe-maintenance-start-time-output-"))
   (gateway-arn common-lisp:nil :type
    (common-lisp:or gateway-arn common-lisp:null))
   (hour-of-day common-lisp:nil :type
    (common-lisp:or hour-of-day common-lisp:null))
   (minute-of-hour common-lisp:nil :type
    (common-lisp:or minute-of-hour common-lisp:null))
   (day-of-week common-lisp:nil :type
    (common-lisp:or day-of-week common-lisp:null))
   (timezone common-lisp:nil :type
    (common-lisp:or gateway-timezone common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-maintenance-start-time-output
                    'make-describe-maintenance-start-time-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-maintenance-start-time-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-maintenance-start-time-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'gateway-arn))
      (common-lisp:list
       (common-lisp:cons "GatewayARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'hour-of-day))
      (common-lisp:list
       (common-lisp:cons "HourOfDay"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'minute-of-hour))
      (common-lisp:list
       (common-lisp:cons "MinuteOfHour"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'day-of-week))
      (common-lisp:list
       (common-lisp:cons "DayOfWeek"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'timezone))
      (common-lisp:list
       (common-lisp:cons "Timezone"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-maintenance-start-time-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-nfsfile-shares-input (:copier common-lisp:nil)
      (:conc-name "struct-shape-describe-nfsfile-shares-input-"))
   (file-share-arnlist (common-lisp:error ":file-share-arnlist is required")
    :type (common-lisp:or file-share-arnlist common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-nfsfile-shares-input
                    'make-describe-nfsfile-shares-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-nfsfile-shares-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-nfsfile-shares-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'file-share-arnlist))
      (common-lisp:list
       (common-lisp:cons "FileShareARNList"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-nfsfile-shares-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-nfsfile-shares-output (:copier common-lisp:nil)
      (:conc-name "struct-shape-describe-nfsfile-shares-output-"))
   (nfsfile-share-info-list common-lisp:nil :type
    (common-lisp:or nfsfile-share-info-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-nfsfile-shares-output
                    'make-describe-nfsfile-shares-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-nfsfile-shares-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-nfsfile-shares-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'nfsfile-share-info-list))
      (common-lisp:list
       (common-lisp:cons "NFSFileShareInfoList"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-nfsfile-shares-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-snapshot-schedule-input (:copier common-lisp:nil)
      (:conc-name "struct-shape-describe-snapshot-schedule-input-"))
   (volume-arn (common-lisp:error ":volume-arn is required") :type
    (common-lisp:or volume-arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-snapshot-schedule-input
                    'make-describe-snapshot-schedule-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-snapshot-schedule-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-snapshot-schedule-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'volume-arn))
      (common-lisp:list
       (common-lisp:cons "VolumeARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-snapshot-schedule-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-snapshot-schedule-output (:copier common-lisp:nil)
      (:conc-name "struct-shape-describe-snapshot-schedule-output-"))
   (volume-arn common-lisp:nil :type
    (common-lisp:or volume-arn common-lisp:null))
   (start-at common-lisp:nil :type
    (common-lisp:or hour-of-day common-lisp:null))
   (recurrence-in-hours common-lisp:nil :type
    (common-lisp:or recurrence-in-hours common-lisp:null))
   (description common-lisp:nil :type
    (common-lisp:or description common-lisp:null))
   (timezone common-lisp:nil :type
    (common-lisp:or gateway-timezone common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-snapshot-schedule-output
                    'make-describe-snapshot-schedule-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-snapshot-schedule-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-snapshot-schedule-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'volume-arn))
      (common-lisp:list
       (common-lisp:cons "VolumeARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'start-at))
      (common-lisp:list
       (common-lisp:cons "StartAt"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'recurrence-in-hours))
      (common-lisp:list
       (common-lisp:cons "RecurrenceInHours"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'timezone))
      (common-lisp:list
       (common-lisp:cons "Timezone"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-snapshot-schedule-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-storedi-scsivolumes-input (:copier common-lisp:nil)
      (:conc-name "struct-shape-describe-storedi-scsivolumes-input-"))
   (volume-arns (common-lisp:error ":volume-arns is required") :type
    (common-lisp:or volume-arns common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-storedi-scsivolumes-input
                    'make-describe-storedi-scsivolumes-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-storedi-scsivolumes-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-storedi-scsivolumes-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'volume-arns))
      (common-lisp:list
       (common-lisp:cons "VolumeARNs"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-storedi-scsivolumes-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-storedi-scsivolumes-output (:copier common-lisp:nil)
      (:conc-name "struct-shape-describe-storedi-scsivolumes-output-"))
   (storedi-scsivolumes common-lisp:nil :type
    (common-lisp:or storedi-scsivolumes common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-storedi-scsivolumes-output
                    'make-describe-storedi-scsivolumes-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-storedi-scsivolumes-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-storedi-scsivolumes-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'storedi-scsivolumes))
      (common-lisp:list
       (common-lisp:cons "StorediSCSIVolumes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-storedi-scsivolumes-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-tape-archives-input (:copier common-lisp:nil)
      (:conc-name "struct-shape-describe-tape-archives-input-"))
   (tape-arns common-lisp:nil :type
    (common-lisp:or tape-arns common-lisp:null))
   (marker common-lisp:nil :type (common-lisp:or marker common-lisp:null))
   (limit common-lisp:nil :type
    (common-lisp:or positive-int-object common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-tape-archives-input
                    'make-describe-tape-archives-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-tape-archives-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-tape-archives-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tape-arns))
      (common-lisp:list
       (common-lisp:cons "TapeARNs"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'marker))
      (common-lisp:list
       (common-lisp:cons "Marker"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'limit))
      (common-lisp:list
       (common-lisp:cons "Limit"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-tape-archives-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-tape-archives-output (:copier common-lisp:nil)
      (:conc-name "struct-shape-describe-tape-archives-output-"))
   (tape-archives common-lisp:nil :type
    (common-lisp:or tape-archives common-lisp:null))
   (marker common-lisp:nil :type (common-lisp:or marker common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-tape-archives-output
                    'make-describe-tape-archives-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-tape-archives-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-tape-archives-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tape-archives))
      (common-lisp:list
       (common-lisp:cons "TapeArchives"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'marker))
      (common-lisp:list
       (common-lisp:cons "Marker"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-tape-archives-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-tape-recovery-points-input (:copier common-lisp:nil)
      (:conc-name "struct-shape-describe-tape-recovery-points-input-"))
   (gateway-arn (common-lisp:error ":gateway-arn is required") :type
    (common-lisp:or gateway-arn common-lisp:null))
   (marker common-lisp:nil :type (common-lisp:or marker common-lisp:null))
   (limit common-lisp:nil :type
    (common-lisp:or positive-int-object common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-tape-recovery-points-input
                    'make-describe-tape-recovery-points-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-tape-recovery-points-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-tape-recovery-points-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'gateway-arn))
      (common-lisp:list
       (common-lisp:cons "GatewayARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'marker))
      (common-lisp:list
       (common-lisp:cons "Marker"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'limit))
      (common-lisp:list
       (common-lisp:cons "Limit"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-tape-recovery-points-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-tape-recovery-points-output (:copier common-lisp:nil)
      (:conc-name "struct-shape-describe-tape-recovery-points-output-"))
   (gateway-arn common-lisp:nil :type
    (common-lisp:or gateway-arn common-lisp:null))
   (tape-recovery-point-infos common-lisp:nil :type
    (common-lisp:or tape-recovery-point-infos common-lisp:null))
   (marker common-lisp:nil :type (common-lisp:or marker common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-tape-recovery-points-output
                    'make-describe-tape-recovery-points-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-tape-recovery-points-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-tape-recovery-points-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'gateway-arn))
      (common-lisp:list
       (common-lisp:cons "GatewayARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'tape-recovery-point-infos))
      (common-lisp:list
       (common-lisp:cons "TapeRecoveryPointInfos"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'marker))
      (common-lisp:list
       (common-lisp:cons "Marker"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-tape-recovery-points-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-tapes-input (:copier common-lisp:nil)
      (:conc-name "struct-shape-describe-tapes-input-"))
   (gateway-arn (common-lisp:error ":gateway-arn is required") :type
    (common-lisp:or gateway-arn common-lisp:null))
   (tape-arns common-lisp:nil :type
    (common-lisp:or tape-arns common-lisp:null))
   (marker common-lisp:nil :type (common-lisp:or marker common-lisp:null))
   (limit common-lisp:nil :type
    (common-lisp:or positive-int-object common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-tapes-input 'make-describe-tapes-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input describe-tapes-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input describe-tapes-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'gateway-arn))
      (common-lisp:list
       (common-lisp:cons "GatewayARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tape-arns))
      (common-lisp:list
       (common-lisp:cons "TapeARNs"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'marker))
      (common-lisp:list
       (common-lisp:cons "Marker"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'limit))
      (common-lisp:list
       (common-lisp:cons "Limit"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input describe-tapes-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-tapes-output (:copier common-lisp:nil)
      (:conc-name "struct-shape-describe-tapes-output-"))
   (tapes common-lisp:nil :type (common-lisp:or tapes common-lisp:null))
   (marker common-lisp:nil :type (common-lisp:or marker common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-tapes-output 'make-describe-tapes-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-tapes-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-tapes-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tapes))
      (common-lisp:list
       (common-lisp:cons "Tapes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'marker))
      (common-lisp:list
       (common-lisp:cons "Marker"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-tapes-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-upload-buffer-input (:copier common-lisp:nil)
      (:conc-name "struct-shape-describe-upload-buffer-input-"))
   (gateway-arn (common-lisp:error ":gateway-arn is required") :type
    (common-lisp:or gateway-arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-upload-buffer-input
                    'make-describe-upload-buffer-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-upload-buffer-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-upload-buffer-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'gateway-arn))
      (common-lisp:list
       (common-lisp:cons "GatewayARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-upload-buffer-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-upload-buffer-output (:copier common-lisp:nil)
      (:conc-name "struct-shape-describe-upload-buffer-output-"))
   (gateway-arn common-lisp:nil :type
    (common-lisp:or gateway-arn common-lisp:null))
   (disk-ids common-lisp:nil :type (common-lisp:or disk-ids common-lisp:null))
   (upload-buffer-used-in-bytes common-lisp:nil :type
    (common-lisp:or common-lisp:integer common-lisp:null))
   (upload-buffer-allocated-in-bytes common-lisp:nil :type
    (common-lisp:or common-lisp:integer common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-upload-buffer-output
                    'make-describe-upload-buffer-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-upload-buffer-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-upload-buffer-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'gateway-arn))
      (common-lisp:list
       (common-lisp:cons "GatewayARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'disk-ids))
      (common-lisp:list
       (common-lisp:cons "DiskIds"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'upload-buffer-used-in-bytes))
      (common-lisp:list
       (common-lisp:cons "UploadBufferUsedInBytes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'upload-buffer-allocated-in-bytes))
      (common-lisp:list
       (common-lisp:cons "UploadBufferAllocatedInBytes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-upload-buffer-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-vtldevices-input (:copier common-lisp:nil)
      (:conc-name "struct-shape-describe-vtldevices-input-"))
   (gateway-arn (common-lisp:error ":gateway-arn is required") :type
    (common-lisp:or gateway-arn common-lisp:null))
   (vtldevice-arns common-lisp:nil :type
    (common-lisp:or vtldevice-arns common-lisp:null))
   (marker common-lisp:nil :type (common-lisp:or marker common-lisp:null))
   (limit common-lisp:nil :type
    (common-lisp:or positive-int-object common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-vtldevices-input
                    'make-describe-vtldevices-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-vtldevices-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-vtldevices-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'gateway-arn))
      (common-lisp:list
       (common-lisp:cons "GatewayARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'vtldevice-arns))
      (common-lisp:list
       (common-lisp:cons "VTLDeviceARNs"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'marker))
      (common-lisp:list
       (common-lisp:cons "Marker"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'limit))
      (common-lisp:list
       (common-lisp:cons "Limit"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-vtldevices-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-vtldevices-output (:copier common-lisp:nil)
      (:conc-name "struct-shape-describe-vtldevices-output-"))
   (gateway-arn common-lisp:nil :type
    (common-lisp:or gateway-arn common-lisp:null))
   (vtldevices common-lisp:nil :type
    (common-lisp:or vtldevices common-lisp:null))
   (marker common-lisp:nil :type (common-lisp:or marker common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-vtldevices-output
                    'make-describe-vtldevices-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-vtldevices-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-vtldevices-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'gateway-arn))
      (common-lisp:list
       (common-lisp:cons "GatewayARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'vtldevices))
      (common-lisp:list
       (common-lisp:cons "VTLDevices"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'marker))
      (common-lisp:list
       (common-lisp:cons "Marker"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-vtldevices-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-working-storage-input (:copier common-lisp:nil)
      (:conc-name "struct-shape-describe-working-storage-input-"))
   (gateway-arn (common-lisp:error ":gateway-arn is required") :type
    (common-lisp:or gateway-arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-working-storage-input
                    'make-describe-working-storage-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-working-storage-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-working-storage-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'gateway-arn))
      (common-lisp:list
       (common-lisp:cons "GatewayARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-working-storage-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-working-storage-output (:copier common-lisp:nil)
      (:conc-name "struct-shape-describe-working-storage-output-"))
   (gateway-arn common-lisp:nil :type
    (common-lisp:or gateway-arn common-lisp:null))
   (disk-ids common-lisp:nil :type (common-lisp:or disk-ids common-lisp:null))
   (working-storage-used-in-bytes common-lisp:nil :type
    (common-lisp:or common-lisp:integer common-lisp:null))
   (working-storage-allocated-in-bytes common-lisp:nil :type
    (common-lisp:or common-lisp:integer common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-working-storage-output
                    'make-describe-working-storage-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-working-storage-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-working-storage-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'gateway-arn))
      (common-lisp:list
       (common-lisp:cons "GatewayARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'disk-ids))
      (common-lisp:list
       (common-lisp:cons "DiskIds"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'working-storage-used-in-bytes))
      (common-lisp:list
       (common-lisp:cons "WorkingStorageUsedInBytes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'working-storage-allocated-in-bytes))
      (common-lisp:list
       (common-lisp:cons "WorkingStorageAllocatedInBytes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-working-storage-output))
   common-lisp:nil))
(common-lisp:deftype description () 'common-lisp:string)
(common-lisp:deftype device-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (devicei-scsiattributes (:copier common-lisp:nil)
      (:conc-name "struct-shape-devicei-scsiattributes-"))
   (target-arn common-lisp:nil :type
    (common-lisp:or target-arn common-lisp:null))
   (network-interface-id common-lisp:nil :type
    (common-lisp:or network-interface-id common-lisp:null))
   (network-interface-port common-lisp:nil :type
    (common-lisp:or common-lisp:integer common-lisp:null))
   (chap-enabled common-lisp:nil :type
    (common-lisp:or common-lisp:boolean common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'devicei-scsiattributes 'make-devicei-scsiattributes))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          devicei-scsiattributes))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          devicei-scsiattributes))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'target-arn))
      (common-lisp:list
       (common-lisp:cons "TargetARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'network-interface-id))
      (common-lisp:list
       (common-lisp:cons "NetworkInterfaceId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'network-interface-port))
      (common-lisp:list
       (common-lisp:cons "NetworkInterfacePort"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'chap-enabled))
      (common-lisp:list
       (common-lisp:cons "ChapEnabled"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          devicei-scsiattributes))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (disable-gateway-input (:copier common-lisp:nil)
      (:conc-name "struct-shape-disable-gateway-input-"))
   (gateway-arn (common-lisp:error ":gateway-arn is required") :type
    (common-lisp:or gateway-arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'disable-gateway-input 'make-disable-gateway-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          disable-gateway-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          disable-gateway-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'gateway-arn))
      (common-lisp:list
       (common-lisp:cons "GatewayARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          disable-gateway-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (disable-gateway-output (:copier common-lisp:nil)
      (:conc-name "struct-shape-disable-gateway-output-"))
   (gateway-arn common-lisp:nil :type
    (common-lisp:or gateway-arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'disable-gateway-output 'make-disable-gateway-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          disable-gateway-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          disable-gateway-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'gateway-arn))
      (common-lisp:list
       (common-lisp:cons "GatewayARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          disable-gateway-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (disk (:copier common-lisp:nil) (:conc-name "struct-shape-disk-"))
   (disk-id common-lisp:nil :type (common-lisp:or disk-id common-lisp:null))
   (disk-path common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (disk-node common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (disk-status common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (disk-size-in-bytes common-lisp:nil :type
    (common-lisp:or common-lisp:integer common-lisp:null))
   (disk-allocation-type common-lisp:nil :type
    (common-lisp:or disk-allocation-type common-lisp:null))
   (disk-allocation-resource common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'disk 'make-disk))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input disk))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input disk))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'disk-id))
      (common-lisp:list
       (common-lisp:cons "DiskId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'disk-path))
      (common-lisp:list
       (common-lisp:cons "DiskPath"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'disk-node))
      (common-lisp:list
       (common-lisp:cons "DiskNode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'disk-status))
      (common-lisp:list
       (common-lisp:cons "DiskStatus"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'disk-size-in-bytes))
      (common-lisp:list
       (common-lisp:cons "DiskSizeInBytes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'disk-allocation-type))
      (common-lisp:list
       (common-lisp:cons "DiskAllocationType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'disk-allocation-resource))
      (common-lisp:list
       (common-lisp:cons "DiskAllocationResource"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input disk))
   common-lisp:nil))
(common-lisp:deftype disk-allocation-type () 'common-lisp:string)
(common-lisp:deftype disk-id () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype disk-ids () '(trivial-types:proper-list disk-id))
 (common-lisp:defun |make-disk-ids|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list disk-id))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype disks () '(trivial-types:proper-list disk))
 (common-lisp:defun |make-disks|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list disk))
   aws-sdk/generator/shape::members))
(common-lisp:deftype double-object () 'common-lisp:double-float)
(common-lisp:deftype error-code () 'common-lisp:string)
(common-lisp:deftype file-share-arn () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype file-share-arnlist ()
   '(trivial-types:proper-list file-share-arn))
 (common-lisp:defun |make-file-share-arnlist|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list file-share-arn))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype file-share-client-list ()
   '(trivial-types:proper-list ipv4address-cidr))
 (common-lisp:defun |make-file-share-client-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list ipv4address-cidr))
   aws-sdk/generator/shape::members))
(common-lisp:deftype file-share-id () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (file-share-info (:copier common-lisp:nil)
      (:conc-name "struct-shape-file-share-info-"))
   (file-share-arn common-lisp:nil :type
    (common-lisp:or file-share-arn common-lisp:null))
   (file-share-id common-lisp:nil :type
    (common-lisp:or file-share-id common-lisp:null))
   (file-share-status common-lisp:nil :type
    (common-lisp:or file-share-status common-lisp:null))
   (gateway-arn common-lisp:nil :type
    (common-lisp:or gateway-arn common-lisp:null)))
 (common-lisp:export (common-lisp:list 'file-share-info 'make-file-share-info))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input file-share-info))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input file-share-info))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'file-share-arn))
      (common-lisp:list
       (common-lisp:cons "FileShareARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'file-share-id))
      (common-lisp:list
       (common-lisp:cons "FileShareId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'file-share-status))
      (common-lisp:list
       (common-lisp:cons "FileShareStatus"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'gateway-arn))
      (common-lisp:list
       (common-lisp:cons "GatewayARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input file-share-info))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype file-share-info-list ()
   '(trivial-types:proper-list file-share-info))
 (common-lisp:defun |make-file-share-info-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list file-share-info))
   aws-sdk/generator/shape::members))
(common-lisp:deftype file-share-status () 'common-lisp:string)
(common-lisp:deftype gateway-arn () 'common-lisp:string)
(common-lisp:deftype gateway-id () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (gateway-info (:copier common-lisp:nil)
      (:conc-name "struct-shape-gateway-info-"))
   (gateway-id common-lisp:nil :type
    (common-lisp:or gateway-id common-lisp:null))
   (gateway-arn common-lisp:nil :type
    (common-lisp:or gateway-arn common-lisp:null))
   (gateway-type common-lisp:nil :type
    (common-lisp:or gateway-type common-lisp:null))
   (gateway-operational-state common-lisp:nil :type
    (common-lisp:or gateway-operational-state common-lisp:null))
   (gateway-name common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'gateway-info 'make-gateway-info))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input gateway-info))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input gateway-info))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'gateway-id))
      (common-lisp:list
       (common-lisp:cons "GatewayId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'gateway-arn))
      (common-lisp:list
       (common-lisp:cons "GatewayARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'gateway-type))
      (common-lisp:list
       (common-lisp:cons "GatewayType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'gateway-operational-state))
      (common-lisp:list
       (common-lisp:cons "GatewayOperationalState"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'gateway-name))
      (common-lisp:list
       (common-lisp:cons "GatewayName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input gateway-info))
   common-lisp:nil))
(common-lisp:deftype gateway-name () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype gateway-network-interfaces ()
   '(trivial-types:proper-list network-interface))
 (common-lisp:defun |make-gateway-network-interfaces|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list network-interface))
   aws-sdk/generator/shape::members))
(common-lisp:deftype gateway-operational-state () 'common-lisp:string)
(common-lisp:deftype gateway-state () 'common-lisp:string)
(common-lisp:deftype gateway-timezone () 'common-lisp:string)
(common-lisp:deftype gateway-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype gateways () '(trivial-types:proper-list gateway-info))
 (common-lisp:defun |make-gateways|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list gateway-info))
   aws-sdk/generator/shape::members))
(common-lisp:deftype hour-of-day () 'common-lisp:integer)
(common-lisp:deftype ipv4address-cidr () 'common-lisp:string)
(common-lisp:deftype initiator () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype initiators () '(trivial-types:proper-list initiator))
 (common-lisp:defun |make-initiators|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list initiator))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:define-condition internal-server-error
     (storagegateway-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       internal-server-error-message)
      (error :initarg :error :initform common-lisp:nil :reader
       internal-server-error-error)))
 (common-lisp:export
  (common-lisp:list 'internal-server-error 'internal-server-error-message
                    'internal-server-error-error)))
(common-lisp:progn
 (common-lisp:define-condition invalid-gateway-request-exception
     (storagegateway-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       invalid-gateway-request-exception-message)
      (error :initarg :error :initform common-lisp:nil :reader
       invalid-gateway-request-exception-error)))
 (common-lisp:export
  (common-lisp:list 'invalid-gateway-request-exception
                    'invalid-gateway-request-exception-message
                    'invalid-gateway-request-exception-error)))
(common-lisp:deftype iqn-name () 'common-lisp:string)
(common-lisp:deftype kmskey () 'common-lisp:string)
(common-lisp:deftype last-software-update () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (list-file-shares-input (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-file-shares-input-"))
   (gateway-arn common-lisp:nil :type
    (common-lisp:or gateway-arn common-lisp:null))
   (limit common-lisp:nil :type
    (common-lisp:or positive-int-object common-lisp:null))
   (marker common-lisp:nil :type (common-lisp:or marker common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-file-shares-input 'make-list-file-shares-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-file-shares-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-file-shares-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'gateway-arn))
      (common-lisp:list
       (common-lisp:cons "GatewayARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'limit))
      (common-lisp:list
       (common-lisp:cons "Limit"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'marker))
      (common-lisp:list
       (common-lisp:cons "Marker"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-file-shares-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-file-shares-output (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-file-shares-output-"))
   (marker common-lisp:nil :type (common-lisp:or marker common-lisp:null))
   (next-marker common-lisp:nil :type (common-lisp:or marker common-lisp:null))
   (file-share-info-list common-lisp:nil :type
    (common-lisp:or file-share-info-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-file-shares-output 'make-list-file-shares-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-file-shares-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-file-shares-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'marker))
      (common-lisp:list
       (common-lisp:cons "Marker"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-marker))
      (common-lisp:list
       (common-lisp:cons "NextMarker"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'file-share-info-list))
      (common-lisp:list
       (common-lisp:cons "FileShareInfoList"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-file-shares-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-gateways-input (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-gateways-input-"))
   (marker common-lisp:nil :type (common-lisp:or marker common-lisp:null))
   (limit common-lisp:nil :type
    (common-lisp:or positive-int-object common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-gateways-input 'make-list-gateways-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input list-gateways-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input list-gateways-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'marker))
      (common-lisp:list
       (common-lisp:cons "Marker"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'limit))
      (common-lisp:list
       (common-lisp:cons "Limit"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input list-gateways-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-gateways-output (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-gateways-output-"))
   (gateways common-lisp:nil :type (common-lisp:or gateways common-lisp:null))
   (marker common-lisp:nil :type (common-lisp:or marker common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-gateways-output 'make-list-gateways-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input list-gateways-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input list-gateways-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'gateways))
      (common-lisp:list
       (common-lisp:cons "Gateways"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'marker))
      (common-lisp:list
       (common-lisp:cons "Marker"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input list-gateways-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-local-disks-input (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-local-disks-input-"))
   (gateway-arn (common-lisp:error ":gateway-arn is required") :type
    (common-lisp:or gateway-arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-local-disks-input 'make-list-local-disks-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-local-disks-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-local-disks-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'gateway-arn))
      (common-lisp:list
       (common-lisp:cons "GatewayARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-local-disks-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-local-disks-output (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-local-disks-output-"))
   (gateway-arn common-lisp:nil :type
    (common-lisp:or gateway-arn common-lisp:null))
   (disks common-lisp:nil :type (common-lisp:or disks common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-local-disks-output 'make-list-local-disks-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-local-disks-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-local-disks-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'gateway-arn))
      (common-lisp:list
       (common-lisp:cons "GatewayARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'disks))
      (common-lisp:list
       (common-lisp:cons "Disks"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-local-disks-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-tags-for-resource-input (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-tags-for-resource-input-"))
   (resource-arn (common-lisp:error ":resource-arn is required") :type
    (common-lisp:or resource-arn common-lisp:null))
   (marker common-lisp:nil :type (common-lisp:or marker common-lisp:null))
   (limit common-lisp:nil :type
    (common-lisp:or positive-int-object common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-tags-for-resource-input
                    'make-list-tags-for-resource-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-arn))
      (common-lisp:list
       (common-lisp:cons "ResourceARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'marker))
      (common-lisp:list
       (common-lisp:cons "Marker"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'limit))
      (common-lisp:list
       (common-lisp:cons "Limit"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-tags-for-resource-output (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-tags-for-resource-output-"))
   (resource-arn common-lisp:nil :type
    (common-lisp:or resource-arn common-lisp:null))
   (marker common-lisp:nil :type (common-lisp:or marker common-lisp:null))
   (tags common-lisp:nil :type (common-lisp:or tags common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-tags-for-resource-output
                    'make-list-tags-for-resource-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-arn))
      (common-lisp:list
       (common-lisp:cons "ResourceARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'marker))
      (common-lisp:list
       (common-lisp:cons "Marker"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-tapes-input (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-tapes-input-"))
   (tape-arns common-lisp:nil :type
    (common-lisp:or tape-arns common-lisp:null))
   (marker common-lisp:nil :type (common-lisp:or marker common-lisp:null))
   (limit common-lisp:nil :type
    (common-lisp:or positive-int-object common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-tapes-input 'make-list-tapes-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input list-tapes-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input list-tapes-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tape-arns))
      (common-lisp:list
       (common-lisp:cons "TapeARNs"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'marker))
      (common-lisp:list
       (common-lisp:cons "Marker"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'limit))
      (common-lisp:list
       (common-lisp:cons "Limit"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input list-tapes-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-tapes-output (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-tapes-output-"))
   (tape-infos common-lisp:nil :type
    (common-lisp:or tape-infos common-lisp:null))
   (marker common-lisp:nil :type (common-lisp:or marker common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-tapes-output 'make-list-tapes-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input list-tapes-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input list-tapes-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tape-infos))
      (common-lisp:list
       (common-lisp:cons "TapeInfos"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'marker))
      (common-lisp:list
       (common-lisp:cons "Marker"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input list-tapes-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-volume-initiators-input (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-volume-initiators-input-"))
   (volume-arn (common-lisp:error ":volume-arn is required") :type
    (common-lisp:or volume-arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-volume-initiators-input
                    'make-list-volume-initiators-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-volume-initiators-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-volume-initiators-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'volume-arn))
      (common-lisp:list
       (common-lisp:cons "VolumeARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-volume-initiators-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-volume-initiators-output (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-volume-initiators-output-"))
   (initiators common-lisp:nil :type
    (common-lisp:or initiators common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-volume-initiators-output
                    'make-list-volume-initiators-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-volume-initiators-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-volume-initiators-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'initiators))
      (common-lisp:list
       (common-lisp:cons "Initiators"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-volume-initiators-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-volume-recovery-points-input (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-volume-recovery-points-input-"))
   (gateway-arn (common-lisp:error ":gateway-arn is required") :type
    (common-lisp:or gateway-arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-volume-recovery-points-input
                    'make-list-volume-recovery-points-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-volume-recovery-points-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-volume-recovery-points-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'gateway-arn))
      (common-lisp:list
       (common-lisp:cons "GatewayARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-volume-recovery-points-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-volume-recovery-points-output (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-volume-recovery-points-output-"))
   (gateway-arn common-lisp:nil :type
    (common-lisp:or gateway-arn common-lisp:null))
   (volume-recovery-point-infos common-lisp:nil :type
    (common-lisp:or volume-recovery-point-infos common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-volume-recovery-points-output
                    'make-list-volume-recovery-points-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-volume-recovery-points-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-volume-recovery-points-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'gateway-arn))
      (common-lisp:list
       (common-lisp:cons "GatewayARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'volume-recovery-point-infos))
      (common-lisp:list
       (common-lisp:cons "VolumeRecoveryPointInfos"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-volume-recovery-points-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-volumes-input (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-volumes-input-"))
   (gateway-arn common-lisp:nil :type
    (common-lisp:or gateway-arn common-lisp:null))
   (marker common-lisp:nil :type (common-lisp:or marker common-lisp:null))
   (limit common-lisp:nil :type
    (common-lisp:or positive-int-object common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-volumes-input 'make-list-volumes-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input list-volumes-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input list-volumes-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'gateway-arn))
      (common-lisp:list
       (common-lisp:cons "GatewayARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'marker))
      (common-lisp:list
       (common-lisp:cons "Marker"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'limit))
      (common-lisp:list
       (common-lisp:cons "Limit"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input list-volumes-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-volumes-output (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-volumes-output-"))
   (gateway-arn common-lisp:nil :type
    (common-lisp:or gateway-arn common-lisp:null))
   (marker common-lisp:nil :type (common-lisp:or marker common-lisp:null))
   (volume-infos common-lisp:nil :type
    (common-lisp:or volume-infos common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-volumes-output 'make-list-volumes-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input list-volumes-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input list-volumes-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'gateway-arn))
      (common-lisp:list
       (common-lisp:cons "GatewayARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'marker))
      (common-lisp:list
       (common-lisp:cons "Marker"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'volume-infos))
      (common-lisp:list
       (common-lisp:cons "VolumeInfos"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input list-volumes-output))
   common-lisp:nil))
(common-lisp:deftype local-console-password () 'common-lisp:string)
(common-lisp:deftype location-arn () 'common-lisp:string)
(common-lisp:deftype marker () 'common-lisp:string)
(common-lisp:deftype medium-changer-type () 'common-lisp:string)
(common-lisp:deftype minute-of-hour () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:defstruct
     (nfsfile-share-defaults (:copier common-lisp:nil)
      (:conc-name "struct-shape-nfsfile-share-defaults-"))
   (file-mode common-lisp:nil :type
    (common-lisp:or permission-mode common-lisp:null))
   (directory-mode common-lisp:nil :type
    (common-lisp:or permission-mode common-lisp:null))
   (group-id common-lisp:nil :type
    (common-lisp:or permission-id common-lisp:null))
   (owner-id common-lisp:nil :type
    (common-lisp:or permission-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'nfsfile-share-defaults 'make-nfsfile-share-defaults))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          nfsfile-share-defaults))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          nfsfile-share-defaults))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'file-mode))
      (common-lisp:list
       (common-lisp:cons "FileMode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'directory-mode))
      (common-lisp:list
       (common-lisp:cons "DirectoryMode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'group-id))
      (common-lisp:list
       (common-lisp:cons "GroupId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'owner-id))
      (common-lisp:list
       (common-lisp:cons "OwnerId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          nfsfile-share-defaults))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (nfsfile-share-info (:copier common-lisp:nil)
      (:conc-name "struct-shape-nfsfile-share-info-"))
   (nfsfile-share-defaults common-lisp:nil :type
    (common-lisp:or nfsfile-share-defaults common-lisp:null))
   (file-share-arn common-lisp:nil :type
    (common-lisp:or file-share-arn common-lisp:null))
   (file-share-id common-lisp:nil :type
    (common-lisp:or file-share-id common-lisp:null))
   (file-share-status common-lisp:nil :type
    (common-lisp:or file-share-status common-lisp:null))
   (gateway-arn common-lisp:nil :type
    (common-lisp:or gateway-arn common-lisp:null))
   (kmsencrypted common-lisp:nil :type
    (common-lisp:or common-lisp:boolean common-lisp:null))
   (kmskey common-lisp:nil :type (common-lisp:or kmskey common-lisp:null))
   (path common-lisp:nil :type (common-lisp:or path common-lisp:null))
   (role common-lisp:nil :type (common-lisp:or role common-lisp:null))
   (location-arn common-lisp:nil :type
    (common-lisp:or location-arn common-lisp:null))
   (default-storage-class common-lisp:nil :type
    (common-lisp:or storage-class common-lisp:null))
   (client-list common-lisp:nil :type
    (common-lisp:or file-share-client-list common-lisp:null))
   (squash common-lisp:nil :type (common-lisp:or squash common-lisp:null))
   (read-only common-lisp:nil :type (common-lisp:or boolean common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'nfsfile-share-info 'make-nfsfile-share-info))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input nfsfile-share-info))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input nfsfile-share-info))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'nfsfile-share-defaults))
      (common-lisp:list
       (common-lisp:cons "NFSFileShareDefaults"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'file-share-arn))
      (common-lisp:list
       (common-lisp:cons "FileShareARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'file-share-id))
      (common-lisp:list
       (common-lisp:cons "FileShareId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'file-share-status))
      (common-lisp:list
       (common-lisp:cons "FileShareStatus"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'gateway-arn))
      (common-lisp:list
       (common-lisp:cons "GatewayARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'kmsencrypted))
      (common-lisp:list
       (common-lisp:cons "KMSEncrypted"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'kmskey))
      (common-lisp:list
       (common-lisp:cons "KMSKey"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'path))
      (common-lisp:list
       (common-lisp:cons "Path"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'role))
      (common-lisp:list
       (common-lisp:cons "Role"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'location-arn))
      (common-lisp:list
       (common-lisp:cons "LocationARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'default-storage-class))
      (common-lisp:list
       (common-lisp:cons "DefaultStorageClass"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'client-list))
      (common-lisp:list
       (common-lisp:cons "ClientList"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'squash))
      (common-lisp:list
       (common-lisp:cons "Squash"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'read-only))
      (common-lisp:list
       (common-lisp:cons "ReadOnly"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input nfsfile-share-info))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype nfsfile-share-info-list ()
   '(trivial-types:proper-list nfsfile-share-info))
 (common-lisp:defun |make-nfsfile-share-info-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list nfsfile-share-info))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (network-interface (:copier common-lisp:nil)
      (:conc-name "struct-shape-network-interface-"))
   (ipv4address common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (mac-address common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (ipv6address common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'network-interface 'make-network-interface))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input network-interface))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input network-interface))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'ipv4address))
      (common-lisp:list
       (common-lisp:cons "Ipv4Address"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'mac-address))
      (common-lisp:list
       (common-lisp:cons "MacAddress"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'ipv6address))
      (common-lisp:list
       (common-lisp:cons "Ipv6Address"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input network-interface))
   common-lisp:nil))
(common-lisp:deftype network-interface-id () 'common-lisp:string)
(common-lisp:deftype next-update-availability-date () 'common-lisp:string)
(common-lisp:deftype num-tapes-to-create () 'common-lisp:integer)
(common-lisp:deftype path () 'common-lisp:string)
(common-lisp:deftype permission-id () 'common-lisp:integer)
(common-lisp:deftype permission-mode () 'common-lisp:string)
(common-lisp:deftype positive-int-object () 'common-lisp:integer)
(common-lisp:deftype recurrence-in-hours () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:defstruct
     (refresh-cache-input (:copier common-lisp:nil)
      (:conc-name "struct-shape-refresh-cache-input-"))
   (file-share-arn (common-lisp:error ":file-share-arn is required") :type
    (common-lisp:or file-share-arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'refresh-cache-input 'make-refresh-cache-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input refresh-cache-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input refresh-cache-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'file-share-arn))
      (common-lisp:list
       (common-lisp:cons "FileShareARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input refresh-cache-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (refresh-cache-output (:copier common-lisp:nil)
      (:conc-name "struct-shape-refresh-cache-output-"))
   (file-share-arn common-lisp:nil :type
    (common-lisp:or file-share-arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'refresh-cache-output 'make-refresh-cache-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input refresh-cache-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input refresh-cache-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'file-share-arn))
      (common-lisp:list
       (common-lisp:cons "FileShareARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input refresh-cache-output))
   common-lisp:nil))
(common-lisp:deftype region-id () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (remove-tags-from-resource-input (:copier common-lisp:nil)
      (:conc-name "struct-shape-remove-tags-from-resource-input-"))
   (resource-arn (common-lisp:error ":resource-arn is required") :type
    (common-lisp:or resource-arn common-lisp:null))
   (tag-keys (common-lisp:error ":tag-keys is required") :type
    (common-lisp:or tag-keys common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'remove-tags-from-resource-input
                    'make-remove-tags-from-resource-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          remove-tags-from-resource-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          remove-tags-from-resource-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-arn))
      (common-lisp:list
       (common-lisp:cons "ResourceARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tag-keys))
      (common-lisp:list
       (common-lisp:cons "TagKeys"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          remove-tags-from-resource-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (remove-tags-from-resource-output (:copier common-lisp:nil)
      (:conc-name "struct-shape-remove-tags-from-resource-output-"))
   (resource-arn common-lisp:nil :type
    (common-lisp:or resource-arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'remove-tags-from-resource-output
                    'make-remove-tags-from-resource-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          remove-tags-from-resource-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          remove-tags-from-resource-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-arn))
      (common-lisp:list
       (common-lisp:cons "ResourceARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          remove-tags-from-resource-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (reset-cache-input (:copier common-lisp:nil)
      (:conc-name "struct-shape-reset-cache-input-"))
   (gateway-arn (common-lisp:error ":gateway-arn is required") :type
    (common-lisp:or gateway-arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'reset-cache-input 'make-reset-cache-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input reset-cache-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input reset-cache-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'gateway-arn))
      (common-lisp:list
       (common-lisp:cons "GatewayARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input reset-cache-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (reset-cache-output (:copier common-lisp:nil)
      (:conc-name "struct-shape-reset-cache-output-"))
   (gateway-arn common-lisp:nil :type
    (common-lisp:or gateway-arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'reset-cache-output 'make-reset-cache-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input reset-cache-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input reset-cache-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'gateway-arn))
      (common-lisp:list
       (common-lisp:cons "GatewayARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input reset-cache-output))
   common-lisp:nil))
(common-lisp:deftype resource-arn () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (retrieve-tape-archive-input (:copier common-lisp:nil)
      (:conc-name "struct-shape-retrieve-tape-archive-input-"))
   (tape-arn (common-lisp:error ":tape-arn is required") :type
    (common-lisp:or tape-arn common-lisp:null))
   (gateway-arn (common-lisp:error ":gateway-arn is required") :type
    (common-lisp:or gateway-arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'retrieve-tape-archive-input
                    'make-retrieve-tape-archive-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          retrieve-tape-archive-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          retrieve-tape-archive-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tape-arn))
      (common-lisp:list
       (common-lisp:cons "TapeARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'gateway-arn))
      (common-lisp:list
       (common-lisp:cons "GatewayARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          retrieve-tape-archive-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (retrieve-tape-archive-output (:copier common-lisp:nil)
      (:conc-name "struct-shape-retrieve-tape-archive-output-"))
   (tape-arn common-lisp:nil :type (common-lisp:or tape-arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'retrieve-tape-archive-output
                    'make-retrieve-tape-archive-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          retrieve-tape-archive-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          retrieve-tape-archive-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tape-arn))
      (common-lisp:list
       (common-lisp:cons "TapeARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          retrieve-tape-archive-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (retrieve-tape-recovery-point-input (:copier common-lisp:nil)
      (:conc-name "struct-shape-retrieve-tape-recovery-point-input-"))
   (tape-arn (common-lisp:error ":tape-arn is required") :type
    (common-lisp:or tape-arn common-lisp:null))
   (gateway-arn (common-lisp:error ":gateway-arn is required") :type
    (common-lisp:or gateway-arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'retrieve-tape-recovery-point-input
                    'make-retrieve-tape-recovery-point-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          retrieve-tape-recovery-point-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          retrieve-tape-recovery-point-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tape-arn))
      (common-lisp:list
       (common-lisp:cons "TapeARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'gateway-arn))
      (common-lisp:list
       (common-lisp:cons "GatewayARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          retrieve-tape-recovery-point-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (retrieve-tape-recovery-point-output (:copier common-lisp:nil)
      (:conc-name "struct-shape-retrieve-tape-recovery-point-output-"))
   (tape-arn common-lisp:nil :type (common-lisp:or tape-arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'retrieve-tape-recovery-point-output
                    'make-retrieve-tape-recovery-point-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          retrieve-tape-recovery-point-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          retrieve-tape-recovery-point-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tape-arn))
      (common-lisp:list
       (common-lisp:cons "TapeARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          retrieve-tape-recovery-point-output))
   common-lisp:nil))
(common-lisp:deftype role () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:define-condition service-unavailable-error
     (storagegateway-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       service-unavailable-error-message)
      (error :initarg :error :initform common-lisp:nil :reader
       service-unavailable-error-error)))
 (common-lisp:export
  (common-lisp:list 'service-unavailable-error
                    'service-unavailable-error-message
                    'service-unavailable-error-error)))
(common-lisp:progn
 (common-lisp:defstruct
     (set-local-console-password-input (:copier common-lisp:nil)
      (:conc-name "struct-shape-set-local-console-password-input-"))
   (gateway-arn (common-lisp:error ":gateway-arn is required") :type
    (common-lisp:or gateway-arn common-lisp:null))
   (local-console-password
    (common-lisp:error ":local-console-password is required") :type
    (common-lisp:or local-console-password common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'set-local-console-password-input
                    'make-set-local-console-password-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          set-local-console-password-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          set-local-console-password-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'gateway-arn))
      (common-lisp:list
       (common-lisp:cons "GatewayARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'local-console-password))
      (common-lisp:list
       (common-lisp:cons "LocalConsolePassword"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          set-local-console-password-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (set-local-console-password-output (:copier common-lisp:nil)
      (:conc-name "struct-shape-set-local-console-password-output-"))
   (gateway-arn common-lisp:nil :type
    (common-lisp:or gateway-arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'set-local-console-password-output
                    'make-set-local-console-password-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          set-local-console-password-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          set-local-console-password-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'gateway-arn))
      (common-lisp:list
       (common-lisp:cons "GatewayARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          set-local-console-password-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (shutdown-gateway-input (:copier common-lisp:nil)
      (:conc-name "struct-shape-shutdown-gateway-input-"))
   (gateway-arn (common-lisp:error ":gateway-arn is required") :type
    (common-lisp:or gateway-arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'shutdown-gateway-input 'make-shutdown-gateway-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          shutdown-gateway-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          shutdown-gateway-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'gateway-arn))
      (common-lisp:list
       (common-lisp:cons "GatewayARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          shutdown-gateway-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (shutdown-gateway-output (:copier common-lisp:nil)
      (:conc-name "struct-shape-shutdown-gateway-output-"))
   (gateway-arn common-lisp:nil :type
    (common-lisp:or gateway-arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'shutdown-gateway-output 'make-shutdown-gateway-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          shutdown-gateway-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          shutdown-gateway-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'gateway-arn))
      (common-lisp:list
       (common-lisp:cons "GatewayARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          shutdown-gateway-output))
   common-lisp:nil))
(common-lisp:deftype snapshot-description () 'common-lisp:string)
(common-lisp:deftype snapshot-id () 'common-lisp:string)
(common-lisp:deftype squash () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (start-gateway-input (:copier common-lisp:nil)
      (:conc-name "struct-shape-start-gateway-input-"))
   (gateway-arn (common-lisp:error ":gateway-arn is required") :type
    (common-lisp:or gateway-arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'start-gateway-input 'make-start-gateway-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input start-gateway-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input start-gateway-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'gateway-arn))
      (common-lisp:list
       (common-lisp:cons "GatewayARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input start-gateway-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (start-gateway-output (:copier common-lisp:nil)
      (:conc-name "struct-shape-start-gateway-output-"))
   (gateway-arn common-lisp:nil :type
    (common-lisp:or gateway-arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'start-gateway-output 'make-start-gateway-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input start-gateway-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input start-gateway-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'gateway-arn))
      (common-lisp:list
       (common-lisp:cons "GatewayARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input start-gateway-output))
   common-lisp:nil))
(common-lisp:deftype storage-class () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (storage-gateway-error (:copier common-lisp:nil)
      (:conc-name "struct-shape-storage-gateway-error-"))
   (error-code common-lisp:nil :type
    (common-lisp:or error-code common-lisp:null))
   (error-details common-lisp:nil :type
    (common-lisp:or |errorDetails| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'storage-gateway-error 'make-storage-gateway-error))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          storage-gateway-error))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          storage-gateway-error))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'error-code))
      (common-lisp:list
       (common-lisp:cons "errorCode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'error-details))
      (common-lisp:list
       (common-lisp:cons "errorDetails"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          storage-gateway-error))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (storedi-scsivolume (:copier common-lisp:nil)
      (:conc-name "struct-shape-storedi-scsivolume-"))
   (volume-arn common-lisp:nil :type
    (common-lisp:or volume-arn common-lisp:null))
   (volume-id common-lisp:nil :type
    (common-lisp:or volume-id common-lisp:null))
   (volume-type common-lisp:nil :type
    (common-lisp:or volume-type common-lisp:null))
   (volume-status common-lisp:nil :type
    (common-lisp:or volume-status common-lisp:null))
   (volume-size-in-bytes common-lisp:nil :type
    (common-lisp:or common-lisp:integer common-lisp:null))
   (volume-progress common-lisp:nil :type
    (common-lisp:or double-object common-lisp:null))
   (volume-disk-id common-lisp:nil :type
    (common-lisp:or disk-id common-lisp:null))
   (source-snapshot-id common-lisp:nil :type
    (common-lisp:or snapshot-id common-lisp:null))
   (preserved-existing-data common-lisp:nil :type
    (common-lisp:or common-lisp:boolean common-lisp:null))
   (volumei-scsiattributes common-lisp:nil :type
    (common-lisp:or volumei-scsiattributes common-lisp:null))
   (created-date common-lisp:nil :type
    (common-lisp:or created-date common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'storedi-scsivolume 'make-storedi-scsivolume))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input storedi-scsivolume))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input storedi-scsivolume))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'volume-arn))
      (common-lisp:list
       (common-lisp:cons "VolumeARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'volume-id))
      (common-lisp:list
       (common-lisp:cons "VolumeId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'volume-type))
      (common-lisp:list
       (common-lisp:cons "VolumeType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'volume-status))
      (common-lisp:list
       (common-lisp:cons "VolumeStatus"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'volume-size-in-bytes))
      (common-lisp:list
       (common-lisp:cons "VolumeSizeInBytes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'volume-progress))
      (common-lisp:list
       (common-lisp:cons "VolumeProgress"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'volume-disk-id))
      (common-lisp:list
       (common-lisp:cons "VolumeDiskId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'source-snapshot-id))
      (common-lisp:list
       (common-lisp:cons "SourceSnapshotId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'preserved-existing-data))
      (common-lisp:list
       (common-lisp:cons "PreservedExistingData"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'volumei-scsiattributes))
      (common-lisp:list
       (common-lisp:cons "VolumeiSCSIAttributes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created-date))
      (common-lisp:list
       (common-lisp:cons "CreatedDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input storedi-scsivolume))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype storedi-scsivolumes ()
   '(trivial-types:proper-list storedi-scsivolume))
 (common-lisp:defun |make-storedi-scsivolumes|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list storedi-scsivolume))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (tag (:copier common-lisp:nil) (:conc-name "struct-shape-tag-"))
   (key (common-lisp:error ":key is required") :type
    (common-lisp:or tag-key common-lisp:null))
   (value (common-lisp:error ":value is required") :type
    (common-lisp:or tag-value common-lisp:null)))
 (common-lisp:export (common-lisp:list 'tag 'make-tag))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input tag))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input tag))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'key))
      (common-lisp:list
       (common-lisp:cons "Key"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'value))
      (common-lisp:list
       (common-lisp:cons "Value"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input tag))
   common-lisp:nil))
(common-lisp:deftype tag-key () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype tag-keys () '(trivial-types:proper-list tag-key))
 (common-lisp:defun |make-tag-keys|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list tag-key))
   aws-sdk/generator/shape::members))
(common-lisp:deftype tag-value () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype tags () '(trivial-types:proper-list tag))
 (common-lisp:defun |make-tags|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list tag))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (tape (:copier common-lisp:nil) (:conc-name "struct-shape-tape-"))
   (tape-arn common-lisp:nil :type (common-lisp:or tape-arn common-lisp:null))
   (tape-barcode common-lisp:nil :type
    (common-lisp:or tape-barcode common-lisp:null))
   (tape-created-date common-lisp:nil :type
    (common-lisp:or time common-lisp:null))
   (tape-size-in-bytes common-lisp:nil :type
    (common-lisp:or tape-size common-lisp:null))
   (tape-status common-lisp:nil :type
    (common-lisp:or tape-status common-lisp:null))
   (vtldevice common-lisp:nil :type
    (common-lisp:or vtldevice-arn common-lisp:null))
   (progress common-lisp:nil :type
    (common-lisp:or double-object common-lisp:null))
   (tape-used-in-bytes common-lisp:nil :type
    (common-lisp:or tape-usage common-lisp:null)))
 (common-lisp:export (common-lisp:list 'tape 'make-tape))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input tape))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input tape))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tape-arn))
      (common-lisp:list
       (common-lisp:cons "TapeARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tape-barcode))
      (common-lisp:list
       (common-lisp:cons "TapeBarcode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tape-created-date))
      (common-lisp:list
       (common-lisp:cons "TapeCreatedDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tape-size-in-bytes))
      (common-lisp:list
       (common-lisp:cons "TapeSizeInBytes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tape-status))
      (common-lisp:list
       (common-lisp:cons "TapeStatus"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'vtldevice))
      (common-lisp:list
       (common-lisp:cons "VTLDevice"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'progress))
      (common-lisp:list
       (common-lisp:cons "Progress"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tape-used-in-bytes))
      (common-lisp:list
       (common-lisp:cons "TapeUsedInBytes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input tape))
   common-lisp:nil))
(common-lisp:deftype tape-arn () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype tape-arns () '(trivial-types:proper-list tape-arn))
 (common-lisp:defun |make-tape-arns|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list tape-arn))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (tape-archive (:copier common-lisp:nil)
      (:conc-name "struct-shape-tape-archive-"))
   (tape-arn common-lisp:nil :type (common-lisp:or tape-arn common-lisp:null))
   (tape-barcode common-lisp:nil :type
    (common-lisp:or tape-barcode common-lisp:null))
   (tape-created-date common-lisp:nil :type
    (common-lisp:or time common-lisp:null))
   (tape-size-in-bytes common-lisp:nil :type
    (common-lisp:or tape-size common-lisp:null))
   (completion-time common-lisp:nil :type
    (common-lisp:or time common-lisp:null))
   (retrieved-to common-lisp:nil :type
    (common-lisp:or gateway-arn common-lisp:null))
   (tape-status common-lisp:nil :type
    (common-lisp:or tape-archive-status common-lisp:null))
   (tape-used-in-bytes common-lisp:nil :type
    (common-lisp:or tape-usage common-lisp:null)))
 (common-lisp:export (common-lisp:list 'tape-archive 'make-tape-archive))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input tape-archive))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input tape-archive))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tape-arn))
      (common-lisp:list
       (common-lisp:cons "TapeARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tape-barcode))
      (common-lisp:list
       (common-lisp:cons "TapeBarcode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tape-created-date))
      (common-lisp:list
       (common-lisp:cons "TapeCreatedDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tape-size-in-bytes))
      (common-lisp:list
       (common-lisp:cons "TapeSizeInBytes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'completion-time))
      (common-lisp:list
       (common-lisp:cons "CompletionTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'retrieved-to))
      (common-lisp:list
       (common-lisp:cons "RetrievedTo"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tape-status))
      (common-lisp:list
       (common-lisp:cons "TapeStatus"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tape-used-in-bytes))
      (common-lisp:list
       (common-lisp:cons "TapeUsedInBytes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input tape-archive))
   common-lisp:nil))
(common-lisp:deftype tape-archive-status () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype tape-archives ()
   '(trivial-types:proper-list tape-archive))
 (common-lisp:defun |make-tape-archives|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list tape-archive))
   aws-sdk/generator/shape::members))
(common-lisp:deftype tape-barcode () 'common-lisp:string)
(common-lisp:deftype tape-barcode-prefix () 'common-lisp:string)
(common-lisp:deftype tape-drive-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (tape-info (:copier common-lisp:nil)
      (:conc-name "struct-shape-tape-info-"))
   (tape-arn common-lisp:nil :type (common-lisp:or tape-arn common-lisp:null))
   (tape-barcode common-lisp:nil :type
    (common-lisp:or tape-barcode common-lisp:null))
   (tape-size-in-bytes common-lisp:nil :type
    (common-lisp:or tape-size common-lisp:null))
   (tape-status common-lisp:nil :type
    (common-lisp:or tape-status common-lisp:null))
   (gateway-arn common-lisp:nil :type
    (common-lisp:or gateway-arn common-lisp:null)))
 (common-lisp:export (common-lisp:list 'tape-info 'make-tape-info))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input tape-info))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input tape-info))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tape-arn))
      (common-lisp:list
       (common-lisp:cons "TapeARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tape-barcode))
      (common-lisp:list
       (common-lisp:cons "TapeBarcode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tape-size-in-bytes))
      (common-lisp:list
       (common-lisp:cons "TapeSizeInBytes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tape-status))
      (common-lisp:list
       (common-lisp:cons "TapeStatus"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'gateway-arn))
      (common-lisp:list
       (common-lisp:cons "GatewayARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input tape-info))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype tape-infos () '(trivial-types:proper-list tape-info))
 (common-lisp:defun |make-tape-infos|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list tape-info))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (tape-recovery-point-info (:copier common-lisp:nil)
      (:conc-name "struct-shape-tape-recovery-point-info-"))
   (tape-arn common-lisp:nil :type (common-lisp:or tape-arn common-lisp:null))
   (tape-recovery-point-time common-lisp:nil :type
    (common-lisp:or time common-lisp:null))
   (tape-size-in-bytes common-lisp:nil :type
    (common-lisp:or tape-size common-lisp:null))
   (tape-status common-lisp:nil :type
    (common-lisp:or tape-recovery-point-status common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'tape-recovery-point-info 'make-tape-recovery-point-info))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          tape-recovery-point-info))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          tape-recovery-point-info))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tape-arn))
      (common-lisp:list
       (common-lisp:cons "TapeARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'tape-recovery-point-time))
      (common-lisp:list
       (common-lisp:cons "TapeRecoveryPointTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tape-size-in-bytes))
      (common-lisp:list
       (common-lisp:cons "TapeSizeInBytes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tape-status))
      (common-lisp:list
       (common-lisp:cons "TapeStatus"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          tape-recovery-point-info))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype tape-recovery-point-infos ()
   '(trivial-types:proper-list tape-recovery-point-info))
 (common-lisp:defun |make-tape-recovery-point-infos|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            tape-recovery-point-info))
   aws-sdk/generator/shape::members))
(common-lisp:deftype tape-recovery-point-status () 'common-lisp:string)
(common-lisp:deftype tape-size () 'common-lisp:integer)
(common-lisp:deftype tape-status () 'common-lisp:string)
(common-lisp:deftype tape-usage () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:deftype tapes () '(trivial-types:proper-list tape))
 (common-lisp:defun |make-tapes|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list tape))
   aws-sdk/generator/shape::members))
(common-lisp:deftype target-arn () 'common-lisp:string)
(common-lisp:deftype target-name () 'common-lisp:string)
(common-lisp:deftype time () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (update-bandwidth-rate-limit-input (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-bandwidth-rate-limit-input-"))
   (gateway-arn (common-lisp:error ":gateway-arn is required") :type
    (common-lisp:or gateway-arn common-lisp:null))
   (average-upload-rate-limit-in-bits-per-sec common-lisp:nil :type
    (common-lisp:or bandwidth-upload-rate-limit common-lisp:null))
   (average-download-rate-limit-in-bits-per-sec common-lisp:nil :type
    (common-lisp:or bandwidth-download-rate-limit common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-bandwidth-rate-limit-input
                    'make-update-bandwidth-rate-limit-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-bandwidth-rate-limit-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-bandwidth-rate-limit-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'gateway-arn))
      (common-lisp:list
       (common-lisp:cons "GatewayARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'average-upload-rate-limit-in-bits-per-sec))
      (common-lisp:list
       (common-lisp:cons "AverageUploadRateLimitInBitsPerSec"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'average-download-rate-limit-in-bits-per-sec))
      (common-lisp:list
       (common-lisp:cons "AverageDownloadRateLimitInBitsPerSec"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-bandwidth-rate-limit-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-bandwidth-rate-limit-output (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-bandwidth-rate-limit-output-"))
   (gateway-arn common-lisp:nil :type
    (common-lisp:or gateway-arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-bandwidth-rate-limit-output
                    'make-update-bandwidth-rate-limit-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-bandwidth-rate-limit-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-bandwidth-rate-limit-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'gateway-arn))
      (common-lisp:list
       (common-lisp:cons "GatewayARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-bandwidth-rate-limit-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-chap-credentials-input (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-chap-credentials-input-"))
   (target-arn (common-lisp:error ":target-arn is required") :type
    (common-lisp:or target-arn common-lisp:null))
   (secret-to-authenticate-initiator
    (common-lisp:error ":secret-to-authenticate-initiator is required") :type
    (common-lisp:or chap-secret common-lisp:null))
   (initiator-name (common-lisp:error ":initiator-name is required") :type
    (common-lisp:or iqn-name common-lisp:null))
   (secret-to-authenticate-target common-lisp:nil :type
    (common-lisp:or chap-secret common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-chap-credentials-input
                    'make-update-chap-credentials-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-chap-credentials-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-chap-credentials-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'target-arn))
      (common-lisp:list
       (common-lisp:cons "TargetARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'secret-to-authenticate-initiator))
      (common-lisp:list
       (common-lisp:cons "SecretToAuthenticateInitiator"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'initiator-name))
      (common-lisp:list
       (common-lisp:cons "InitiatorName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'secret-to-authenticate-target))
      (common-lisp:list
       (common-lisp:cons "SecretToAuthenticateTarget"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-chap-credentials-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-chap-credentials-output (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-chap-credentials-output-"))
   (target-arn common-lisp:nil :type
    (common-lisp:or target-arn common-lisp:null))
   (initiator-name common-lisp:nil :type
    (common-lisp:or iqn-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-chap-credentials-output
                    'make-update-chap-credentials-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-chap-credentials-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-chap-credentials-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'target-arn))
      (common-lisp:list
       (common-lisp:cons "TargetARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'initiator-name))
      (common-lisp:list
       (common-lisp:cons "InitiatorName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-chap-credentials-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-gateway-information-input (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-gateway-information-input-"))
   (gateway-arn (common-lisp:error ":gateway-arn is required") :type
    (common-lisp:or gateway-arn common-lisp:null))
   (gateway-name common-lisp:nil :type
    (common-lisp:or gateway-name common-lisp:null))
   (gateway-timezone common-lisp:nil :type
    (common-lisp:or gateway-timezone common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-gateway-information-input
                    'make-update-gateway-information-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-gateway-information-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-gateway-information-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'gateway-arn))
      (common-lisp:list
       (common-lisp:cons "GatewayARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'gateway-name))
      (common-lisp:list
       (common-lisp:cons "GatewayName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'gateway-timezone))
      (common-lisp:list
       (common-lisp:cons "GatewayTimezone"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-gateway-information-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-gateway-information-output (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-gateway-information-output-"))
   (gateway-arn common-lisp:nil :type
    (common-lisp:or gateway-arn common-lisp:null))
   (gateway-name common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-gateway-information-output
                    'make-update-gateway-information-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-gateway-information-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-gateway-information-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'gateway-arn))
      (common-lisp:list
       (common-lisp:cons "GatewayARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'gateway-name))
      (common-lisp:list
       (common-lisp:cons "GatewayName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-gateway-information-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-gateway-software-now-input (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-gateway-software-now-input-"))
   (gateway-arn (common-lisp:error ":gateway-arn is required") :type
    (common-lisp:or gateway-arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-gateway-software-now-input
                    'make-update-gateway-software-now-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-gateway-software-now-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-gateway-software-now-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'gateway-arn))
      (common-lisp:list
       (common-lisp:cons "GatewayARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-gateway-software-now-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-gateway-software-now-output (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-gateway-software-now-output-"))
   (gateway-arn common-lisp:nil :type
    (common-lisp:or gateway-arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-gateway-software-now-output
                    'make-update-gateway-software-now-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-gateway-software-now-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-gateway-software-now-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'gateway-arn))
      (common-lisp:list
       (common-lisp:cons "GatewayARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-gateway-software-now-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-maintenance-start-time-input (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-maintenance-start-time-input-"))
   (gateway-arn (common-lisp:error ":gateway-arn is required") :type
    (common-lisp:or gateway-arn common-lisp:null))
   (hour-of-day (common-lisp:error ":hour-of-day is required") :type
    (common-lisp:or hour-of-day common-lisp:null))
   (minute-of-hour (common-lisp:error ":minute-of-hour is required") :type
    (common-lisp:or minute-of-hour common-lisp:null))
   (day-of-week (common-lisp:error ":day-of-week is required") :type
    (common-lisp:or day-of-week common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-maintenance-start-time-input
                    'make-update-maintenance-start-time-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-maintenance-start-time-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-maintenance-start-time-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'gateway-arn))
      (common-lisp:list
       (common-lisp:cons "GatewayARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'hour-of-day))
      (common-lisp:list
       (common-lisp:cons "HourOfDay"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'minute-of-hour))
      (common-lisp:list
       (common-lisp:cons "MinuteOfHour"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'day-of-week))
      (common-lisp:list
       (common-lisp:cons "DayOfWeek"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-maintenance-start-time-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-maintenance-start-time-output (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-maintenance-start-time-output-"))
   (gateway-arn common-lisp:nil :type
    (common-lisp:or gateway-arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-maintenance-start-time-output
                    'make-update-maintenance-start-time-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-maintenance-start-time-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-maintenance-start-time-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'gateway-arn))
      (common-lisp:list
       (common-lisp:cons "GatewayARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-maintenance-start-time-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-nfsfile-share-input (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-nfsfile-share-input-"))
   (file-share-arn (common-lisp:error ":file-share-arn is required") :type
    (common-lisp:or file-share-arn common-lisp:null))
   (kmsencrypted common-lisp:nil :type
    (common-lisp:or boolean common-lisp:null))
   (kmskey common-lisp:nil :type (common-lisp:or kmskey common-lisp:null))
   (nfsfile-share-defaults common-lisp:nil :type
    (common-lisp:or nfsfile-share-defaults common-lisp:null))
   (default-storage-class common-lisp:nil :type
    (common-lisp:or storage-class common-lisp:null))
   (client-list common-lisp:nil :type
    (common-lisp:or file-share-client-list common-lisp:null))
   (squash common-lisp:nil :type (common-lisp:or squash common-lisp:null))
   (read-only common-lisp:nil :type (common-lisp:or boolean common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-nfsfile-share-input
                    'make-update-nfsfile-share-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-nfsfile-share-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-nfsfile-share-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'file-share-arn))
      (common-lisp:list
       (common-lisp:cons "FileShareARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'kmsencrypted))
      (common-lisp:list
       (common-lisp:cons "KMSEncrypted"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'kmskey))
      (common-lisp:list
       (common-lisp:cons "KMSKey"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'nfsfile-share-defaults))
      (common-lisp:list
       (common-lisp:cons "NFSFileShareDefaults"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'default-storage-class))
      (common-lisp:list
       (common-lisp:cons "DefaultStorageClass"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'client-list))
      (common-lisp:list
       (common-lisp:cons "ClientList"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'squash))
      (common-lisp:list
       (common-lisp:cons "Squash"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'read-only))
      (common-lisp:list
       (common-lisp:cons "ReadOnly"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-nfsfile-share-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-nfsfile-share-output (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-nfsfile-share-output-"))
   (file-share-arn common-lisp:nil :type
    (common-lisp:or file-share-arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-nfsfile-share-output
                    'make-update-nfsfile-share-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-nfsfile-share-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-nfsfile-share-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'file-share-arn))
      (common-lisp:list
       (common-lisp:cons "FileShareARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-nfsfile-share-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-snapshot-schedule-input (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-snapshot-schedule-input-"))
   (volume-arn (common-lisp:error ":volume-arn is required") :type
    (common-lisp:or volume-arn common-lisp:null))
   (start-at (common-lisp:error ":start-at is required") :type
    (common-lisp:or hour-of-day common-lisp:null))
   (recurrence-in-hours (common-lisp:error ":recurrence-in-hours is required")
    :type (common-lisp:or recurrence-in-hours common-lisp:null))
   (description common-lisp:nil :type
    (common-lisp:or description common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-snapshot-schedule-input
                    'make-update-snapshot-schedule-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-snapshot-schedule-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-snapshot-schedule-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'volume-arn))
      (common-lisp:list
       (common-lisp:cons "VolumeARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'start-at))
      (common-lisp:list
       (common-lisp:cons "StartAt"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'recurrence-in-hours))
      (common-lisp:list
       (common-lisp:cons "RecurrenceInHours"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-snapshot-schedule-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-snapshot-schedule-output (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-snapshot-schedule-output-"))
   (volume-arn common-lisp:nil :type
    (common-lisp:or volume-arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-snapshot-schedule-output
                    'make-update-snapshot-schedule-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-snapshot-schedule-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-snapshot-schedule-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'volume-arn))
      (common-lisp:list
       (common-lisp:cons "VolumeARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-snapshot-schedule-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-vtldevice-type-input (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-vtldevice-type-input-"))
   (vtldevice-arn (common-lisp:error ":vtldevice-arn is required") :type
    (common-lisp:or vtldevice-arn common-lisp:null))
   (device-type (common-lisp:error ":device-type is required") :type
    (common-lisp:or device-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-vtldevice-type-input
                    'make-update-vtldevice-type-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-vtldevice-type-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-vtldevice-type-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'vtldevice-arn))
      (common-lisp:list
       (common-lisp:cons "VTLDeviceARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'device-type))
      (common-lisp:list
       (common-lisp:cons "DeviceType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-vtldevice-type-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-vtldevice-type-output (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-vtldevice-type-output-"))
   (vtldevice-arn common-lisp:nil :type
    (common-lisp:or vtldevice-arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-vtldevice-type-output
                    'make-update-vtldevice-type-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-vtldevice-type-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-vtldevice-type-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'vtldevice-arn))
      (common-lisp:list
       (common-lisp:cons "VTLDeviceARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-vtldevice-type-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (vtldevice (:copier common-lisp:nil)
      (:conc-name "struct-shape-vtldevice-"))
   (vtldevice-arn common-lisp:nil :type
    (common-lisp:or vtldevice-arn common-lisp:null))
   (vtldevice-type common-lisp:nil :type
    (common-lisp:or vtldevice-type common-lisp:null))
   (vtldevice-vendor common-lisp:nil :type
    (common-lisp:or vtldevice-vendor common-lisp:null))
   (vtldevice-product-identifier common-lisp:nil :type
    (common-lisp:or vtldevice-product-identifier common-lisp:null))
   (devicei-scsiattributes common-lisp:nil :type
    (common-lisp:or devicei-scsiattributes common-lisp:null)))
 (common-lisp:export (common-lisp:list 'vtldevice 'make-vtldevice))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input vtldevice))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input vtldevice))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'vtldevice-arn))
      (common-lisp:list
       (common-lisp:cons "VTLDeviceARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'vtldevice-type))
      (common-lisp:list
       (common-lisp:cons "VTLDeviceType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'vtldevice-vendor))
      (common-lisp:list
       (common-lisp:cons "VTLDeviceVendor"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'vtldevice-product-identifier))
      (common-lisp:list
       (common-lisp:cons "VTLDeviceProductIdentifier"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'devicei-scsiattributes))
      (common-lisp:list
       (common-lisp:cons "DeviceiSCSIAttributes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input vtldevice))
   common-lisp:nil))
(common-lisp:deftype vtldevice-arn () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype vtldevice-arns ()
   '(trivial-types:proper-list vtldevice-arn))
 (common-lisp:defun |make-vtldevice-arns|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list vtldevice-arn))
   aws-sdk/generator/shape::members))
(common-lisp:deftype vtldevice-product-identifier () 'common-lisp:string)
(common-lisp:deftype vtldevice-type () 'common-lisp:string)
(common-lisp:deftype vtldevice-vendor () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype vtldevices () '(trivial-types:proper-list vtldevice))
 (common-lisp:defun |make-vtldevices|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list vtldevice))
   aws-sdk/generator/shape::members))
(common-lisp:deftype volume-arn () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype volume-arns () '(trivial-types:proper-list volume-arn))
 (common-lisp:defun |make-volume-arns|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list volume-arn))
   aws-sdk/generator/shape::members))
(common-lisp:deftype volume-id () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (volume-info (:copier common-lisp:nil)
      (:conc-name "struct-shape-volume-info-"))
   (volume-arn common-lisp:nil :type
    (common-lisp:or volume-arn common-lisp:null))
   (volume-id common-lisp:nil :type
    (common-lisp:or volume-id common-lisp:null))
   (gateway-arn common-lisp:nil :type
    (common-lisp:or gateway-arn common-lisp:null))
   (gateway-id common-lisp:nil :type
    (common-lisp:or gateway-id common-lisp:null))
   (volume-type common-lisp:nil :type
    (common-lisp:or volume-type common-lisp:null))
   (volume-size-in-bytes common-lisp:nil :type
    (common-lisp:or common-lisp:integer common-lisp:null)))
 (common-lisp:export (common-lisp:list 'volume-info 'make-volume-info))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input volume-info))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input volume-info))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'volume-arn))
      (common-lisp:list
       (common-lisp:cons "VolumeARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'volume-id))
      (common-lisp:list
       (common-lisp:cons "VolumeId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'gateway-arn))
      (common-lisp:list
       (common-lisp:cons "GatewayARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'gateway-id))
      (common-lisp:list
       (common-lisp:cons "GatewayId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'volume-type))
      (common-lisp:list
       (common-lisp:cons "VolumeType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'volume-size-in-bytes))
      (common-lisp:list
       (common-lisp:cons "VolumeSizeInBytes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input volume-info))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype volume-infos () '(trivial-types:proper-list volume-info))
 (common-lisp:defun |make-volume-infos|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list volume-info))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (volume-recovery-point-info (:copier common-lisp:nil)
      (:conc-name "struct-shape-volume-recovery-point-info-"))
   (volume-arn common-lisp:nil :type
    (common-lisp:or volume-arn common-lisp:null))
   (volume-size-in-bytes common-lisp:nil :type
    (common-lisp:or common-lisp:integer common-lisp:null))
   (volume-usage-in-bytes common-lisp:nil :type
    (common-lisp:or common-lisp:integer common-lisp:null))
   (volume-recovery-point-time common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'volume-recovery-point-info
                    'make-volume-recovery-point-info))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          volume-recovery-point-info))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          volume-recovery-point-info))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'volume-arn))
      (common-lisp:list
       (common-lisp:cons "VolumeARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'volume-size-in-bytes))
      (common-lisp:list
       (common-lisp:cons "VolumeSizeInBytes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'volume-usage-in-bytes))
      (common-lisp:list
       (common-lisp:cons "VolumeUsageInBytes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'volume-recovery-point-time))
      (common-lisp:list
       (common-lisp:cons "VolumeRecoveryPointTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          volume-recovery-point-info))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype volume-recovery-point-infos ()
   '(trivial-types:proper-list volume-recovery-point-info))
 (common-lisp:defun |make-volume-recovery-point-infos|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            volume-recovery-point-info))
   aws-sdk/generator/shape::members))
(common-lisp:deftype volume-status () 'common-lisp:string)
(common-lisp:deftype volume-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (volumei-scsiattributes (:copier common-lisp:nil)
      (:conc-name "struct-shape-volumei-scsiattributes-"))
   (target-arn common-lisp:nil :type
    (common-lisp:or target-arn common-lisp:null))
   (network-interface-id common-lisp:nil :type
    (common-lisp:or network-interface-id common-lisp:null))
   (network-interface-port common-lisp:nil :type
    (common-lisp:or common-lisp:integer common-lisp:null))
   (lun-number common-lisp:nil :type
    (common-lisp:or positive-int-object common-lisp:null))
   (chap-enabled common-lisp:nil :type
    (common-lisp:or common-lisp:boolean common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'volumei-scsiattributes 'make-volumei-scsiattributes))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          volumei-scsiattributes))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          volumei-scsiattributes))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'target-arn))
      (common-lisp:list
       (common-lisp:cons "TargetARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'network-interface-id))
      (common-lisp:list
       (common-lisp:cons "NetworkInterfaceId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'network-interface-port))
      (common-lisp:list
       (common-lisp:cons "NetworkInterfacePort"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'lun-number))
      (common-lisp:list
       (common-lisp:cons "LunNumber"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'chap-enabled))
      (common-lisp:list
       (common-lisp:cons "ChapEnabled"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          volumei-scsiattributes))
   common-lisp:nil))
common-lisp:nil
common-lisp:nil
(common-lisp:progn
 (common-lisp:deftype |errorDetails| () 'common-lisp:hash-table)
 (common-lisp:defun |make-errordetails| (aws-sdk/generator/shape::key-values)
   (common-lisp:etypecase aws-sdk/generator/shape::key-values
     (common-lisp:hash-table aws-sdk/generator/shape::key-values)
     (common-lisp:list
      (alexandria:alist-hash-table aws-sdk/generator/shape::key-values)))))
common-lisp:nil
common-lisp:nil
common-lisp:nil
(common-lisp:progn
 (common-lisp:defun activate-gateway
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key activation-key gateway-name
                     gateway-timezone gateway-region gateway-type
                     tape-drive-type medium-changer-type)
   (common-lisp:declare
    (common-lisp:ignorable activation-key gateway-name gateway-timezone
     gateway-region gateway-type tape-drive-type medium-changer-type))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-activate-gateway-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'storagegateway-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "ActivateGateway"
                                                        "2013-06-30"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'activate-gateway))
(common-lisp:progn
 (common-lisp:defun add-cache
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key gateway-arn disk-ids)
   (common-lisp:declare (common-lisp:ignorable gateway-arn disk-ids))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-add-cache-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'storagegateway-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/" "AddCache"
                                                        "2013-06-30"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'add-cache))
(common-lisp:progn
 (common-lisp:defun add-tags-to-resource
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key resource-arn tags)
   (common-lisp:declare (common-lisp:ignorable resource-arn tags))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-add-tags-to-resource-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'storagegateway-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "AddTagsToResource"
                                                        "2013-06-30"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'add-tags-to-resource))
(common-lisp:progn
 (common-lisp:defun add-upload-buffer
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key gateway-arn disk-ids)
   (common-lisp:declare (common-lisp:ignorable gateway-arn disk-ids))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-add-upload-buffer-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'storagegateway-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "AddUploadBuffer"
                                                        "2013-06-30"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'add-upload-buffer))
(common-lisp:progn
 (common-lisp:defun add-working-storage
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key gateway-arn disk-ids)
   (common-lisp:declare (common-lisp:ignorable gateway-arn disk-ids))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-add-working-storage-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'storagegateway-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "AddWorkingStorage"
                                                        "2013-06-30"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'add-working-storage))
(common-lisp:progn
 (common-lisp:defun cancel-archival
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key gateway-arn tape-arn)
   (common-lisp:declare (common-lisp:ignorable gateway-arn tape-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-cancel-archival-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'storagegateway-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "CancelArchival"
                                                        "2013-06-30"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'cancel-archival))
(common-lisp:progn
 (common-lisp:defun cancel-retrieval
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key gateway-arn tape-arn)
   (common-lisp:declare (common-lisp:ignorable gateway-arn tape-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-cancel-retrieval-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'storagegateway-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "CancelRetrieval"
                                                        "2013-06-30"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'cancel-retrieval))
(common-lisp:progn
 (common-lisp:defun create-cachedi-scsivolume
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key gateway-arn volume-size-in-bytes
                     snapshot-id target-name source-volume-arn
                     network-interface-id client-token)
   (common-lisp:declare
    (common-lisp:ignorable gateway-arn volume-size-in-bytes snapshot-id
     target-name source-volume-arn network-interface-id client-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-cachedi-scsivolume-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'storagegateway-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "CreateCachediSCSIVolume"
                                                        "2013-06-30"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'create-cachedi-scsivolume))
(common-lisp:progn
 (common-lisp:defun create-nfsfile-share
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key client-token nfsfile-share-defaults
                     gateway-arn kmsencrypted kmskey role location-arn
                     default-storage-class client-list squash read-only)
   (common-lisp:declare
    (common-lisp:ignorable client-token nfsfile-share-defaults gateway-arn
     kmsencrypted kmskey role location-arn default-storage-class client-list
     squash read-only))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-nfsfile-share-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'storagegateway-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "CreateNFSFileShare"
                                                        "2013-06-30"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'create-nfsfile-share))
(common-lisp:progn
 (common-lisp:defun create-snapshot
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key volume-arn snapshot-description)
   (common-lisp:declare
    (common-lisp:ignorable volume-arn snapshot-description))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-snapshot-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'storagegateway-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "CreateSnapshot"
                                                        "2013-06-30"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'create-snapshot))
(common-lisp:progn
 (common-lisp:defun create-snapshot-from-volume-recovery-point
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key volume-arn snapshot-description)
   (common-lisp:declare
    (common-lisp:ignorable volume-arn snapshot-description))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-create-snapshot-from-volume-recovery-point-input
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'storagegateway-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "CreateSnapshotFromVolumeRecoveryPoint"
                                                        "2013-06-30"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'create-snapshot-from-volume-recovery-point))
(common-lisp:progn
 (common-lisp:defun create-storedi-scsivolume
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key gateway-arn disk-id snapshot-id
                     preserve-existing-data target-name network-interface-id)
   (common-lisp:declare
    (common-lisp:ignorable gateway-arn disk-id snapshot-id
     preserve-existing-data target-name network-interface-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-storedi-scsivolume-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'storagegateway-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "CreateStorediSCSIVolume"
                                                        "2013-06-30"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'create-storedi-scsivolume))
(common-lisp:progn
 (common-lisp:defun create-tape-with-barcode
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key gateway-arn tape-size-in-bytes
                     tape-barcode)
   (common-lisp:declare
    (common-lisp:ignorable gateway-arn tape-size-in-bytes tape-barcode))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-tape-with-barcode-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'storagegateway-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "CreateTapeWithBarcode"
                                                        "2013-06-30"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'create-tape-with-barcode))
(common-lisp:progn
 (common-lisp:defun create-tapes
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key gateway-arn tape-size-in-bytes
                     client-token num-tapes-to-create tape-barcode-prefix)
   (common-lisp:declare
    (common-lisp:ignorable gateway-arn tape-size-in-bytes client-token
     num-tapes-to-create tape-barcode-prefix))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-tapes-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'storagegateway-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "CreateTapes"
                                                        "2013-06-30"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'create-tapes))
(common-lisp:progn
 (common-lisp:defun delete-bandwidth-rate-limit
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key gateway-arn bandwidth-type)
   (common-lisp:declare (common-lisp:ignorable gateway-arn bandwidth-type))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-delete-bandwidth-rate-limit-input
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'storagegateway-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "DeleteBandwidthRateLimit"
                                                        "2013-06-30"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'delete-bandwidth-rate-limit))
(common-lisp:progn
 (common-lisp:defun delete-chap-credentials
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key target-arn initiator-name)
   (common-lisp:declare (common-lisp:ignorable target-arn initiator-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-chap-credentials-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'storagegateway-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "DeleteChapCredentials"
                                                        "2013-06-30"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'delete-chap-credentials))
(common-lisp:progn
 (common-lisp:defun delete-file-share
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key file-share-arn force-delete)
   (common-lisp:declare (common-lisp:ignorable file-share-arn force-delete))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-file-share-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'storagegateway-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "DeleteFileShare"
                                                        "2013-06-30"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'delete-file-share))
(common-lisp:progn
 (common-lisp:defun delete-gateway
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key gateway-arn)
   (common-lisp:declare (common-lisp:ignorable gateway-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-gateway-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'storagegateway-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "DeleteGateway"
                                                        "2013-06-30"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'delete-gateway))
(common-lisp:progn
 (common-lisp:defun delete-snapshot-schedule
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key volume-arn)
   (common-lisp:declare (common-lisp:ignorable volume-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-snapshot-schedule-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'storagegateway-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "DeleteSnapshotSchedule"
                                                        "2013-06-30"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'delete-snapshot-schedule))
(common-lisp:progn
 (common-lisp:defun delete-tape
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key gateway-arn tape-arn)
   (common-lisp:declare (common-lisp:ignorable gateway-arn tape-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-tape-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'storagegateway-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/" "DeleteTape"
                                                        "2013-06-30"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'delete-tape))
(common-lisp:progn
 (common-lisp:defun delete-tape-archive
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key tape-arn)
   (common-lisp:declare (common-lisp:ignorable tape-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-tape-archive-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'storagegateway-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "DeleteTapeArchive"
                                                        "2013-06-30"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'delete-tape-archive))
(common-lisp:progn
 (common-lisp:defun delete-volume
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key volume-arn)
   (common-lisp:declare (common-lisp:ignorable volume-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-volume-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'storagegateway-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "DeleteVolume"
                                                        "2013-06-30"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'delete-volume))
(common-lisp:progn
 (common-lisp:defun describe-bandwidth-rate-limit
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key gateway-arn)
   (common-lisp:declare (common-lisp:ignorable gateway-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-describe-bandwidth-rate-limit-input
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'storagegateway-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "DescribeBandwidthRateLimit"
                                                        "2013-06-30"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'describe-bandwidth-rate-limit))
(common-lisp:progn
 (common-lisp:defun describe-cache
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key gateway-arn)
   (common-lisp:declare (common-lisp:ignorable gateway-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-describe-cache-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'storagegateway-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "DescribeCache"
                                                        "2013-06-30"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'describe-cache))
(common-lisp:progn
 (common-lisp:defun describe-cachedi-scsivolumes
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key volume-arns)
   (common-lisp:declare (common-lisp:ignorable volume-arns))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-describe-cachedi-scsivolumes-input
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'storagegateway-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "DescribeCachediSCSIVolumes"
                                                        "2013-06-30"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'describe-cachedi-scsivolumes))
(common-lisp:progn
 (common-lisp:defun describe-chap-credentials
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key target-arn)
   (common-lisp:declare (common-lisp:ignorable target-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-describe-chap-credentials-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'storagegateway-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "DescribeChapCredentials"
                                                        "2013-06-30"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'describe-chap-credentials))
(common-lisp:progn
 (common-lisp:defun describe-gateway-information
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key gateway-arn)
   (common-lisp:declare (common-lisp:ignorable gateway-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-describe-gateway-information-input
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'storagegateway-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "DescribeGatewayInformation"
                                                        "2013-06-30"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'describe-gateway-information))
(common-lisp:progn
 (common-lisp:defun describe-maintenance-start-time
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key gateway-arn)
   (common-lisp:declare (common-lisp:ignorable gateway-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-describe-maintenance-start-time-input
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'storagegateway-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "DescribeMaintenanceStartTime"
                                                        "2013-06-30"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'describe-maintenance-start-time))
(common-lisp:progn
 (common-lisp:defun describe-nfsfile-shares
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key file-share-arnlist)
   (common-lisp:declare (common-lisp:ignorable file-share-arnlist))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-describe-nfsfile-shares-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'storagegateway-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "DescribeNFSFileShares"
                                                        "2013-06-30"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'describe-nfsfile-shares))
(common-lisp:progn
 (common-lisp:defun describe-snapshot-schedule
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key volume-arn)
   (common-lisp:declare (common-lisp:ignorable volume-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-describe-snapshot-schedule-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'storagegateway-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "DescribeSnapshotSchedule"
                                                        "2013-06-30"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'describe-snapshot-schedule))
(common-lisp:progn
 (common-lisp:defun describe-storedi-scsivolumes
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key volume-arns)
   (common-lisp:declare (common-lisp:ignorable volume-arns))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-describe-storedi-scsivolumes-input
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'storagegateway-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "DescribeStorediSCSIVolumes"
                                                        "2013-06-30"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'describe-storedi-scsivolumes))
(common-lisp:progn
 (common-lisp:defun describe-tape-archives
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key tape-arns marker limit)
   (common-lisp:declare (common-lisp:ignorable tape-arns marker limit))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-describe-tape-archives-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'storagegateway-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "DescribeTapeArchives"
                                                        "2013-06-30"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'describe-tape-archives))
(common-lisp:progn
 (common-lisp:defun describe-tape-recovery-points
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key gateway-arn marker limit)
   (common-lisp:declare (common-lisp:ignorable gateway-arn marker limit))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-describe-tape-recovery-points-input
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'storagegateway-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "DescribeTapeRecoveryPoints"
                                                        "2013-06-30"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'describe-tape-recovery-points))
(common-lisp:progn
 (common-lisp:defun describe-tapes
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key gateway-arn tape-arns marker limit)
   (common-lisp:declare
    (common-lisp:ignorable gateway-arn tape-arns marker limit))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-describe-tapes-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'storagegateway-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "DescribeTapes"
                                                        "2013-06-30"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'describe-tapes))
(common-lisp:progn
 (common-lisp:defun describe-upload-buffer
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key gateway-arn)
   (common-lisp:declare (common-lisp:ignorable gateway-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-describe-upload-buffer-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'storagegateway-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "DescribeUploadBuffer"
                                                        "2013-06-30"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'describe-upload-buffer))
(common-lisp:progn
 (common-lisp:defun describe-vtldevices
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key gateway-arn vtldevice-arns marker limit)
   (common-lisp:declare
    (common-lisp:ignorable gateway-arn vtldevice-arns marker limit))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-describe-vtldevices-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'storagegateway-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "DescribeVTLDevices"
                                                        "2013-06-30"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'describe-vtldevices))
(common-lisp:progn
 (common-lisp:defun describe-working-storage
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key gateway-arn)
   (common-lisp:declare (common-lisp:ignorable gateway-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-describe-working-storage-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'storagegateway-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "DescribeWorkingStorage"
                                                        "2013-06-30"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'describe-working-storage))
(common-lisp:progn
 (common-lisp:defun disable-gateway
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key gateway-arn)
   (common-lisp:declare (common-lisp:ignorable gateway-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-disable-gateway-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'storagegateway-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "DisableGateway"
                                                        "2013-06-30"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'disable-gateway))
(common-lisp:progn
 (common-lisp:defun list-file-shares
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key gateway-arn limit marker)
   (common-lisp:declare (common-lisp:ignorable gateway-arn limit marker))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-file-shares-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'storagegateway-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "ListFileShares"
                                                        "2013-06-30"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-file-shares))
(common-lisp:progn
 (common-lisp:defun list-gateways
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key marker limit)
   (common-lisp:declare (common-lisp:ignorable marker limit))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-gateways-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'storagegateway-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "ListGateways"
                                                        "2013-06-30"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-gateways))
(common-lisp:progn
 (common-lisp:defun list-local-disks
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key gateway-arn)
   (common-lisp:declare (common-lisp:ignorable gateway-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-local-disks-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'storagegateway-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "ListLocalDisks"
                                                        "2013-06-30"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-local-disks))
(common-lisp:progn
 (common-lisp:defun list-tags-for-resource
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key resource-arn marker limit)
   (common-lisp:declare (common-lisp:ignorable resource-arn marker limit))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-tags-for-resource-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'storagegateway-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "ListTagsForResource"
                                                        "2013-06-30"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-tags-for-resource))
(common-lisp:progn
 (common-lisp:defun list-tapes
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key tape-arns marker limit)
   (common-lisp:declare (common-lisp:ignorable tape-arns marker limit))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-tapes-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'storagegateway-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/" "ListTapes"
                                                        "2013-06-30"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-tapes))
(common-lisp:progn
 (common-lisp:defun list-volume-initiators
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key volume-arn)
   (common-lisp:declare (common-lisp:ignorable volume-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-volume-initiators-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'storagegateway-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "ListVolumeInitiators"
                                                        "2013-06-30"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-volume-initiators))
(common-lisp:progn
 (common-lisp:defun list-volume-recovery-points
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key gateway-arn)
   (common-lisp:declare (common-lisp:ignorable gateway-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-list-volume-recovery-points-input
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'storagegateway-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "ListVolumeRecoveryPoints"
                                                        "2013-06-30"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-volume-recovery-points))
(common-lisp:progn
 (common-lisp:defun list-volumes
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key gateway-arn marker limit)
   (common-lisp:declare (common-lisp:ignorable gateway-arn marker limit))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-volumes-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'storagegateway-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "ListVolumes"
                                                        "2013-06-30"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-volumes))
(common-lisp:progn
 (common-lisp:defun refresh-cache
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key file-share-arn)
   (common-lisp:declare (common-lisp:ignorable file-share-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-refresh-cache-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'storagegateway-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "RefreshCache"
                                                        "2013-06-30"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'refresh-cache))
(common-lisp:progn
 (common-lisp:defun remove-tags-from-resource
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key resource-arn tag-keys)
   (common-lisp:declare (common-lisp:ignorable resource-arn tag-keys))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-remove-tags-from-resource-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'storagegateway-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "RemoveTagsFromResource"
                                                        "2013-06-30"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'remove-tags-from-resource))
(common-lisp:progn
 (common-lisp:defun reset-cache
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key gateway-arn)
   (common-lisp:declare (common-lisp:ignorable gateway-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-reset-cache-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'storagegateway-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/" "ResetCache"
                                                        "2013-06-30"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'reset-cache))
(common-lisp:progn
 (common-lisp:defun retrieve-tape-archive
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key tape-arn gateway-arn)
   (common-lisp:declare (common-lisp:ignorable tape-arn gateway-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-retrieve-tape-archive-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'storagegateway-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "RetrieveTapeArchive"
                                                        "2013-06-30"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'retrieve-tape-archive))
(common-lisp:progn
 (common-lisp:defun retrieve-tape-recovery-point
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key tape-arn gateway-arn)
   (common-lisp:declare (common-lisp:ignorable tape-arn gateway-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-retrieve-tape-recovery-point-input
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'storagegateway-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "RetrieveTapeRecoveryPoint"
                                                        "2013-06-30"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'retrieve-tape-recovery-point))
(common-lisp:progn
 (common-lisp:defun set-local-console-password
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key gateway-arn local-console-password)
   (common-lisp:declare
    (common-lisp:ignorable gateway-arn local-console-password))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-set-local-console-password-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'storagegateway-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "SetLocalConsolePassword"
                                                        "2013-06-30"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'set-local-console-password))
(common-lisp:progn
 (common-lisp:defun shutdown-gateway
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key gateway-arn)
   (common-lisp:declare (common-lisp:ignorable gateway-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-shutdown-gateway-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'storagegateway-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "ShutdownGateway"
                                                        "2013-06-30"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'shutdown-gateway))
(common-lisp:progn
 (common-lisp:defun start-gateway
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key gateway-arn)
   (common-lisp:declare (common-lisp:ignorable gateway-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-start-gateway-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'storagegateway-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "StartGateway"
                                                        "2013-06-30"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'start-gateway))
(common-lisp:progn
 (common-lisp:defun update-bandwidth-rate-limit
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key gateway-arn
                     average-upload-rate-limit-in-bits-per-sec
                     average-download-rate-limit-in-bits-per-sec)
   (common-lisp:declare
    (common-lisp:ignorable gateway-arn
     average-upload-rate-limit-in-bits-per-sec
     average-download-rate-limit-in-bits-per-sec))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-update-bandwidth-rate-limit-input
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'storagegateway-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "UpdateBandwidthRateLimit"
                                                        "2013-06-30"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'update-bandwidth-rate-limit))
(common-lisp:progn
 (common-lisp:defun update-chap-credentials
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key target-arn
                     secret-to-authenticate-initiator initiator-name
                     secret-to-authenticate-target)
   (common-lisp:declare
    (common-lisp:ignorable target-arn secret-to-authenticate-initiator
     initiator-name secret-to-authenticate-target))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-chap-credentials-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'storagegateway-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "UpdateChapCredentials"
                                                        "2013-06-30"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'update-chap-credentials))
(common-lisp:progn
 (common-lisp:defun update-gateway-information
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key gateway-arn gateway-name
                     gateway-timezone)
   (common-lisp:declare
    (common-lisp:ignorable gateway-arn gateway-name gateway-timezone))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-gateway-information-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'storagegateway-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "UpdateGatewayInformation"
                                                        "2013-06-30"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'update-gateway-information))
(common-lisp:progn
 (common-lisp:defun update-gateway-software-now
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key gateway-arn)
   (common-lisp:declare (common-lisp:ignorable gateway-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-update-gateway-software-now-input
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'storagegateway-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "UpdateGatewaySoftwareNow"
                                                        "2013-06-30"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'update-gateway-software-now))
(common-lisp:progn
 (common-lisp:defun update-maintenance-start-time
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key gateway-arn hour-of-day minute-of-hour
                     day-of-week)
   (common-lisp:declare
    (common-lisp:ignorable gateway-arn hour-of-day minute-of-hour day-of-week))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-update-maintenance-start-time-input
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'storagegateway-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "UpdateMaintenanceStartTime"
                                                        "2013-06-30"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'update-maintenance-start-time))
(common-lisp:progn
 (common-lisp:defun update-nfsfile-share
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key file-share-arn kmsencrypted kmskey
                     nfsfile-share-defaults default-storage-class client-list
                     squash read-only)
   (common-lisp:declare
    (common-lisp:ignorable file-share-arn kmsencrypted kmskey
     nfsfile-share-defaults default-storage-class client-list squash
     read-only))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-nfsfile-share-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'storagegateway-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "UpdateNFSFileShare"
                                                        "2013-06-30"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'update-nfsfile-share))
(common-lisp:progn
 (common-lisp:defun update-snapshot-schedule
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key volume-arn start-at recurrence-in-hours
                     description)
   (common-lisp:declare
    (common-lisp:ignorable volume-arn start-at recurrence-in-hours
     description))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-snapshot-schedule-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'storagegateway-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "UpdateSnapshotSchedule"
                                                        "2013-06-30"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'update-snapshot-schedule))
(common-lisp:progn
 (common-lisp:defun update-vtldevice-type
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key vtldevice-arn device-type)
   (common-lisp:declare (common-lisp:ignorable vtldevice-arn device-type))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-vtldevice-type-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'storagegateway-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "UpdateVTLDeviceType"
                                                        "2013-06-30"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'update-vtldevice-type))
