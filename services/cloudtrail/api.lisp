;; DO NOT EDIT: File is generated by AWS-SDK/GENERATOR.

(common-lisp:defpackage #:aws-sdk/services/cloudtrail/api
  (:use)
  (:nicknames #:aws/cloudtrail)
  (:import-from #:aws-sdk/generator/shape)
  (:import-from #:aws-sdk/generator/operation)
  (:import-from #:aws-sdk/api)
  (:import-from #:aws-sdk/request)
  (:import-from #:aws-sdk/error))
(common-lisp:in-package #:aws-sdk/services/cloudtrail/api)
(common-lisp:progn
 (common-lisp:defclass cloudtrail-request (aws-sdk/request:request)
                       common-lisp:nil
                       (:default-initargs :service "cloudtrail"))
 (common-lisp:export 'cloudtrail-request))
(common-lisp:progn
 (common-lisp:define-condition cloudtrail-error
     (aws-sdk/error:aws-error)
     common-lisp:nil)
 (common-lisp:export 'cloudtrail-error))
(common-lisp:progn
 (common-lisp:defstruct
     (add-tags-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-add-tags-request-"))
   (resource-id (common-lisp:error ":resource-id is required") :type
    (common-lisp:or string common-lisp:null))
   (tags-list common-lisp:nil :type
    (common-lisp:or tags-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'add-tags-request 'make-add-tags-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input add-tags-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input add-tags-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-id))
      (common-lisp:list
       (common-lisp:cons "ResourceId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags-list))
      (common-lisp:list
       (common-lisp:cons "TagsList"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input add-tags-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (add-tags-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-add-tags-response-")))
 (common-lisp:export
  (common-lisp:list 'add-tags-response 'make-add-tags-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input add-tags-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input add-tags-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input add-tags-response))
   common-lisp:nil))
(common-lisp:deftype boolean () 'common-lisp:boolean)
(common-lisp:deftype byte-buffer ()
  '(common-lisp:simple-array (common-lisp:unsigned-byte 8) (common-lisp:*)))
(common-lisp:progn
 (common-lisp:define-condition cloud-trail-arninvalid-exception
     (cloudtrail-error)
     common-lisp:nil)
 (common-lisp:export (common-lisp:list 'cloud-trail-arninvalid-exception)))
(common-lisp:progn
 (common-lisp:define-condition cloud-watch-logs-delivery-unavailable-exception
     (cloudtrail-error)
     common-lisp:nil)
 (common-lisp:export
  (common-lisp:list 'cloud-watch-logs-delivery-unavailable-exception)))
(common-lisp:progn
 (common-lisp:defstruct
     (create-trail-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-trail-request-"))
   (name (common-lisp:error ":name is required") :type
    (common-lisp:or string common-lisp:null))
   (s3bucket-name (common-lisp:error ":s3bucket-name is required") :type
    (common-lisp:or string common-lisp:null))
   (s3key-prefix common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (sns-topic-name common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (include-global-service-events common-lisp:nil :type
    (common-lisp:or boolean common-lisp:null))
   (is-multi-region-trail common-lisp:nil :type
    (common-lisp:or boolean common-lisp:null))
   (enable-log-file-validation common-lisp:nil :type
    (common-lisp:or boolean common-lisp:null))
   (cloud-watch-logs-log-group-arn common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (cloud-watch-logs-role-arn common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (kms-key-id common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-trail-request 'make-create-trail-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input create-trail-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input create-trail-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 's3bucket-name))
      (common-lisp:list
       (common-lisp:cons "S3BucketName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 's3key-prefix))
      (common-lisp:list
       (common-lisp:cons "S3KeyPrefix"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'sns-topic-name))
      (common-lisp:list
       (common-lisp:cons "SnsTopicName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'include-global-service-events))
      (common-lisp:list
       (common-lisp:cons "IncludeGlobalServiceEvents"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'is-multi-region-trail))
      (common-lisp:list
       (common-lisp:cons "IsMultiRegionTrail"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'enable-log-file-validation))
      (common-lisp:list
       (common-lisp:cons "EnableLogFileValidation"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'cloud-watch-logs-log-group-arn))
      (common-lisp:list
       (common-lisp:cons "CloudWatchLogsLogGroupArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'cloud-watch-logs-role-arn))
      (common-lisp:list
       (common-lisp:cons "CloudWatchLogsRoleArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'kms-key-id))
      (common-lisp:list
       (common-lisp:cons "KmsKeyId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input create-trail-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-trail-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-trail-response-"))
   (name common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (s3bucket-name common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (s3key-prefix common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (sns-topic-name common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (sns-topic-arn common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (include-global-service-events common-lisp:nil :type
    (common-lisp:or boolean common-lisp:null))
   (is-multi-region-trail common-lisp:nil :type
    (common-lisp:or boolean common-lisp:null))
   (trail-arn common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (log-file-validation-enabled common-lisp:nil :type
    (common-lisp:or boolean common-lisp:null))
   (cloud-watch-logs-log-group-arn common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (cloud-watch-logs-role-arn common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (kms-key-id common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-trail-response 'make-create-trail-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-trail-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-trail-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 's3bucket-name))
      (common-lisp:list
       (common-lisp:cons "S3BucketName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 's3key-prefix))
      (common-lisp:list
       (common-lisp:cons "S3KeyPrefix"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'sns-topic-name))
      (common-lisp:list
       (common-lisp:cons "SnsTopicName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'sns-topic-arn))
      (common-lisp:list
       (common-lisp:cons "SnsTopicARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'include-global-service-events))
      (common-lisp:list
       (common-lisp:cons "IncludeGlobalServiceEvents"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'is-multi-region-trail))
      (common-lisp:list
       (common-lisp:cons "IsMultiRegionTrail"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'trail-arn))
      (common-lisp:list
       (common-lisp:cons "TrailARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'log-file-validation-enabled))
      (common-lisp:list
       (common-lisp:cons "LogFileValidationEnabled"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'cloud-watch-logs-log-group-arn))
      (common-lisp:list
       (common-lisp:cons "CloudWatchLogsLogGroupArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'cloud-watch-logs-role-arn))
      (common-lisp:list
       (common-lisp:cons "CloudWatchLogsRoleArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'kms-key-id))
      (common-lisp:list
       (common-lisp:cons "KmsKeyId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-trail-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (data-resource (:copier common-lisp:nil)
      (:conc-name "struct-shape-data-resource-"))
   (type common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (values common-lisp:nil :type
    (common-lisp:or data-resource-values common-lisp:null)))
 (common-lisp:export (common-lisp:list 'data-resource 'make-data-resource))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input data-resource))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input data-resource))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'type))
      (common-lisp:list
       (common-lisp:cons "Type"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'values))
      (common-lisp:list
       (common-lisp:cons "Values"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input data-resource))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype data-resource-values ()
   '(trivial-types:proper-list string))
 (common-lisp:defun |make-data-resource-values|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list string))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype data-resources ()
   '(trivial-types:proper-list data-resource))
 (common-lisp:defun |make-data-resources|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list data-resource))
   aws-sdk/generator/shape::members))
(common-lisp:deftype date () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (delete-trail-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-trail-request-"))
   (name (common-lisp:error ":name is required") :type
    (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-trail-request 'make-delete-trail-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input delete-trail-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input delete-trail-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input delete-trail-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-trail-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-trail-response-")))
 (common-lisp:export
  (common-lisp:list 'delete-trail-response 'make-delete-trail-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-trail-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-trail-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-trail-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-trails-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-describe-trails-request-"))
   (trail-name-list common-lisp:nil :type
    (common-lisp:or trail-name-list common-lisp:null))
   (include-shadow-trails common-lisp:nil :type
    (common-lisp:or boolean common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-trails-request 'make-describe-trails-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-trails-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-trails-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'trail-name-list))
      (common-lisp:list
       (common-lisp:cons "trailNameList"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'include-shadow-trails))
      (common-lisp:list
       (common-lisp:cons "includeShadowTrails"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-trails-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-trails-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-describe-trails-response-"))
   (trail-list common-lisp:nil :type
    (common-lisp:or trail-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-trails-response 'make-describe-trails-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-trails-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-trails-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'trail-list))
      (common-lisp:list
       (common-lisp:cons "trailList"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-trails-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (event (:copier common-lisp:nil) (:conc-name "struct-shape-event-"))
   (event-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (event-name common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (event-time common-lisp:nil :type (common-lisp:or date common-lisp:null))
   (event-source common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (username common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (resources common-lisp:nil :type
    (common-lisp:or resource-list common-lisp:null))
   (cloud-trail-event common-lisp:nil :type
    (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'event 'make-event))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input event))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input event))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'event-id))
      (common-lisp:list
       (common-lisp:cons "EventId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'event-name))
      (common-lisp:list
       (common-lisp:cons "EventName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'event-time))
      (common-lisp:list
       (common-lisp:cons "EventTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'event-source))
      (common-lisp:list
       (common-lisp:cons "EventSource"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'username))
      (common-lisp:list
       (common-lisp:cons "Username"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resources))
      (common-lisp:list
       (common-lisp:cons "Resources"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'cloud-trail-event))
      (common-lisp:list
       (common-lisp:cons "CloudTrailEvent"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input event))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (event-selector (:copier common-lisp:nil)
      (:conc-name "struct-shape-event-selector-"))
   (read-write-type common-lisp:nil :type
    (common-lisp:or read-write-type common-lisp:null))
   (include-management-events common-lisp:nil :type
    (common-lisp:or boolean common-lisp:null))
   (data-resources common-lisp:nil :type
    (common-lisp:or data-resources common-lisp:null)))
 (common-lisp:export (common-lisp:list 'event-selector 'make-event-selector))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input event-selector))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input event-selector))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'read-write-type))
      (common-lisp:list
       (common-lisp:cons "ReadWriteType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'include-management-events))
      (common-lisp:list
       (common-lisp:cons "IncludeManagementEvents"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'data-resources))
      (common-lisp:list
       (common-lisp:cons "DataResources"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input event-selector))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype event-selectors ()
   '(trivial-types:proper-list event-selector))
 (common-lisp:defun |make-event-selectors|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list event-selector))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype events-list () '(trivial-types:proper-list event))
 (common-lisp:defun |make-events-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list event))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (get-event-selectors-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-event-selectors-request-"))
   (trail-name (common-lisp:error ":trail-name is required") :type
    (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-event-selectors-request
                    'make-get-event-selectors-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-event-selectors-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-event-selectors-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'trail-name))
      (common-lisp:list
       (common-lisp:cons "TrailName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-event-selectors-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-event-selectors-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-event-selectors-response-"))
   (trail-arn common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (event-selectors common-lisp:nil :type
    (common-lisp:or event-selectors common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-event-selectors-response
                    'make-get-event-selectors-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-event-selectors-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-event-selectors-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'trail-arn))
      (common-lisp:list
       (common-lisp:cons "TrailARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'event-selectors))
      (common-lisp:list
       (common-lisp:cons "EventSelectors"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-event-selectors-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-trail-status-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-trail-status-request-"))
   (name (common-lisp:error ":name is required") :type
    (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-trail-status-request 'make-get-trail-status-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-trail-status-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-trail-status-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-trail-status-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (get-trail-status-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-get-trail-status-response-"))
   (is-logging common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (latest-delivery-error common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (latest-notification-error common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (latest-delivery-time common-lisp:nil :type
    (common-lisp:or date common-lisp:null))
   (latest-notification-time common-lisp:nil :type
    (common-lisp:or date common-lisp:null))
   (start-logging-time common-lisp:nil :type
    (common-lisp:or date common-lisp:null))
   (stop-logging-time common-lisp:nil :type
    (common-lisp:or date common-lisp:null))
   (latest-cloud-watch-logs-delivery-error common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (latest-cloud-watch-logs-delivery-time common-lisp:nil :type
    (common-lisp:or date common-lisp:null))
   (latest-digest-delivery-time common-lisp:nil :type
    (common-lisp:or date common-lisp:null))
   (latest-digest-delivery-error common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (latest-delivery-attempt-time common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (latest-notification-attempt-time common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (latest-notification-attempt-succeeded common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (latest-delivery-attempt-succeeded common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (time-logging-started common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (time-logging-stopped common-lisp:nil :type
    (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-trail-status-response
                    'make-get-trail-status-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-trail-status-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-trail-status-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'is-logging))
      (common-lisp:list
       (common-lisp:cons "IsLogging"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'latest-delivery-error))
      (common-lisp:list
       (common-lisp:cons "LatestDeliveryError"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'latest-notification-error))
      (common-lisp:list
       (common-lisp:cons "LatestNotificationError"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'latest-delivery-time))
      (common-lisp:list
       (common-lisp:cons "LatestDeliveryTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'latest-notification-time))
      (common-lisp:list
       (common-lisp:cons "LatestNotificationTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'start-logging-time))
      (common-lisp:list
       (common-lisp:cons "StartLoggingTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'stop-logging-time))
      (common-lisp:list
       (common-lisp:cons "StopLoggingTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'latest-cloud-watch-logs-delivery-error))
      (common-lisp:list
       (common-lisp:cons "LatestCloudWatchLogsDeliveryError"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'latest-cloud-watch-logs-delivery-time))
      (common-lisp:list
       (common-lisp:cons "LatestCloudWatchLogsDeliveryTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'latest-digest-delivery-time))
      (common-lisp:list
       (common-lisp:cons "LatestDigestDeliveryTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'latest-digest-delivery-error))
      (common-lisp:list
       (common-lisp:cons "LatestDigestDeliveryError"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'latest-delivery-attempt-time))
      (common-lisp:list
       (common-lisp:cons "LatestDeliveryAttemptTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'latest-notification-attempt-time))
      (common-lisp:list
       (common-lisp:cons "LatestNotificationAttemptTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'latest-notification-attempt-succeeded))
      (common-lisp:list
       (common-lisp:cons "LatestNotificationAttemptSucceeded"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'latest-delivery-attempt-succeeded))
      (common-lisp:list
       (common-lisp:cons "LatestDeliveryAttemptSucceeded"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'time-logging-started))
      (common-lisp:list
       (common-lisp:cons "TimeLoggingStarted"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'time-logging-stopped))
      (common-lisp:list
       (common-lisp:cons "TimeLoggingStopped"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-trail-status-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:define-condition insufficient-encryption-policy-exception
     (cloudtrail-error)
     common-lisp:nil)
 (common-lisp:export
  (common-lisp:list 'insufficient-encryption-policy-exception)))
(common-lisp:progn
 (common-lisp:define-condition insufficient-s3bucket-policy-exception
     (cloudtrail-error)
     common-lisp:nil)
 (common-lisp:export
  (common-lisp:list 'insufficient-s3bucket-policy-exception)))
(common-lisp:progn
 (common-lisp:define-condition insufficient-sns-topic-policy-exception
     (cloudtrail-error)
     common-lisp:nil)
 (common-lisp:export
  (common-lisp:list 'insufficient-sns-topic-policy-exception)))
(common-lisp:progn
 (common-lisp:define-condition invalid-cloud-watch-logs-log-group-arn-exception
     (cloudtrail-error)
     common-lisp:nil)
 (common-lisp:export
  (common-lisp:list 'invalid-cloud-watch-logs-log-group-arn-exception)))
(common-lisp:progn
 (common-lisp:define-condition invalid-cloud-watch-logs-role-arn-exception
     (cloudtrail-error)
     common-lisp:nil)
 (common-lisp:export
  (common-lisp:list 'invalid-cloud-watch-logs-role-arn-exception)))
(common-lisp:progn
 (common-lisp:define-condition invalid-event-selectors-exception
     (cloudtrail-error)
     common-lisp:nil)
 (common-lisp:export (common-lisp:list 'invalid-event-selectors-exception)))
(common-lisp:progn
 (common-lisp:define-condition invalid-home-region-exception
     (cloudtrail-error)
     common-lisp:nil)
 (common-lisp:export (common-lisp:list 'invalid-home-region-exception)))
(common-lisp:progn
 (common-lisp:define-condition invalid-kms-key-id-exception
     (cloudtrail-error)
     common-lisp:nil)
 (common-lisp:export (common-lisp:list 'invalid-kms-key-id-exception)))
(common-lisp:progn
 (common-lisp:define-condition invalid-lookup-attributes-exception
     (cloudtrail-error)
     common-lisp:nil)
 (common-lisp:export (common-lisp:list 'invalid-lookup-attributes-exception)))
(common-lisp:progn
 (common-lisp:define-condition invalid-max-results-exception
     (cloudtrail-error)
     common-lisp:nil)
 (common-lisp:export (common-lisp:list 'invalid-max-results-exception)))
(common-lisp:progn
 (common-lisp:define-condition invalid-next-token-exception
     (cloudtrail-error)
     common-lisp:nil)
 (common-lisp:export (common-lisp:list 'invalid-next-token-exception)))
(common-lisp:progn
 (common-lisp:define-condition invalid-parameter-combination-exception
     (cloudtrail-error)
     common-lisp:nil)
 (common-lisp:export
  (common-lisp:list 'invalid-parameter-combination-exception)))
(common-lisp:progn
 (common-lisp:define-condition invalid-s3bucket-name-exception
     (cloudtrail-error)
     common-lisp:nil)
 (common-lisp:export (common-lisp:list 'invalid-s3bucket-name-exception)))
(common-lisp:progn
 (common-lisp:define-condition invalid-s3prefix-exception
     (cloudtrail-error)
     common-lisp:nil)
 (common-lisp:export (common-lisp:list 'invalid-s3prefix-exception)))
(common-lisp:progn
 (common-lisp:define-condition invalid-sns-topic-name-exception
     (cloudtrail-error)
     common-lisp:nil)
 (common-lisp:export (common-lisp:list 'invalid-sns-topic-name-exception)))
(common-lisp:progn
 (common-lisp:define-condition invalid-tag-parameter-exception
     (cloudtrail-error)
     common-lisp:nil)
 (common-lisp:export (common-lisp:list 'invalid-tag-parameter-exception)))
(common-lisp:progn
 (common-lisp:define-condition invalid-time-range-exception
     (cloudtrail-error)
     common-lisp:nil)
 (common-lisp:export (common-lisp:list 'invalid-time-range-exception)))
(common-lisp:progn
 (common-lisp:define-condition invalid-token-exception
     (cloudtrail-error)
     common-lisp:nil)
 (common-lisp:export (common-lisp:list 'invalid-token-exception)))
(common-lisp:progn
 (common-lisp:define-condition invalid-trail-name-exception
     (cloudtrail-error)
     common-lisp:nil)
 (common-lisp:export (common-lisp:list 'invalid-trail-name-exception)))
(common-lisp:progn
 (common-lisp:define-condition kms-exception
     (cloudtrail-error)
     common-lisp:nil)
 (common-lisp:export (common-lisp:list 'kms-exception)))
(common-lisp:progn
 (common-lisp:define-condition kms-key-disabled-exception
     (cloudtrail-error)
     common-lisp:nil)
 (common-lisp:export (common-lisp:list 'kms-key-disabled-exception)))
(common-lisp:progn
 (common-lisp:define-condition kms-key-not-found-exception
     (cloudtrail-error)
     common-lisp:nil)
 (common-lisp:export (common-lisp:list 'kms-key-not-found-exception)))
(common-lisp:progn
 (common-lisp:defstruct
     (list-public-keys-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-public-keys-request-"))
   (start-time common-lisp:nil :type (common-lisp:or date common-lisp:null))
   (end-time common-lisp:nil :type (common-lisp:or date common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-public-keys-request 'make-list-public-keys-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-public-keys-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-public-keys-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'start-time))
      (common-lisp:list
       (common-lisp:cons "StartTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'end-time))
      (common-lisp:list
       (common-lisp:cons "EndTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-public-keys-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-public-keys-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-public-keys-response-"))
   (public-key-list common-lisp:nil :type
    (common-lisp:or public-key-list common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-public-keys-response
                    'make-list-public-keys-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-public-keys-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-public-keys-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'public-key-list))
      (common-lisp:list
       (common-lisp:cons "PublicKeyList"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-public-keys-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-tags-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-tags-request-"))
   (resource-id-list (common-lisp:error ":resource-id-list is required") :type
    (common-lisp:or resource-id-list common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-tags-request 'make-list-tags-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input list-tags-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input list-tags-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-id-list))
      (common-lisp:list
       (common-lisp:cons "ResourceIdList"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input list-tags-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-tags-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-tags-response-"))
   (resource-tag-list common-lisp:nil :type
    (common-lisp:or resource-tag-list common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-tags-response 'make-list-tags-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input list-tags-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input list-tags-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-tag-list))
      (common-lisp:list
       (common-lisp:cons "ResourceTagList"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input list-tags-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (lookup-attribute (:copier common-lisp:nil)
      (:conc-name "struct-shape-lookup-attribute-"))
   (attribute-key (common-lisp:error ":attribute-key is required") :type
    (common-lisp:or lookup-attribute-key common-lisp:null))
   (attribute-value (common-lisp:error ":attribute-value is required") :type
    (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'lookup-attribute 'make-lookup-attribute))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input lookup-attribute))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input lookup-attribute))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'attribute-key))
      (common-lisp:list
       (common-lisp:cons "AttributeKey"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'attribute-value))
      (common-lisp:list
       (common-lisp:cons "AttributeValue"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input lookup-attribute))
   common-lisp:nil))
(common-lisp:deftype lookup-attribute-key () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype lookup-attributes-list ()
   '(trivial-types:proper-list lookup-attribute))
 (common-lisp:defun |make-lookup-attributes-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list lookup-attribute))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (lookup-events-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-lookup-events-request-"))
   (lookup-attributes common-lisp:nil :type
    (common-lisp:or lookup-attributes-list common-lisp:null))
   (start-time common-lisp:nil :type (common-lisp:or date common-lisp:null))
   (end-time common-lisp:nil :type (common-lisp:or date common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or max-results common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'lookup-events-request 'make-lookup-events-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          lookup-events-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          lookup-events-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'lookup-attributes))
      (common-lisp:list
       (common-lisp:cons "LookupAttributes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'start-time))
      (common-lisp:list
       (common-lisp:cons "StartTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'end-time))
      (common-lisp:list
       (common-lisp:cons "EndTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-results))
      (common-lisp:list
       (common-lisp:cons "MaxResults"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          lookup-events-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (lookup-events-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-lookup-events-response-"))
   (events common-lisp:nil :type (common-lisp:or events-list common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'lookup-events-response 'make-lookup-events-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          lookup-events-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          lookup-events-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'events))
      (common-lisp:list
       (common-lisp:cons "Events"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          lookup-events-response))
   common-lisp:nil))
(common-lisp:deftype max-results () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:define-condition maximum-number-of-trails-exceeded-exception
     (cloudtrail-error)
     common-lisp:nil)
 (common-lisp:export
  (common-lisp:list 'maximum-number-of-trails-exceeded-exception)))
(common-lisp:deftype next-token () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:define-condition operation-not-permitted-exception
     (cloudtrail-error)
     common-lisp:nil)
 (common-lisp:export (common-lisp:list 'operation-not-permitted-exception)))
(common-lisp:progn
 (common-lisp:defstruct
     (public-key (:copier common-lisp:nil)
      (:conc-name "struct-shape-public-key-"))
   (value common-lisp:nil :type (common-lisp:or byte-buffer common-lisp:null))
   (validity-start-time common-lisp:nil :type
    (common-lisp:or date common-lisp:null))
   (validity-end-time common-lisp:nil :type
    (common-lisp:or date common-lisp:null))
   (fingerprint common-lisp:nil :type
    (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'public-key 'make-public-key))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input public-key))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input public-key))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'value))
      (common-lisp:list
       (common-lisp:cons "Value"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'validity-start-time))
      (common-lisp:list
       (common-lisp:cons "ValidityStartTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'validity-end-time))
      (common-lisp:list
       (common-lisp:cons "ValidityEndTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'fingerprint))
      (common-lisp:list
       (common-lisp:cons "Fingerprint"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input public-key))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype public-key-list ()
   '(trivial-types:proper-list public-key))
 (common-lisp:defun |make-public-key-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list public-key))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (put-event-selectors-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-put-event-selectors-request-"))
   (trail-name (common-lisp:error ":trail-name is required") :type
    (common-lisp:or string common-lisp:null))
   (event-selectors (common-lisp:error ":event-selectors is required") :type
    (common-lisp:or event-selectors common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'put-event-selectors-request
                    'make-put-event-selectors-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          put-event-selectors-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          put-event-selectors-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'trail-name))
      (common-lisp:list
       (common-lisp:cons "TrailName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'event-selectors))
      (common-lisp:list
       (common-lisp:cons "EventSelectors"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          put-event-selectors-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (put-event-selectors-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-put-event-selectors-response-"))
   (trail-arn common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (event-selectors common-lisp:nil :type
    (common-lisp:or event-selectors common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'put-event-selectors-response
                    'make-put-event-selectors-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          put-event-selectors-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          put-event-selectors-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'trail-arn))
      (common-lisp:list
       (common-lisp:cons "TrailARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'event-selectors))
      (common-lisp:list
       (common-lisp:cons "EventSelectors"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          put-event-selectors-response))
   common-lisp:nil))
(common-lisp:deftype read-write-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (remove-tags-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-remove-tags-request-"))
   (resource-id (common-lisp:error ":resource-id is required") :type
    (common-lisp:or string common-lisp:null))
   (tags-list common-lisp:nil :type
    (common-lisp:or tags-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'remove-tags-request 'make-remove-tags-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input remove-tags-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input remove-tags-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-id))
      (common-lisp:list
       (common-lisp:cons "ResourceId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags-list))
      (common-lisp:list
       (common-lisp:cons "TagsList"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input remove-tags-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (remove-tags-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-remove-tags-response-")))
 (common-lisp:export
  (common-lisp:list 'remove-tags-response 'make-remove-tags-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input remove-tags-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input remove-tags-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input remove-tags-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (resource (:copier common-lisp:nil) (:conc-name "struct-shape-resource-"))
   (resource-type common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (resource-name common-lisp:nil :type
    (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'resource 'make-resource))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input resource))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input resource))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-type))
      (common-lisp:list
       (common-lisp:cons "ResourceType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-name))
      (common-lisp:list
       (common-lisp:cons "ResourceName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input resource))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype resource-id-list () '(trivial-types:proper-list string))
 (common-lisp:defun |make-resource-id-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list string))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype resource-list () '(trivial-types:proper-list resource))
 (common-lisp:defun |make-resource-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list resource))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:define-condition resource-not-found-exception
     (cloudtrail-error)
     common-lisp:nil)
 (common-lisp:export (common-lisp:list 'resource-not-found-exception)))
(common-lisp:progn
 (common-lisp:defstruct
     (resource-tag (:copier common-lisp:nil)
      (:conc-name "struct-shape-resource-tag-"))
   (resource-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (tags-list common-lisp:nil :type
    (common-lisp:or tags-list common-lisp:null)))
 (common-lisp:export (common-lisp:list 'resource-tag 'make-resource-tag))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input resource-tag))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input resource-tag))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-id))
      (common-lisp:list
       (common-lisp:cons "ResourceId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags-list))
      (common-lisp:list
       (common-lisp:cons "TagsList"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input resource-tag))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype resource-tag-list ()
   '(trivial-types:proper-list resource-tag))
 (common-lisp:defun |make-resource-tag-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list resource-tag))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:define-condition resource-type-not-supported-exception
     (cloudtrail-error)
     common-lisp:nil)
 (common-lisp:export (common-lisp:list 'resource-type-not-supported-exception)))
(common-lisp:progn
 (common-lisp:define-condition s3bucket-does-not-exist-exception
     (cloudtrail-error)
     common-lisp:nil)
 (common-lisp:export (common-lisp:list 's3bucket-does-not-exist-exception)))
(common-lisp:progn
 (common-lisp:defstruct
     (start-logging-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-start-logging-request-"))
   (name (common-lisp:error ":name is required") :type
    (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'start-logging-request 'make-start-logging-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          start-logging-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          start-logging-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          start-logging-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (start-logging-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-start-logging-response-")))
 (common-lisp:export
  (common-lisp:list 'start-logging-response 'make-start-logging-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          start-logging-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          start-logging-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          start-logging-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (stop-logging-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-stop-logging-request-"))
   (name (common-lisp:error ":name is required") :type
    (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'stop-logging-request 'make-stop-logging-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input stop-logging-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input stop-logging-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input stop-logging-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (stop-logging-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-stop-logging-response-")))
 (common-lisp:export
  (common-lisp:list 'stop-logging-response 'make-stop-logging-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          stop-logging-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          stop-logging-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          stop-logging-response))
   common-lisp:nil))
(common-lisp:deftype string () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (tag (:copier common-lisp:nil) (:conc-name "struct-shape-tag-"))
   (key (common-lisp:error ":key is required") :type
    (common-lisp:or string common-lisp:null))
   (value common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'tag 'make-tag))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input tag))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input tag))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'key))
      (common-lisp:list
       (common-lisp:cons "Key"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'value))
      (common-lisp:list
       (common-lisp:cons "Value"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input tag))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:define-condition tags-limit-exceeded-exception
     (cloudtrail-error)
     common-lisp:nil)
 (common-lisp:export (common-lisp:list 'tags-limit-exceeded-exception)))
(common-lisp:progn
 (common-lisp:deftype tags-list () '(trivial-types:proper-list tag))
 (common-lisp:defun |make-tags-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list tag))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (trail (:copier common-lisp:nil) (:conc-name "struct-shape-trail-"))
   (name common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (s3bucket-name common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (s3key-prefix common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (sns-topic-name common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (sns-topic-arn common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (include-global-service-events common-lisp:nil :type
    (common-lisp:or boolean common-lisp:null))
   (is-multi-region-trail common-lisp:nil :type
    (common-lisp:or boolean common-lisp:null))
   (home-region common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (trail-arn common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (log-file-validation-enabled common-lisp:nil :type
    (common-lisp:or boolean common-lisp:null))
   (cloud-watch-logs-log-group-arn common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (cloud-watch-logs-role-arn common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (kms-key-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (has-custom-event-selectors common-lisp:nil :type
    (common-lisp:or boolean common-lisp:null)))
 (common-lisp:export (common-lisp:list 'trail 'make-trail))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input trail))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input trail))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 's3bucket-name))
      (common-lisp:list
       (common-lisp:cons "S3BucketName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 's3key-prefix))
      (common-lisp:list
       (common-lisp:cons "S3KeyPrefix"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'sns-topic-name))
      (common-lisp:list
       (common-lisp:cons "SnsTopicName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'sns-topic-arn))
      (common-lisp:list
       (common-lisp:cons "SnsTopicARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'include-global-service-events))
      (common-lisp:list
       (common-lisp:cons "IncludeGlobalServiceEvents"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'is-multi-region-trail))
      (common-lisp:list
       (common-lisp:cons "IsMultiRegionTrail"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'home-region))
      (common-lisp:list
       (common-lisp:cons "HomeRegion"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'trail-arn))
      (common-lisp:list
       (common-lisp:cons "TrailARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'log-file-validation-enabled))
      (common-lisp:list
       (common-lisp:cons "LogFileValidationEnabled"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'cloud-watch-logs-log-group-arn))
      (common-lisp:list
       (common-lisp:cons "CloudWatchLogsLogGroupArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'cloud-watch-logs-role-arn))
      (common-lisp:list
       (common-lisp:cons "CloudWatchLogsRoleArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'kms-key-id))
      (common-lisp:list
       (common-lisp:cons "KmsKeyId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'has-custom-event-selectors))
      (common-lisp:list
       (common-lisp:cons "HasCustomEventSelectors"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input trail))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:define-condition trail-already-exists-exception
     (cloudtrail-error)
     common-lisp:nil)
 (common-lisp:export (common-lisp:list 'trail-already-exists-exception)))
(common-lisp:progn
 (common-lisp:deftype trail-list () '(trivial-types:proper-list trail))
 (common-lisp:defun |make-trail-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list trail))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype trail-name-list () '(trivial-types:proper-list string))
 (common-lisp:defun |make-trail-name-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list string))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:define-condition trail-not-found-exception
     (cloudtrail-error)
     common-lisp:nil)
 (common-lisp:export (common-lisp:list 'trail-not-found-exception)))
(common-lisp:progn
 (common-lisp:define-condition trail-not-provided-exception
     (cloudtrail-error)
     common-lisp:nil)
 (common-lisp:export (common-lisp:list 'trail-not-provided-exception)))
(common-lisp:progn
 (common-lisp:define-condition unsupported-operation-exception
     (cloudtrail-error)
     common-lisp:nil)
 (common-lisp:export (common-lisp:list 'unsupported-operation-exception)))
(common-lisp:progn
 (common-lisp:defstruct
     (update-trail-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-trail-request-"))
   (name (common-lisp:error ":name is required") :type
    (common-lisp:or string common-lisp:null))
   (s3bucket-name common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (s3key-prefix common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (sns-topic-name common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (include-global-service-events common-lisp:nil :type
    (common-lisp:or boolean common-lisp:null))
   (is-multi-region-trail common-lisp:nil :type
    (common-lisp:or boolean common-lisp:null))
   (enable-log-file-validation common-lisp:nil :type
    (common-lisp:or boolean common-lisp:null))
   (cloud-watch-logs-log-group-arn common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (cloud-watch-logs-role-arn common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (kms-key-id common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-trail-request 'make-update-trail-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input update-trail-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input update-trail-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 's3bucket-name))
      (common-lisp:list
       (common-lisp:cons "S3BucketName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 's3key-prefix))
      (common-lisp:list
       (common-lisp:cons "S3KeyPrefix"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'sns-topic-name))
      (common-lisp:list
       (common-lisp:cons "SnsTopicName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'include-global-service-events))
      (common-lisp:list
       (common-lisp:cons "IncludeGlobalServiceEvents"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'is-multi-region-trail))
      (common-lisp:list
       (common-lisp:cons "IsMultiRegionTrail"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'enable-log-file-validation))
      (common-lisp:list
       (common-lisp:cons "EnableLogFileValidation"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'cloud-watch-logs-log-group-arn))
      (common-lisp:list
       (common-lisp:cons "CloudWatchLogsLogGroupArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'cloud-watch-logs-role-arn))
      (common-lisp:list
       (common-lisp:cons "CloudWatchLogsRoleArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'kms-key-id))
      (common-lisp:list
       (common-lisp:cons "KmsKeyId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input update-trail-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-trail-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-trail-response-"))
   (name common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (s3bucket-name common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (s3key-prefix common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (sns-topic-name common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (sns-topic-arn common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (include-global-service-events common-lisp:nil :type
    (common-lisp:or boolean common-lisp:null))
   (is-multi-region-trail common-lisp:nil :type
    (common-lisp:or boolean common-lisp:null))
   (trail-arn common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (log-file-validation-enabled common-lisp:nil :type
    (common-lisp:or boolean common-lisp:null))
   (cloud-watch-logs-log-group-arn common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (cloud-watch-logs-role-arn common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (kms-key-id common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-trail-response 'make-update-trail-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-trail-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-trail-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 's3bucket-name))
      (common-lisp:list
       (common-lisp:cons "S3BucketName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 's3key-prefix))
      (common-lisp:list
       (common-lisp:cons "S3KeyPrefix"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'sns-topic-name))
      (common-lisp:list
       (common-lisp:cons "SnsTopicName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'sns-topic-arn))
      (common-lisp:list
       (common-lisp:cons "SnsTopicARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'include-global-service-events))
      (common-lisp:list
       (common-lisp:cons "IncludeGlobalServiceEvents"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'is-multi-region-trail))
      (common-lisp:list
       (common-lisp:cons "IsMultiRegionTrail"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'trail-arn))
      (common-lisp:list
       (common-lisp:cons "TrailARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'log-file-validation-enabled))
      (common-lisp:list
       (common-lisp:cons "LogFileValidationEnabled"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'cloud-watch-logs-log-group-arn))
      (common-lisp:list
       (common-lisp:cons "CloudWatchLogsLogGroupArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'cloud-watch-logs-role-arn))
      (common-lisp:list
       (common-lisp:cons "CloudWatchLogsRoleArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'kms-key-id))
      (common-lisp:list
       (common-lisp:cons "KmsKeyId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-trail-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defun add-tags
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key resource-id tags-list)
   (common-lisp:declare (common-lisp:ignorable resource-id tags-list))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-add-tags-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'cloudtrail-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/" "AddTags"
                                                        "2013-11-01"))
      common-lisp:nil common-lisp:nil
      '(("CloudTrailARNInvalidException" . cloud-trail-arninvalid-exception)
        ("CloudWatchLogsDeliveryUnavailableException"
         . cloud-watch-logs-delivery-unavailable-exception)
        ("InsufficientEncryptionPolicyException"
         . insufficient-encryption-policy-exception)
        ("InsufficientS3BucketPolicyException"
         . insufficient-s3bucket-policy-exception)
        ("InsufficientSnsTopicPolicyException"
         . insufficient-sns-topic-policy-exception)
        ("InvalidCloudWatchLogsLogGroupArnException"
         . invalid-cloud-watch-logs-log-group-arn-exception)
        ("InvalidCloudWatchLogsRoleArnException"
         . invalid-cloud-watch-logs-role-arn-exception)
        ("InvalidEventSelectorsException" . invalid-event-selectors-exception)
        ("InvalidHomeRegionException" . invalid-home-region-exception)
        ("InvalidKmsKeyIdException" . invalid-kms-key-id-exception)
        ("InvalidLookupAttributesException"
         . invalid-lookup-attributes-exception)
        ("InvalidMaxResultsException" . invalid-max-results-exception)
        ("InvalidNextTokenException" . invalid-next-token-exception)
        ("InvalidParameterCombinationException"
         . invalid-parameter-combination-exception)
        ("InvalidS3BucketNameException" . invalid-s3bucket-name-exception)
        ("InvalidS3PrefixException" . invalid-s3prefix-exception)
        ("InvalidSnsTopicNameException" . invalid-sns-topic-name-exception)
        ("InvalidTagParameterException" . invalid-tag-parameter-exception)
        ("InvalidTimeRangeException" . invalid-time-range-exception)
        ("InvalidTokenException" . invalid-token-exception)
        ("InvalidTrailNameException" . invalid-trail-name-exception)
        ("KmsException" . kms-exception)
        ("KmsKeyDisabledException" . kms-key-disabled-exception)
        ("KmsKeyNotFoundException" . kms-key-not-found-exception)
        ("MaximumNumberOfTrailsExceededException"
         . maximum-number-of-trails-exceeded-exception)
        ("OperationNotPermittedException" . operation-not-permitted-exception)
        ("ResourceNotFoundException" . resource-not-found-exception)
        ("ResourceTypeNotSupportedException"
         . resource-type-not-supported-exception)
        ("S3BucketDoesNotExistException" . s3bucket-does-not-exist-exception)
        ("TagsLimitExceededException" . tags-limit-exceeded-exception)
        ("TrailAlreadyExistsException" . trail-already-exists-exception)
        ("TrailNotFoundException" . trail-not-found-exception)
        ("TrailNotProvidedException" . trail-not-provided-exception)
        ("UnsupportedOperationException" . unsupported-operation-exception)))))
 (common-lisp:export 'add-tags))
(common-lisp:progn
 (common-lisp:defun create-trail
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key name s3bucket-name s3key-prefix
                     sns-topic-name include-global-service-events
                     is-multi-region-trail enable-log-file-validation
                     cloud-watch-logs-log-group-arn cloud-watch-logs-role-arn
                     kms-key-id)
   (common-lisp:declare
    (common-lisp:ignorable name s3bucket-name s3key-prefix sns-topic-name
     include-global-service-events is-multi-region-trail
     enable-log-file-validation cloud-watch-logs-log-group-arn
     cloud-watch-logs-role-arn kms-key-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-trail-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'cloudtrail-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "CreateTrail"
                                                        "2013-11-01"))
      common-lisp:nil common-lisp:nil
      '(("CloudTrailARNInvalidException" . cloud-trail-arninvalid-exception)
        ("CloudWatchLogsDeliveryUnavailableException"
         . cloud-watch-logs-delivery-unavailable-exception)
        ("InsufficientEncryptionPolicyException"
         . insufficient-encryption-policy-exception)
        ("InsufficientS3BucketPolicyException"
         . insufficient-s3bucket-policy-exception)
        ("InsufficientSnsTopicPolicyException"
         . insufficient-sns-topic-policy-exception)
        ("InvalidCloudWatchLogsLogGroupArnException"
         . invalid-cloud-watch-logs-log-group-arn-exception)
        ("InvalidCloudWatchLogsRoleArnException"
         . invalid-cloud-watch-logs-role-arn-exception)
        ("InvalidEventSelectorsException" . invalid-event-selectors-exception)
        ("InvalidHomeRegionException" . invalid-home-region-exception)
        ("InvalidKmsKeyIdException" . invalid-kms-key-id-exception)
        ("InvalidLookupAttributesException"
         . invalid-lookup-attributes-exception)
        ("InvalidMaxResultsException" . invalid-max-results-exception)
        ("InvalidNextTokenException" . invalid-next-token-exception)
        ("InvalidParameterCombinationException"
         . invalid-parameter-combination-exception)
        ("InvalidS3BucketNameException" . invalid-s3bucket-name-exception)
        ("InvalidS3PrefixException" . invalid-s3prefix-exception)
        ("InvalidSnsTopicNameException" . invalid-sns-topic-name-exception)
        ("InvalidTagParameterException" . invalid-tag-parameter-exception)
        ("InvalidTimeRangeException" . invalid-time-range-exception)
        ("InvalidTokenException" . invalid-token-exception)
        ("InvalidTrailNameException" . invalid-trail-name-exception)
        ("KmsException" . kms-exception)
        ("KmsKeyDisabledException" . kms-key-disabled-exception)
        ("KmsKeyNotFoundException" . kms-key-not-found-exception)
        ("MaximumNumberOfTrailsExceededException"
         . maximum-number-of-trails-exceeded-exception)
        ("OperationNotPermittedException" . operation-not-permitted-exception)
        ("ResourceNotFoundException" . resource-not-found-exception)
        ("ResourceTypeNotSupportedException"
         . resource-type-not-supported-exception)
        ("S3BucketDoesNotExistException" . s3bucket-does-not-exist-exception)
        ("TagsLimitExceededException" . tags-limit-exceeded-exception)
        ("TrailAlreadyExistsException" . trail-already-exists-exception)
        ("TrailNotFoundException" . trail-not-found-exception)
        ("TrailNotProvidedException" . trail-not-provided-exception)
        ("UnsupportedOperationException" . unsupported-operation-exception)))))
 (common-lisp:export 'create-trail))
(common-lisp:progn
 (common-lisp:defun delete-trail
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key name)
   (common-lisp:declare (common-lisp:ignorable name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-trail-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'cloudtrail-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "DeleteTrail"
                                                        "2013-11-01"))
      common-lisp:nil common-lisp:nil
      '(("CloudTrailARNInvalidException" . cloud-trail-arninvalid-exception)
        ("CloudWatchLogsDeliveryUnavailableException"
         . cloud-watch-logs-delivery-unavailable-exception)
        ("InsufficientEncryptionPolicyException"
         . insufficient-encryption-policy-exception)
        ("InsufficientS3BucketPolicyException"
         . insufficient-s3bucket-policy-exception)
        ("InsufficientSnsTopicPolicyException"
         . insufficient-sns-topic-policy-exception)
        ("InvalidCloudWatchLogsLogGroupArnException"
         . invalid-cloud-watch-logs-log-group-arn-exception)
        ("InvalidCloudWatchLogsRoleArnException"
         . invalid-cloud-watch-logs-role-arn-exception)
        ("InvalidEventSelectorsException" . invalid-event-selectors-exception)
        ("InvalidHomeRegionException" . invalid-home-region-exception)
        ("InvalidKmsKeyIdException" . invalid-kms-key-id-exception)
        ("InvalidLookupAttributesException"
         . invalid-lookup-attributes-exception)
        ("InvalidMaxResultsException" . invalid-max-results-exception)
        ("InvalidNextTokenException" . invalid-next-token-exception)
        ("InvalidParameterCombinationException"
         . invalid-parameter-combination-exception)
        ("InvalidS3BucketNameException" . invalid-s3bucket-name-exception)
        ("InvalidS3PrefixException" . invalid-s3prefix-exception)
        ("InvalidSnsTopicNameException" . invalid-sns-topic-name-exception)
        ("InvalidTagParameterException" . invalid-tag-parameter-exception)
        ("InvalidTimeRangeException" . invalid-time-range-exception)
        ("InvalidTokenException" . invalid-token-exception)
        ("InvalidTrailNameException" . invalid-trail-name-exception)
        ("KmsException" . kms-exception)
        ("KmsKeyDisabledException" . kms-key-disabled-exception)
        ("KmsKeyNotFoundException" . kms-key-not-found-exception)
        ("MaximumNumberOfTrailsExceededException"
         . maximum-number-of-trails-exceeded-exception)
        ("OperationNotPermittedException" . operation-not-permitted-exception)
        ("ResourceNotFoundException" . resource-not-found-exception)
        ("ResourceTypeNotSupportedException"
         . resource-type-not-supported-exception)
        ("S3BucketDoesNotExistException" . s3bucket-does-not-exist-exception)
        ("TagsLimitExceededException" . tags-limit-exceeded-exception)
        ("TrailAlreadyExistsException" . trail-already-exists-exception)
        ("TrailNotFoundException" . trail-not-found-exception)
        ("TrailNotProvidedException" . trail-not-provided-exception)
        ("UnsupportedOperationException" . unsupported-operation-exception)))))
 (common-lisp:export 'delete-trail))
(common-lisp:progn
 (common-lisp:defun describe-trails
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key trail-name-list include-shadow-trails)
   (common-lisp:declare
    (common-lisp:ignorable trail-name-list include-shadow-trails))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-describe-trails-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'cloudtrail-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "DescribeTrails"
                                                        "2013-11-01"))
      common-lisp:nil common-lisp:nil
      '(("CloudTrailARNInvalidException" . cloud-trail-arninvalid-exception)
        ("CloudWatchLogsDeliveryUnavailableException"
         . cloud-watch-logs-delivery-unavailable-exception)
        ("InsufficientEncryptionPolicyException"
         . insufficient-encryption-policy-exception)
        ("InsufficientS3BucketPolicyException"
         . insufficient-s3bucket-policy-exception)
        ("InsufficientSnsTopicPolicyException"
         . insufficient-sns-topic-policy-exception)
        ("InvalidCloudWatchLogsLogGroupArnException"
         . invalid-cloud-watch-logs-log-group-arn-exception)
        ("InvalidCloudWatchLogsRoleArnException"
         . invalid-cloud-watch-logs-role-arn-exception)
        ("InvalidEventSelectorsException" . invalid-event-selectors-exception)
        ("InvalidHomeRegionException" . invalid-home-region-exception)
        ("InvalidKmsKeyIdException" . invalid-kms-key-id-exception)
        ("InvalidLookupAttributesException"
         . invalid-lookup-attributes-exception)
        ("InvalidMaxResultsException" . invalid-max-results-exception)
        ("InvalidNextTokenException" . invalid-next-token-exception)
        ("InvalidParameterCombinationException"
         . invalid-parameter-combination-exception)
        ("InvalidS3BucketNameException" . invalid-s3bucket-name-exception)
        ("InvalidS3PrefixException" . invalid-s3prefix-exception)
        ("InvalidSnsTopicNameException" . invalid-sns-topic-name-exception)
        ("InvalidTagParameterException" . invalid-tag-parameter-exception)
        ("InvalidTimeRangeException" . invalid-time-range-exception)
        ("InvalidTokenException" . invalid-token-exception)
        ("InvalidTrailNameException" . invalid-trail-name-exception)
        ("KmsException" . kms-exception)
        ("KmsKeyDisabledException" . kms-key-disabled-exception)
        ("KmsKeyNotFoundException" . kms-key-not-found-exception)
        ("MaximumNumberOfTrailsExceededException"
         . maximum-number-of-trails-exceeded-exception)
        ("OperationNotPermittedException" . operation-not-permitted-exception)
        ("ResourceNotFoundException" . resource-not-found-exception)
        ("ResourceTypeNotSupportedException"
         . resource-type-not-supported-exception)
        ("S3BucketDoesNotExistException" . s3bucket-does-not-exist-exception)
        ("TagsLimitExceededException" . tags-limit-exceeded-exception)
        ("TrailAlreadyExistsException" . trail-already-exists-exception)
        ("TrailNotFoundException" . trail-not-found-exception)
        ("TrailNotProvidedException" . trail-not-provided-exception)
        ("UnsupportedOperationException" . unsupported-operation-exception)))))
 (common-lisp:export 'describe-trails))
(common-lisp:progn
 (common-lisp:defun get-event-selectors
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key trail-name)
   (common-lisp:declare (common-lisp:ignorable trail-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-event-selectors-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'cloudtrail-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "GetEventSelectors"
                                                        "2013-11-01"))
      common-lisp:nil common-lisp:nil
      '(("CloudTrailARNInvalidException" . cloud-trail-arninvalid-exception)
        ("CloudWatchLogsDeliveryUnavailableException"
         . cloud-watch-logs-delivery-unavailable-exception)
        ("InsufficientEncryptionPolicyException"
         . insufficient-encryption-policy-exception)
        ("InsufficientS3BucketPolicyException"
         . insufficient-s3bucket-policy-exception)
        ("InsufficientSnsTopicPolicyException"
         . insufficient-sns-topic-policy-exception)
        ("InvalidCloudWatchLogsLogGroupArnException"
         . invalid-cloud-watch-logs-log-group-arn-exception)
        ("InvalidCloudWatchLogsRoleArnException"
         . invalid-cloud-watch-logs-role-arn-exception)
        ("InvalidEventSelectorsException" . invalid-event-selectors-exception)
        ("InvalidHomeRegionException" . invalid-home-region-exception)
        ("InvalidKmsKeyIdException" . invalid-kms-key-id-exception)
        ("InvalidLookupAttributesException"
         . invalid-lookup-attributes-exception)
        ("InvalidMaxResultsException" . invalid-max-results-exception)
        ("InvalidNextTokenException" . invalid-next-token-exception)
        ("InvalidParameterCombinationException"
         . invalid-parameter-combination-exception)
        ("InvalidS3BucketNameException" . invalid-s3bucket-name-exception)
        ("InvalidS3PrefixException" . invalid-s3prefix-exception)
        ("InvalidSnsTopicNameException" . invalid-sns-topic-name-exception)
        ("InvalidTagParameterException" . invalid-tag-parameter-exception)
        ("InvalidTimeRangeException" . invalid-time-range-exception)
        ("InvalidTokenException" . invalid-token-exception)
        ("InvalidTrailNameException" . invalid-trail-name-exception)
        ("KmsException" . kms-exception)
        ("KmsKeyDisabledException" . kms-key-disabled-exception)
        ("KmsKeyNotFoundException" . kms-key-not-found-exception)
        ("MaximumNumberOfTrailsExceededException"
         . maximum-number-of-trails-exceeded-exception)
        ("OperationNotPermittedException" . operation-not-permitted-exception)
        ("ResourceNotFoundException" . resource-not-found-exception)
        ("ResourceTypeNotSupportedException"
         . resource-type-not-supported-exception)
        ("S3BucketDoesNotExistException" . s3bucket-does-not-exist-exception)
        ("TagsLimitExceededException" . tags-limit-exceeded-exception)
        ("TrailAlreadyExistsException" . trail-already-exists-exception)
        ("TrailNotFoundException" . trail-not-found-exception)
        ("TrailNotProvidedException" . trail-not-provided-exception)
        ("UnsupportedOperationException" . unsupported-operation-exception)))))
 (common-lisp:export 'get-event-selectors))
(common-lisp:progn
 (common-lisp:defun get-trail-status
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key name)
   (common-lisp:declare (common-lisp:ignorable name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-trail-status-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'cloudtrail-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "GetTrailStatus"
                                                        "2013-11-01"))
      common-lisp:nil common-lisp:nil
      '(("CloudTrailARNInvalidException" . cloud-trail-arninvalid-exception)
        ("CloudWatchLogsDeliveryUnavailableException"
         . cloud-watch-logs-delivery-unavailable-exception)
        ("InsufficientEncryptionPolicyException"
         . insufficient-encryption-policy-exception)
        ("InsufficientS3BucketPolicyException"
         . insufficient-s3bucket-policy-exception)
        ("InsufficientSnsTopicPolicyException"
         . insufficient-sns-topic-policy-exception)
        ("InvalidCloudWatchLogsLogGroupArnException"
         . invalid-cloud-watch-logs-log-group-arn-exception)
        ("InvalidCloudWatchLogsRoleArnException"
         . invalid-cloud-watch-logs-role-arn-exception)
        ("InvalidEventSelectorsException" . invalid-event-selectors-exception)
        ("InvalidHomeRegionException" . invalid-home-region-exception)
        ("InvalidKmsKeyIdException" . invalid-kms-key-id-exception)
        ("InvalidLookupAttributesException"
         . invalid-lookup-attributes-exception)
        ("InvalidMaxResultsException" . invalid-max-results-exception)
        ("InvalidNextTokenException" . invalid-next-token-exception)
        ("InvalidParameterCombinationException"
         . invalid-parameter-combination-exception)
        ("InvalidS3BucketNameException" . invalid-s3bucket-name-exception)
        ("InvalidS3PrefixException" . invalid-s3prefix-exception)
        ("InvalidSnsTopicNameException" . invalid-sns-topic-name-exception)
        ("InvalidTagParameterException" . invalid-tag-parameter-exception)
        ("InvalidTimeRangeException" . invalid-time-range-exception)
        ("InvalidTokenException" . invalid-token-exception)
        ("InvalidTrailNameException" . invalid-trail-name-exception)
        ("KmsException" . kms-exception)
        ("KmsKeyDisabledException" . kms-key-disabled-exception)
        ("KmsKeyNotFoundException" . kms-key-not-found-exception)
        ("MaximumNumberOfTrailsExceededException"
         . maximum-number-of-trails-exceeded-exception)
        ("OperationNotPermittedException" . operation-not-permitted-exception)
        ("ResourceNotFoundException" . resource-not-found-exception)
        ("ResourceTypeNotSupportedException"
         . resource-type-not-supported-exception)
        ("S3BucketDoesNotExistException" . s3bucket-does-not-exist-exception)
        ("TagsLimitExceededException" . tags-limit-exceeded-exception)
        ("TrailAlreadyExistsException" . trail-already-exists-exception)
        ("TrailNotFoundException" . trail-not-found-exception)
        ("TrailNotProvidedException" . trail-not-provided-exception)
        ("UnsupportedOperationException" . unsupported-operation-exception)))))
 (common-lisp:export 'get-trail-status))
(common-lisp:progn
 (common-lisp:defun list-public-keys
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key start-time end-time next-token)
   (common-lisp:declare (common-lisp:ignorable start-time end-time next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-public-keys-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'cloudtrail-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "ListPublicKeys"
                                                        "2013-11-01"))
      common-lisp:nil common-lisp:nil
      '(("CloudTrailARNInvalidException" . cloud-trail-arninvalid-exception)
        ("CloudWatchLogsDeliveryUnavailableException"
         . cloud-watch-logs-delivery-unavailable-exception)
        ("InsufficientEncryptionPolicyException"
         . insufficient-encryption-policy-exception)
        ("InsufficientS3BucketPolicyException"
         . insufficient-s3bucket-policy-exception)
        ("InsufficientSnsTopicPolicyException"
         . insufficient-sns-topic-policy-exception)
        ("InvalidCloudWatchLogsLogGroupArnException"
         . invalid-cloud-watch-logs-log-group-arn-exception)
        ("InvalidCloudWatchLogsRoleArnException"
         . invalid-cloud-watch-logs-role-arn-exception)
        ("InvalidEventSelectorsException" . invalid-event-selectors-exception)
        ("InvalidHomeRegionException" . invalid-home-region-exception)
        ("InvalidKmsKeyIdException" . invalid-kms-key-id-exception)
        ("InvalidLookupAttributesException"
         . invalid-lookup-attributes-exception)
        ("InvalidMaxResultsException" . invalid-max-results-exception)
        ("InvalidNextTokenException" . invalid-next-token-exception)
        ("InvalidParameterCombinationException"
         . invalid-parameter-combination-exception)
        ("InvalidS3BucketNameException" . invalid-s3bucket-name-exception)
        ("InvalidS3PrefixException" . invalid-s3prefix-exception)
        ("InvalidSnsTopicNameException" . invalid-sns-topic-name-exception)
        ("InvalidTagParameterException" . invalid-tag-parameter-exception)
        ("InvalidTimeRangeException" . invalid-time-range-exception)
        ("InvalidTokenException" . invalid-token-exception)
        ("InvalidTrailNameException" . invalid-trail-name-exception)
        ("KmsException" . kms-exception)
        ("KmsKeyDisabledException" . kms-key-disabled-exception)
        ("KmsKeyNotFoundException" . kms-key-not-found-exception)
        ("MaximumNumberOfTrailsExceededException"
         . maximum-number-of-trails-exceeded-exception)
        ("OperationNotPermittedException" . operation-not-permitted-exception)
        ("ResourceNotFoundException" . resource-not-found-exception)
        ("ResourceTypeNotSupportedException"
         . resource-type-not-supported-exception)
        ("S3BucketDoesNotExistException" . s3bucket-does-not-exist-exception)
        ("TagsLimitExceededException" . tags-limit-exceeded-exception)
        ("TrailAlreadyExistsException" . trail-already-exists-exception)
        ("TrailNotFoundException" . trail-not-found-exception)
        ("TrailNotProvidedException" . trail-not-provided-exception)
        ("UnsupportedOperationException" . unsupported-operation-exception)))))
 (common-lisp:export 'list-public-keys))
(common-lisp:progn
 (common-lisp:defun list-tags
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key resource-id-list next-token)
   (common-lisp:declare (common-lisp:ignorable resource-id-list next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-tags-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'cloudtrail-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/" "ListTags"
                                                        "2013-11-01"))
      common-lisp:nil common-lisp:nil
      '(("CloudTrailARNInvalidException" . cloud-trail-arninvalid-exception)
        ("CloudWatchLogsDeliveryUnavailableException"
         . cloud-watch-logs-delivery-unavailable-exception)
        ("InsufficientEncryptionPolicyException"
         . insufficient-encryption-policy-exception)
        ("InsufficientS3BucketPolicyException"
         . insufficient-s3bucket-policy-exception)
        ("InsufficientSnsTopicPolicyException"
         . insufficient-sns-topic-policy-exception)
        ("InvalidCloudWatchLogsLogGroupArnException"
         . invalid-cloud-watch-logs-log-group-arn-exception)
        ("InvalidCloudWatchLogsRoleArnException"
         . invalid-cloud-watch-logs-role-arn-exception)
        ("InvalidEventSelectorsException" . invalid-event-selectors-exception)
        ("InvalidHomeRegionException" . invalid-home-region-exception)
        ("InvalidKmsKeyIdException" . invalid-kms-key-id-exception)
        ("InvalidLookupAttributesException"
         . invalid-lookup-attributes-exception)
        ("InvalidMaxResultsException" . invalid-max-results-exception)
        ("InvalidNextTokenException" . invalid-next-token-exception)
        ("InvalidParameterCombinationException"
         . invalid-parameter-combination-exception)
        ("InvalidS3BucketNameException" . invalid-s3bucket-name-exception)
        ("InvalidS3PrefixException" . invalid-s3prefix-exception)
        ("InvalidSnsTopicNameException" . invalid-sns-topic-name-exception)
        ("InvalidTagParameterException" . invalid-tag-parameter-exception)
        ("InvalidTimeRangeException" . invalid-time-range-exception)
        ("InvalidTokenException" . invalid-token-exception)
        ("InvalidTrailNameException" . invalid-trail-name-exception)
        ("KmsException" . kms-exception)
        ("KmsKeyDisabledException" . kms-key-disabled-exception)
        ("KmsKeyNotFoundException" . kms-key-not-found-exception)
        ("MaximumNumberOfTrailsExceededException"
         . maximum-number-of-trails-exceeded-exception)
        ("OperationNotPermittedException" . operation-not-permitted-exception)
        ("ResourceNotFoundException" . resource-not-found-exception)
        ("ResourceTypeNotSupportedException"
         . resource-type-not-supported-exception)
        ("S3BucketDoesNotExistException" . s3bucket-does-not-exist-exception)
        ("TagsLimitExceededException" . tags-limit-exceeded-exception)
        ("TrailAlreadyExistsException" . trail-already-exists-exception)
        ("TrailNotFoundException" . trail-not-found-exception)
        ("TrailNotProvidedException" . trail-not-provided-exception)
        ("UnsupportedOperationException" . unsupported-operation-exception)))))
 (common-lisp:export 'list-tags))
(common-lisp:progn
 (common-lisp:defun lookup-events
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key lookup-attributes start-time end-time
                     max-results next-token)
   (common-lisp:declare
    (common-lisp:ignorable lookup-attributes start-time end-time max-results
     next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-lookup-events-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'cloudtrail-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "LookupEvents"
                                                        "2013-11-01"))
      common-lisp:nil common-lisp:nil
      '(("CloudTrailARNInvalidException" . cloud-trail-arninvalid-exception)
        ("CloudWatchLogsDeliveryUnavailableException"
         . cloud-watch-logs-delivery-unavailable-exception)
        ("InsufficientEncryptionPolicyException"
         . insufficient-encryption-policy-exception)
        ("InsufficientS3BucketPolicyException"
         . insufficient-s3bucket-policy-exception)
        ("InsufficientSnsTopicPolicyException"
         . insufficient-sns-topic-policy-exception)
        ("InvalidCloudWatchLogsLogGroupArnException"
         . invalid-cloud-watch-logs-log-group-arn-exception)
        ("InvalidCloudWatchLogsRoleArnException"
         . invalid-cloud-watch-logs-role-arn-exception)
        ("InvalidEventSelectorsException" . invalid-event-selectors-exception)
        ("InvalidHomeRegionException" . invalid-home-region-exception)
        ("InvalidKmsKeyIdException" . invalid-kms-key-id-exception)
        ("InvalidLookupAttributesException"
         . invalid-lookup-attributes-exception)
        ("InvalidMaxResultsException" . invalid-max-results-exception)
        ("InvalidNextTokenException" . invalid-next-token-exception)
        ("InvalidParameterCombinationException"
         . invalid-parameter-combination-exception)
        ("InvalidS3BucketNameException" . invalid-s3bucket-name-exception)
        ("InvalidS3PrefixException" . invalid-s3prefix-exception)
        ("InvalidSnsTopicNameException" . invalid-sns-topic-name-exception)
        ("InvalidTagParameterException" . invalid-tag-parameter-exception)
        ("InvalidTimeRangeException" . invalid-time-range-exception)
        ("InvalidTokenException" . invalid-token-exception)
        ("InvalidTrailNameException" . invalid-trail-name-exception)
        ("KmsException" . kms-exception)
        ("KmsKeyDisabledException" . kms-key-disabled-exception)
        ("KmsKeyNotFoundException" . kms-key-not-found-exception)
        ("MaximumNumberOfTrailsExceededException"
         . maximum-number-of-trails-exceeded-exception)
        ("OperationNotPermittedException" . operation-not-permitted-exception)
        ("ResourceNotFoundException" . resource-not-found-exception)
        ("ResourceTypeNotSupportedException"
         . resource-type-not-supported-exception)
        ("S3BucketDoesNotExistException" . s3bucket-does-not-exist-exception)
        ("TagsLimitExceededException" . tags-limit-exceeded-exception)
        ("TrailAlreadyExistsException" . trail-already-exists-exception)
        ("TrailNotFoundException" . trail-not-found-exception)
        ("TrailNotProvidedException" . trail-not-provided-exception)
        ("UnsupportedOperationException" . unsupported-operation-exception)))))
 (common-lisp:export 'lookup-events))
(common-lisp:progn
 (common-lisp:defun put-event-selectors
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key trail-name event-selectors)
   (common-lisp:declare (common-lisp:ignorable trail-name event-selectors))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-put-event-selectors-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'cloudtrail-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "PutEventSelectors"
                                                        "2013-11-01"))
      common-lisp:nil common-lisp:nil
      '(("CloudTrailARNInvalidException" . cloud-trail-arninvalid-exception)
        ("CloudWatchLogsDeliveryUnavailableException"
         . cloud-watch-logs-delivery-unavailable-exception)
        ("InsufficientEncryptionPolicyException"
         . insufficient-encryption-policy-exception)
        ("InsufficientS3BucketPolicyException"
         . insufficient-s3bucket-policy-exception)
        ("InsufficientSnsTopicPolicyException"
         . insufficient-sns-topic-policy-exception)
        ("InvalidCloudWatchLogsLogGroupArnException"
         . invalid-cloud-watch-logs-log-group-arn-exception)
        ("InvalidCloudWatchLogsRoleArnException"
         . invalid-cloud-watch-logs-role-arn-exception)
        ("InvalidEventSelectorsException" . invalid-event-selectors-exception)
        ("InvalidHomeRegionException" . invalid-home-region-exception)
        ("InvalidKmsKeyIdException" . invalid-kms-key-id-exception)
        ("InvalidLookupAttributesException"
         . invalid-lookup-attributes-exception)
        ("InvalidMaxResultsException" . invalid-max-results-exception)
        ("InvalidNextTokenException" . invalid-next-token-exception)
        ("InvalidParameterCombinationException"
         . invalid-parameter-combination-exception)
        ("InvalidS3BucketNameException" . invalid-s3bucket-name-exception)
        ("InvalidS3PrefixException" . invalid-s3prefix-exception)
        ("InvalidSnsTopicNameException" . invalid-sns-topic-name-exception)
        ("InvalidTagParameterException" . invalid-tag-parameter-exception)
        ("InvalidTimeRangeException" . invalid-time-range-exception)
        ("InvalidTokenException" . invalid-token-exception)
        ("InvalidTrailNameException" . invalid-trail-name-exception)
        ("KmsException" . kms-exception)
        ("KmsKeyDisabledException" . kms-key-disabled-exception)
        ("KmsKeyNotFoundException" . kms-key-not-found-exception)
        ("MaximumNumberOfTrailsExceededException"
         . maximum-number-of-trails-exceeded-exception)
        ("OperationNotPermittedException" . operation-not-permitted-exception)
        ("ResourceNotFoundException" . resource-not-found-exception)
        ("ResourceTypeNotSupportedException"
         . resource-type-not-supported-exception)
        ("S3BucketDoesNotExistException" . s3bucket-does-not-exist-exception)
        ("TagsLimitExceededException" . tags-limit-exceeded-exception)
        ("TrailAlreadyExistsException" . trail-already-exists-exception)
        ("TrailNotFoundException" . trail-not-found-exception)
        ("TrailNotProvidedException" . trail-not-provided-exception)
        ("UnsupportedOperationException" . unsupported-operation-exception)))))
 (common-lisp:export 'put-event-selectors))
(common-lisp:progn
 (common-lisp:defun remove-tags
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key resource-id tags-list)
   (common-lisp:declare (common-lisp:ignorable resource-id tags-list))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-remove-tags-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'cloudtrail-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/" "RemoveTags"
                                                        "2013-11-01"))
      common-lisp:nil common-lisp:nil
      '(("CloudTrailARNInvalidException" . cloud-trail-arninvalid-exception)
        ("CloudWatchLogsDeliveryUnavailableException"
         . cloud-watch-logs-delivery-unavailable-exception)
        ("InsufficientEncryptionPolicyException"
         . insufficient-encryption-policy-exception)
        ("InsufficientS3BucketPolicyException"
         . insufficient-s3bucket-policy-exception)
        ("InsufficientSnsTopicPolicyException"
         . insufficient-sns-topic-policy-exception)
        ("InvalidCloudWatchLogsLogGroupArnException"
         . invalid-cloud-watch-logs-log-group-arn-exception)
        ("InvalidCloudWatchLogsRoleArnException"
         . invalid-cloud-watch-logs-role-arn-exception)
        ("InvalidEventSelectorsException" . invalid-event-selectors-exception)
        ("InvalidHomeRegionException" . invalid-home-region-exception)
        ("InvalidKmsKeyIdException" . invalid-kms-key-id-exception)
        ("InvalidLookupAttributesException"
         . invalid-lookup-attributes-exception)
        ("InvalidMaxResultsException" . invalid-max-results-exception)
        ("InvalidNextTokenException" . invalid-next-token-exception)
        ("InvalidParameterCombinationException"
         . invalid-parameter-combination-exception)
        ("InvalidS3BucketNameException" . invalid-s3bucket-name-exception)
        ("InvalidS3PrefixException" . invalid-s3prefix-exception)
        ("InvalidSnsTopicNameException" . invalid-sns-topic-name-exception)
        ("InvalidTagParameterException" . invalid-tag-parameter-exception)
        ("InvalidTimeRangeException" . invalid-time-range-exception)
        ("InvalidTokenException" . invalid-token-exception)
        ("InvalidTrailNameException" . invalid-trail-name-exception)
        ("KmsException" . kms-exception)
        ("KmsKeyDisabledException" . kms-key-disabled-exception)
        ("KmsKeyNotFoundException" . kms-key-not-found-exception)
        ("MaximumNumberOfTrailsExceededException"
         . maximum-number-of-trails-exceeded-exception)
        ("OperationNotPermittedException" . operation-not-permitted-exception)
        ("ResourceNotFoundException" . resource-not-found-exception)
        ("ResourceTypeNotSupportedException"
         . resource-type-not-supported-exception)
        ("S3BucketDoesNotExistException" . s3bucket-does-not-exist-exception)
        ("TagsLimitExceededException" . tags-limit-exceeded-exception)
        ("TrailAlreadyExistsException" . trail-already-exists-exception)
        ("TrailNotFoundException" . trail-not-found-exception)
        ("TrailNotProvidedException" . trail-not-provided-exception)
        ("UnsupportedOperationException" . unsupported-operation-exception)))))
 (common-lisp:export 'remove-tags))
(common-lisp:progn
 (common-lisp:defun start-logging
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key name)
   (common-lisp:declare (common-lisp:ignorable name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-start-logging-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'cloudtrail-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "StartLogging"
                                                        "2013-11-01"))
      common-lisp:nil common-lisp:nil
      '(("CloudTrailARNInvalidException" . cloud-trail-arninvalid-exception)
        ("CloudWatchLogsDeliveryUnavailableException"
         . cloud-watch-logs-delivery-unavailable-exception)
        ("InsufficientEncryptionPolicyException"
         . insufficient-encryption-policy-exception)
        ("InsufficientS3BucketPolicyException"
         . insufficient-s3bucket-policy-exception)
        ("InsufficientSnsTopicPolicyException"
         . insufficient-sns-topic-policy-exception)
        ("InvalidCloudWatchLogsLogGroupArnException"
         . invalid-cloud-watch-logs-log-group-arn-exception)
        ("InvalidCloudWatchLogsRoleArnException"
         . invalid-cloud-watch-logs-role-arn-exception)
        ("InvalidEventSelectorsException" . invalid-event-selectors-exception)
        ("InvalidHomeRegionException" . invalid-home-region-exception)
        ("InvalidKmsKeyIdException" . invalid-kms-key-id-exception)
        ("InvalidLookupAttributesException"
         . invalid-lookup-attributes-exception)
        ("InvalidMaxResultsException" . invalid-max-results-exception)
        ("InvalidNextTokenException" . invalid-next-token-exception)
        ("InvalidParameterCombinationException"
         . invalid-parameter-combination-exception)
        ("InvalidS3BucketNameException" . invalid-s3bucket-name-exception)
        ("InvalidS3PrefixException" . invalid-s3prefix-exception)
        ("InvalidSnsTopicNameException" . invalid-sns-topic-name-exception)
        ("InvalidTagParameterException" . invalid-tag-parameter-exception)
        ("InvalidTimeRangeException" . invalid-time-range-exception)
        ("InvalidTokenException" . invalid-token-exception)
        ("InvalidTrailNameException" . invalid-trail-name-exception)
        ("KmsException" . kms-exception)
        ("KmsKeyDisabledException" . kms-key-disabled-exception)
        ("KmsKeyNotFoundException" . kms-key-not-found-exception)
        ("MaximumNumberOfTrailsExceededException"
         . maximum-number-of-trails-exceeded-exception)
        ("OperationNotPermittedException" . operation-not-permitted-exception)
        ("ResourceNotFoundException" . resource-not-found-exception)
        ("ResourceTypeNotSupportedException"
         . resource-type-not-supported-exception)
        ("S3BucketDoesNotExistException" . s3bucket-does-not-exist-exception)
        ("TagsLimitExceededException" . tags-limit-exceeded-exception)
        ("TrailAlreadyExistsException" . trail-already-exists-exception)
        ("TrailNotFoundException" . trail-not-found-exception)
        ("TrailNotProvidedException" . trail-not-provided-exception)
        ("UnsupportedOperationException" . unsupported-operation-exception)))))
 (common-lisp:export 'start-logging))
(common-lisp:progn
 (common-lisp:defun stop-logging
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key name)
   (common-lisp:declare (common-lisp:ignorable name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-stop-logging-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'cloudtrail-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "StopLogging"
                                                        "2013-11-01"))
      common-lisp:nil common-lisp:nil
      '(("CloudTrailARNInvalidException" . cloud-trail-arninvalid-exception)
        ("CloudWatchLogsDeliveryUnavailableException"
         . cloud-watch-logs-delivery-unavailable-exception)
        ("InsufficientEncryptionPolicyException"
         . insufficient-encryption-policy-exception)
        ("InsufficientS3BucketPolicyException"
         . insufficient-s3bucket-policy-exception)
        ("InsufficientSnsTopicPolicyException"
         . insufficient-sns-topic-policy-exception)
        ("InvalidCloudWatchLogsLogGroupArnException"
         . invalid-cloud-watch-logs-log-group-arn-exception)
        ("InvalidCloudWatchLogsRoleArnException"
         . invalid-cloud-watch-logs-role-arn-exception)
        ("InvalidEventSelectorsException" . invalid-event-selectors-exception)
        ("InvalidHomeRegionException" . invalid-home-region-exception)
        ("InvalidKmsKeyIdException" . invalid-kms-key-id-exception)
        ("InvalidLookupAttributesException"
         . invalid-lookup-attributes-exception)
        ("InvalidMaxResultsException" . invalid-max-results-exception)
        ("InvalidNextTokenException" . invalid-next-token-exception)
        ("InvalidParameterCombinationException"
         . invalid-parameter-combination-exception)
        ("InvalidS3BucketNameException" . invalid-s3bucket-name-exception)
        ("InvalidS3PrefixException" . invalid-s3prefix-exception)
        ("InvalidSnsTopicNameException" . invalid-sns-topic-name-exception)
        ("InvalidTagParameterException" . invalid-tag-parameter-exception)
        ("InvalidTimeRangeException" . invalid-time-range-exception)
        ("InvalidTokenException" . invalid-token-exception)
        ("InvalidTrailNameException" . invalid-trail-name-exception)
        ("KmsException" . kms-exception)
        ("KmsKeyDisabledException" . kms-key-disabled-exception)
        ("KmsKeyNotFoundException" . kms-key-not-found-exception)
        ("MaximumNumberOfTrailsExceededException"
         . maximum-number-of-trails-exceeded-exception)
        ("OperationNotPermittedException" . operation-not-permitted-exception)
        ("ResourceNotFoundException" . resource-not-found-exception)
        ("ResourceTypeNotSupportedException"
         . resource-type-not-supported-exception)
        ("S3BucketDoesNotExistException" . s3bucket-does-not-exist-exception)
        ("TagsLimitExceededException" . tags-limit-exceeded-exception)
        ("TrailAlreadyExistsException" . trail-already-exists-exception)
        ("TrailNotFoundException" . trail-not-found-exception)
        ("TrailNotProvidedException" . trail-not-provided-exception)
        ("UnsupportedOperationException" . unsupported-operation-exception)))))
 (common-lisp:export 'stop-logging))
(common-lisp:progn
 (common-lisp:defun update-trail
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key name s3bucket-name s3key-prefix
                     sns-topic-name include-global-service-events
                     is-multi-region-trail enable-log-file-validation
                     cloud-watch-logs-log-group-arn cloud-watch-logs-role-arn
                     kms-key-id)
   (common-lisp:declare
    (common-lisp:ignorable name s3bucket-name s3key-prefix sns-topic-name
     include-global-service-events is-multi-region-trail
     enable-log-file-validation cloud-watch-logs-log-group-arn
     cloud-watch-logs-role-arn kms-key-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-trail-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'cloudtrail-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "UpdateTrail"
                                                        "2013-11-01"))
      common-lisp:nil common-lisp:nil
      '(("CloudTrailARNInvalidException" . cloud-trail-arninvalid-exception)
        ("CloudWatchLogsDeliveryUnavailableException"
         . cloud-watch-logs-delivery-unavailable-exception)
        ("InsufficientEncryptionPolicyException"
         . insufficient-encryption-policy-exception)
        ("InsufficientS3BucketPolicyException"
         . insufficient-s3bucket-policy-exception)
        ("InsufficientSnsTopicPolicyException"
         . insufficient-sns-topic-policy-exception)
        ("InvalidCloudWatchLogsLogGroupArnException"
         . invalid-cloud-watch-logs-log-group-arn-exception)
        ("InvalidCloudWatchLogsRoleArnException"
         . invalid-cloud-watch-logs-role-arn-exception)
        ("InvalidEventSelectorsException" . invalid-event-selectors-exception)
        ("InvalidHomeRegionException" . invalid-home-region-exception)
        ("InvalidKmsKeyIdException" . invalid-kms-key-id-exception)
        ("InvalidLookupAttributesException"
         . invalid-lookup-attributes-exception)
        ("InvalidMaxResultsException" . invalid-max-results-exception)
        ("InvalidNextTokenException" . invalid-next-token-exception)
        ("InvalidParameterCombinationException"
         . invalid-parameter-combination-exception)
        ("InvalidS3BucketNameException" . invalid-s3bucket-name-exception)
        ("InvalidS3PrefixException" . invalid-s3prefix-exception)
        ("InvalidSnsTopicNameException" . invalid-sns-topic-name-exception)
        ("InvalidTagParameterException" . invalid-tag-parameter-exception)
        ("InvalidTimeRangeException" . invalid-time-range-exception)
        ("InvalidTokenException" . invalid-token-exception)
        ("InvalidTrailNameException" . invalid-trail-name-exception)
        ("KmsException" . kms-exception)
        ("KmsKeyDisabledException" . kms-key-disabled-exception)
        ("KmsKeyNotFoundException" . kms-key-not-found-exception)
        ("MaximumNumberOfTrailsExceededException"
         . maximum-number-of-trails-exceeded-exception)
        ("OperationNotPermittedException" . operation-not-permitted-exception)
        ("ResourceNotFoundException" . resource-not-found-exception)
        ("ResourceTypeNotSupportedException"
         . resource-type-not-supported-exception)
        ("S3BucketDoesNotExistException" . s3bucket-does-not-exist-exception)
        ("TagsLimitExceededException" . tags-limit-exceeded-exception)
        ("TrailAlreadyExistsException" . trail-already-exists-exception)
        ("TrailNotFoundException" . trail-not-found-exception)
        ("TrailNotProvidedException" . trail-not-provided-exception)
        ("UnsupportedOperationException" . unsupported-operation-exception)))))
 (common-lisp:export 'update-trail))
