;; DO NOT EDIT: File is generated by AWS-SDK/GENERATOR.

(common-lisp:defpackage #:aws-sdk/services/application-autoscaling/api
  (:use)
  (:nicknames #:aws/application-autoscaling)
  (:import-from #:aws-sdk/generator/shape)
  (:import-from #:aws-sdk/generator/operation)
  (:import-from #:aws-sdk/api)
  (:import-from #:aws-sdk/request)
  (:import-from #:aws-sdk/error))
(common-lisp:in-package #:aws-sdk/services/application-autoscaling/api)
(common-lisp:progn
 (common-lisp:defclass application-autoscaling-request
                       (aws-sdk/request:request) common-lisp:nil
                       (:default-initargs :service "application-autoscaling"))
 (common-lisp:export 'application-autoscaling-request))
(common-lisp:progn
 (common-lisp:define-condition application-autoscaling-error
     (aws-sdk/error:aws-error)
     common-lisp:nil)
 (common-lisp:export 'application-autoscaling-error))
(common-lisp:deftype adjustment-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (alarm (:copier common-lisp:nil) (:conc-name "struct-shape-alarm-"))
   (alarm-name (common-lisp:error ":alarm-name is required") :type
    (common-lisp:or resource-id common-lisp:null))
   (alarm-arn (common-lisp:error ":alarm-arn is required") :type
    (common-lisp:or resource-id common-lisp:null)))
 (common-lisp:export (common-lisp:list 'alarm 'make-alarm))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input alarm))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input alarm))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'alarm-name))
      (common-lisp:list
       (common-lisp:cons "AlarmName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'alarm-arn))
      (common-lisp:list
       (common-lisp:cons "AlarmARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input alarm))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype alarms () '(trivial-types:proper-list alarm))
 (common-lisp:defun |make-alarms|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list alarm))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:define-condition concurrent-update-exception
     (application-autoscaling-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       concurrent-update-exception-message)))
 (common-lisp:export
  (common-lisp:list 'concurrent-update-exception
                    'concurrent-update-exception-message)))
(common-lisp:deftype cooldown () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:defstruct
     (customized-metric-specification (:copier common-lisp:nil)
      (:conc-name "struct-shape-customized-metric-specification-"))
   (metric-name (common-lisp:error ":metric-name is required") :type
    (common-lisp:or metric-name common-lisp:null))
   (namespace (common-lisp:error ":namespace is required") :type
    (common-lisp:or metric-namespace common-lisp:null))
   (dimensions common-lisp:nil :type
    (common-lisp:or metric-dimensions common-lisp:null))
   (statistic (common-lisp:error ":statistic is required") :type
    (common-lisp:or metric-statistic common-lisp:null))
   (unit common-lisp:nil :type (common-lisp:or metric-unit common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'customized-metric-specification
                    'make-customized-metric-specification))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          customized-metric-specification))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          customized-metric-specification))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'metric-name))
      (common-lisp:list
       (common-lisp:cons "MetricName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'namespace))
      (common-lisp:list
       (common-lisp:cons "Namespace"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'dimensions))
      (common-lisp:list
       (common-lisp:cons "Dimensions"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'statistic))
      (common-lisp:list
       (common-lisp:cons "Statistic"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'unit))
      (common-lisp:list
       (common-lisp:cons "Unit"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          customized-metric-specification))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-scaling-policy-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-scaling-policy-request-"))
   (policy-name (common-lisp:error ":policy-name is required") :type
    (common-lisp:or resource-id-max-len1600 common-lisp:null))
   (service-namespace (common-lisp:error ":service-namespace is required")
    :type (common-lisp:or service-namespace common-lisp:null))
   (resource-id (common-lisp:error ":resource-id is required") :type
    (common-lisp:or resource-id-max-len1600 common-lisp:null))
   (scalable-dimension (common-lisp:error ":scalable-dimension is required")
    :type (common-lisp:or scalable-dimension common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-scaling-policy-request
                    'make-delete-scaling-policy-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-scaling-policy-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-scaling-policy-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'policy-name))
      (common-lisp:list
       (common-lisp:cons "PolicyName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'service-namespace))
      (common-lisp:list
       (common-lisp:cons "ServiceNamespace"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-id))
      (common-lisp:list
       (common-lisp:cons "ResourceId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'scalable-dimension))
      (common-lisp:list
       (common-lisp:cons "ScalableDimension"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-scaling-policy-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-scaling-policy-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-scaling-policy-response-")))
 (common-lisp:export
  (common-lisp:list 'delete-scaling-policy-response
                    'make-delete-scaling-policy-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-scaling-policy-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-scaling-policy-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-scaling-policy-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (deregister-scalable-target-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-deregister-scalable-target-request-"))
   (service-namespace (common-lisp:error ":service-namespace is required")
    :type (common-lisp:or service-namespace common-lisp:null))
   (resource-id (common-lisp:error ":resource-id is required") :type
    (common-lisp:or resource-id-max-len1600 common-lisp:null))
   (scalable-dimension (common-lisp:error ":scalable-dimension is required")
    :type (common-lisp:or scalable-dimension common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'deregister-scalable-target-request
                    'make-deregister-scalable-target-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          deregister-scalable-target-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          deregister-scalable-target-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'service-namespace))
      (common-lisp:list
       (common-lisp:cons "ServiceNamespace"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-id))
      (common-lisp:list
       (common-lisp:cons "ResourceId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'scalable-dimension))
      (common-lisp:list
       (common-lisp:cons "ScalableDimension"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          deregister-scalable-target-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (deregister-scalable-target-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-deregister-scalable-target-response-")))
 (common-lisp:export
  (common-lisp:list 'deregister-scalable-target-response
                    'make-deregister-scalable-target-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          deregister-scalable-target-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          deregister-scalable-target-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          deregister-scalable-target-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-scalable-targets-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-describe-scalable-targets-request-"))
   (service-namespace (common-lisp:error ":service-namespace is required")
    :type (common-lisp:or service-namespace common-lisp:null))
   (resource-ids common-lisp:nil :type
    (common-lisp:or resource-ids-max-len1600 common-lisp:null))
   (scalable-dimension common-lisp:nil :type
    (common-lisp:or scalable-dimension common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or max-results common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or xml-string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-scalable-targets-request
                    'make-describe-scalable-targets-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-scalable-targets-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-scalable-targets-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'service-namespace))
      (common-lisp:list
       (common-lisp:cons "ServiceNamespace"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-ids))
      (common-lisp:list
       (common-lisp:cons "ResourceIds"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'scalable-dimension))
      (common-lisp:list
       (common-lisp:cons "ScalableDimension"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-results))
      (common-lisp:list
       (common-lisp:cons "MaxResults"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-scalable-targets-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-scalable-targets-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-describe-scalable-targets-response-"))
   (scalable-targets common-lisp:nil :type
    (common-lisp:or scalable-targets common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or xml-string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-scalable-targets-response
                    'make-describe-scalable-targets-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-scalable-targets-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-scalable-targets-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'scalable-targets))
      (common-lisp:list
       (common-lisp:cons "ScalableTargets"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-scalable-targets-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-scaling-activities-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-describe-scaling-activities-request-"))
   (service-namespace (common-lisp:error ":service-namespace is required")
    :type (common-lisp:or service-namespace common-lisp:null))
   (resource-id common-lisp:nil :type
    (common-lisp:or resource-id-max-len1600 common-lisp:null))
   (scalable-dimension common-lisp:nil :type
    (common-lisp:or scalable-dimension common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or max-results common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or xml-string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-scaling-activities-request
                    'make-describe-scaling-activities-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-scaling-activities-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-scaling-activities-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'service-namespace))
      (common-lisp:list
       (common-lisp:cons "ServiceNamespace"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-id))
      (common-lisp:list
       (common-lisp:cons "ResourceId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'scalable-dimension))
      (common-lisp:list
       (common-lisp:cons "ScalableDimension"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-results))
      (common-lisp:list
       (common-lisp:cons "MaxResults"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-scaling-activities-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-scaling-activities-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-describe-scaling-activities-response-"))
   (scaling-activities common-lisp:nil :type
    (common-lisp:or scaling-activities common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or xml-string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-scaling-activities-response
                    'make-describe-scaling-activities-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-scaling-activities-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-scaling-activities-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'scaling-activities))
      (common-lisp:list
       (common-lisp:cons "ScalingActivities"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-scaling-activities-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-scaling-policies-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-describe-scaling-policies-request-"))
   (policy-names common-lisp:nil :type
    (common-lisp:or resource-ids-max-len1600 common-lisp:null))
   (service-namespace (common-lisp:error ":service-namespace is required")
    :type (common-lisp:or service-namespace common-lisp:null))
   (resource-id common-lisp:nil :type
    (common-lisp:or resource-id-max-len1600 common-lisp:null))
   (scalable-dimension common-lisp:nil :type
    (common-lisp:or scalable-dimension common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or max-results common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or xml-string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-scaling-policies-request
                    'make-describe-scaling-policies-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-scaling-policies-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-scaling-policies-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'policy-names))
      (common-lisp:list
       (common-lisp:cons "PolicyNames"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'service-namespace))
      (common-lisp:list
       (common-lisp:cons "ServiceNamespace"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-id))
      (common-lisp:list
       (common-lisp:cons "ResourceId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'scalable-dimension))
      (common-lisp:list
       (common-lisp:cons "ScalableDimension"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-results))
      (common-lisp:list
       (common-lisp:cons "MaxResults"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-scaling-policies-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-scaling-policies-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-describe-scaling-policies-response-"))
   (scaling-policies common-lisp:nil :type
    (common-lisp:or scaling-policies common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or xml-string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-scaling-policies-response
                    'make-describe-scaling-policies-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-scaling-policies-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-scaling-policies-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'scaling-policies))
      (common-lisp:list
       (common-lisp:cons "ScalingPolicies"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-scaling-policies-response))
   common-lisp:nil))
(common-lisp:deftype error-message () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:define-condition failed-resource-access-exception
     (application-autoscaling-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       failed-resource-access-exception-message)))
 (common-lisp:export
  (common-lisp:list 'failed-resource-access-exception
                    'failed-resource-access-exception-message)))
(common-lisp:progn
 (common-lisp:define-condition internal-service-exception
     (application-autoscaling-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       internal-service-exception-message)))
 (common-lisp:export
  (common-lisp:list 'internal-service-exception
                    'internal-service-exception-message)))
(common-lisp:progn
 (common-lisp:define-condition invalid-next-token-exception
     (application-autoscaling-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       invalid-next-token-exception-message)))
 (common-lisp:export
  (common-lisp:list 'invalid-next-token-exception
                    'invalid-next-token-exception-message)))
(common-lisp:progn
 (common-lisp:define-condition limit-exceeded-exception
     (application-autoscaling-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       limit-exceeded-exception-message)))
 (common-lisp:export
  (common-lisp:list 'limit-exceeded-exception
                    'limit-exceeded-exception-message)))
(common-lisp:deftype max-results () 'common-lisp:integer)
(common-lisp:deftype metric-aggregation-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (metric-dimension (:copier common-lisp:nil)
      (:conc-name "struct-shape-metric-dimension-"))
   (name (common-lisp:error ":name is required") :type
    (common-lisp:or metric-dimension-name common-lisp:null))
   (value (common-lisp:error ":value is required") :type
    (common-lisp:or metric-dimension-value common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'metric-dimension 'make-metric-dimension))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input metric-dimension))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input metric-dimension))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'value))
      (common-lisp:list
       (common-lisp:cons "Value"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input metric-dimension))
   common-lisp:nil))
(common-lisp:deftype metric-dimension-name () 'common-lisp:string)
(common-lisp:deftype metric-dimension-value () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype metric-dimensions ()
   '(trivial-types:proper-list metric-dimension))
 (common-lisp:defun |make-metric-dimensions|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list metric-dimension))
   aws-sdk/generator/shape::members))
(common-lisp:deftype metric-name () 'common-lisp:string)
(common-lisp:deftype metric-namespace () 'common-lisp:string)
(common-lisp:deftype metric-scale () 'common-lisp:double-float)
(common-lisp:deftype metric-statistic () 'common-lisp:string)
(common-lisp:deftype metric-type () 'common-lisp:string)
(common-lisp:deftype metric-unit () 'common-lisp:string)
(common-lisp:deftype min-adjustment-magnitude () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:define-condition object-not-found-exception
     (application-autoscaling-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       object-not-found-exception-message)))
 (common-lisp:export
  (common-lisp:list 'object-not-found-exception
                    'object-not-found-exception-message)))
(common-lisp:deftype policy-name () 'common-lisp:string)
(common-lisp:deftype policy-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (predefined-metric-specification (:copier common-lisp:nil)
      (:conc-name "struct-shape-predefined-metric-specification-"))
   (predefined-metric-type
    (common-lisp:error ":predefined-metric-type is required") :type
    (common-lisp:or metric-type common-lisp:null))
   (resource-label common-lisp:nil :type
    (common-lisp:or resource-label common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'predefined-metric-specification
                    'make-predefined-metric-specification))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          predefined-metric-specification))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          predefined-metric-specification))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'predefined-metric-type))
      (common-lisp:list
       (common-lisp:cons "PredefinedMetricType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-label))
      (common-lisp:list
       (common-lisp:cons "ResourceLabel"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          predefined-metric-specification))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (put-scaling-policy-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-put-scaling-policy-request-"))
   (policy-name (common-lisp:error ":policy-name is required") :type
    (common-lisp:or policy-name common-lisp:null))
   (service-namespace (common-lisp:error ":service-namespace is required")
    :type (common-lisp:or service-namespace common-lisp:null))
   (resource-id (common-lisp:error ":resource-id is required") :type
    (common-lisp:or resource-id-max-len1600 common-lisp:null))
   (scalable-dimension (common-lisp:error ":scalable-dimension is required")
    :type (common-lisp:or scalable-dimension common-lisp:null))
   (policy-type common-lisp:nil :type
    (common-lisp:or policy-type common-lisp:null))
   (step-scaling-policy-configuration common-lisp:nil :type
    (common-lisp:or step-scaling-policy-configuration common-lisp:null))
   (target-tracking-scaling-policy-configuration common-lisp:nil :type
    (common-lisp:or target-tracking-scaling-policy-configuration
                    common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'put-scaling-policy-request
                    'make-put-scaling-policy-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          put-scaling-policy-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          put-scaling-policy-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'policy-name))
      (common-lisp:list
       (common-lisp:cons "PolicyName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'service-namespace))
      (common-lisp:list
       (common-lisp:cons "ServiceNamespace"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-id))
      (common-lisp:list
       (common-lisp:cons "ResourceId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'scalable-dimension))
      (common-lisp:list
       (common-lisp:cons "ScalableDimension"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'policy-type))
      (common-lisp:list
       (common-lisp:cons "PolicyType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'step-scaling-policy-configuration))
      (common-lisp:list
       (common-lisp:cons "StepScalingPolicyConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'target-tracking-scaling-policy-configuration))
      (common-lisp:list
       (common-lisp:cons "TargetTrackingScalingPolicyConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          put-scaling-policy-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (put-scaling-policy-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-put-scaling-policy-response-"))
   (policy-arn (common-lisp:error ":policy-arn is required") :type
    (common-lisp:or resource-id-max-len1600 common-lisp:null))
   (alarms common-lisp:nil :type (common-lisp:or alarms common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'put-scaling-policy-response
                    'make-put-scaling-policy-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          put-scaling-policy-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          put-scaling-policy-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'policy-arn))
      (common-lisp:list
       (common-lisp:cons "PolicyARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'alarms))
      (common-lisp:list
       (common-lisp:cons "Alarms"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          put-scaling-policy-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (register-scalable-target-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-register-scalable-target-request-"))
   (service-namespace (common-lisp:error ":service-namespace is required")
    :type (common-lisp:or service-namespace common-lisp:null))
   (resource-id (common-lisp:error ":resource-id is required") :type
    (common-lisp:or resource-id-max-len1600 common-lisp:null))
   (scalable-dimension (common-lisp:error ":scalable-dimension is required")
    :type (common-lisp:or scalable-dimension common-lisp:null))
   (min-capacity common-lisp:nil :type
    (common-lisp:or resource-capacity common-lisp:null))
   (max-capacity common-lisp:nil :type
    (common-lisp:or resource-capacity common-lisp:null))
   (role-arn common-lisp:nil :type
    (common-lisp:or resource-id-max-len1600 common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'register-scalable-target-request
                    'make-register-scalable-target-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          register-scalable-target-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          register-scalable-target-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'service-namespace))
      (common-lisp:list
       (common-lisp:cons "ServiceNamespace"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-id))
      (common-lisp:list
       (common-lisp:cons "ResourceId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'scalable-dimension))
      (common-lisp:list
       (common-lisp:cons "ScalableDimension"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'min-capacity))
      (common-lisp:list
       (common-lisp:cons "MinCapacity"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-capacity))
      (common-lisp:list
       (common-lisp:cons "MaxCapacity"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'role-arn))
      (common-lisp:list
       (common-lisp:cons "RoleARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          register-scalable-target-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (register-scalable-target-response (:copier common-lisp:nil)
      (:conc-name "struct-shape-register-scalable-target-response-")))
 (common-lisp:export
  (common-lisp:list 'register-scalable-target-response
                    'make-register-scalable-target-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          register-scalable-target-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          register-scalable-target-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          register-scalable-target-response))
   common-lisp:nil))
(common-lisp:deftype resource-capacity () 'common-lisp:integer)
(common-lisp:deftype resource-id () 'common-lisp:string)
(common-lisp:deftype resource-id-max-len1600 () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype resource-ids-max-len1600 ()
   '(trivial-types:proper-list resource-id-max-len1600))
 (common-lisp:defun |make-resource-ids-max-len1600|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list resource-id-max-len1600))
   aws-sdk/generator/shape::members))
(common-lisp:deftype resource-label () 'common-lisp:string)
(common-lisp:deftype scalable-dimension () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (scalable-target (:copier common-lisp:nil)
      (:conc-name "struct-shape-scalable-target-"))
   (service-namespace (common-lisp:error ":service-namespace is required")
    :type (common-lisp:or service-namespace common-lisp:null))
   (resource-id (common-lisp:error ":resource-id is required") :type
    (common-lisp:or resource-id-max-len1600 common-lisp:null))
   (scalable-dimension (common-lisp:error ":scalable-dimension is required")
    :type (common-lisp:or scalable-dimension common-lisp:null))
   (min-capacity (common-lisp:error ":min-capacity is required") :type
    (common-lisp:or resource-capacity common-lisp:null))
   (max-capacity (common-lisp:error ":max-capacity is required") :type
    (common-lisp:or resource-capacity common-lisp:null))
   (role-arn (common-lisp:error ":role-arn is required") :type
    (common-lisp:or resource-id-max-len1600 common-lisp:null))
   (creation-time (common-lisp:error ":creation-time is required") :type
    (common-lisp:or timestamp-type common-lisp:null)))
 (common-lisp:export (common-lisp:list 'scalable-target 'make-scalable-target))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input scalable-target))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input scalable-target))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'service-namespace))
      (common-lisp:list
       (common-lisp:cons "ServiceNamespace"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-id))
      (common-lisp:list
       (common-lisp:cons "ResourceId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'scalable-dimension))
      (common-lisp:list
       (common-lisp:cons "ScalableDimension"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'min-capacity))
      (common-lisp:list
       (common-lisp:cons "MinCapacity"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-capacity))
      (common-lisp:list
       (common-lisp:cons "MaxCapacity"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'role-arn))
      (common-lisp:list
       (common-lisp:cons "RoleARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'creation-time))
      (common-lisp:list
       (common-lisp:cons "CreationTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input scalable-target))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype scalable-targets ()
   '(trivial-types:proper-list scalable-target))
 (common-lisp:defun |make-scalable-targets|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list scalable-target))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype scaling-activities ()
   '(trivial-types:proper-list scaling-activity))
 (common-lisp:defun |make-scaling-activities|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list scaling-activity))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (scaling-activity (:copier common-lisp:nil)
      (:conc-name "struct-shape-scaling-activity-"))
   (activity-id (common-lisp:error ":activity-id is required") :type
    (common-lisp:or resource-id common-lisp:null))
   (service-namespace (common-lisp:error ":service-namespace is required")
    :type (common-lisp:or service-namespace common-lisp:null))
   (resource-id (common-lisp:error ":resource-id is required") :type
    (common-lisp:or resource-id-max-len1600 common-lisp:null))
   (scalable-dimension (common-lisp:error ":scalable-dimension is required")
    :type (common-lisp:or scalable-dimension common-lisp:null))
   (description (common-lisp:error ":description is required") :type
    (common-lisp:or xml-string common-lisp:null))
   (cause (common-lisp:error ":cause is required") :type
    (common-lisp:or xml-string common-lisp:null))
   (start-time (common-lisp:error ":start-time is required") :type
    (common-lisp:or timestamp-type common-lisp:null))
   (end-time common-lisp:nil :type
    (common-lisp:or timestamp-type common-lisp:null))
   (status-code (common-lisp:error ":status-code is required") :type
    (common-lisp:or scaling-activity-status-code common-lisp:null))
   (status-message common-lisp:nil :type
    (common-lisp:or xml-string common-lisp:null))
   (details common-lisp:nil :type
    (common-lisp:or xml-string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'scaling-activity 'make-scaling-activity))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input scaling-activity))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input scaling-activity))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'activity-id))
      (common-lisp:list
       (common-lisp:cons "ActivityId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'service-namespace))
      (common-lisp:list
       (common-lisp:cons "ServiceNamespace"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-id))
      (common-lisp:list
       (common-lisp:cons "ResourceId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'scalable-dimension))
      (common-lisp:list
       (common-lisp:cons "ScalableDimension"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'cause))
      (common-lisp:list
       (common-lisp:cons "Cause"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'start-time))
      (common-lisp:list
       (common-lisp:cons "StartTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'end-time))
      (common-lisp:list
       (common-lisp:cons "EndTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status-code))
      (common-lisp:list
       (common-lisp:cons "StatusCode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status-message))
      (common-lisp:list
       (common-lisp:cons "StatusMessage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'details))
      (common-lisp:list
       (common-lisp:cons "Details"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input scaling-activity))
   common-lisp:nil))
(common-lisp:deftype scaling-activity-status-code () 'common-lisp:string)
(common-lisp:deftype scaling-adjustment () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:deftype scaling-policies ()
   '(trivial-types:proper-list scaling-policy))
 (common-lisp:defun |make-scaling-policies|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list scaling-policy))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (scaling-policy (:copier common-lisp:nil)
      (:conc-name "struct-shape-scaling-policy-"))
   (policy-arn (common-lisp:error ":policy-arn is required") :type
    (common-lisp:or resource-id-max-len1600 common-lisp:null))
   (policy-name (common-lisp:error ":policy-name is required") :type
    (common-lisp:or policy-name common-lisp:null))
   (service-namespace (common-lisp:error ":service-namespace is required")
    :type (common-lisp:or service-namespace common-lisp:null))
   (resource-id (common-lisp:error ":resource-id is required") :type
    (common-lisp:or resource-id-max-len1600 common-lisp:null))
   (scalable-dimension (common-lisp:error ":scalable-dimension is required")
    :type (common-lisp:or scalable-dimension common-lisp:null))
   (policy-type (common-lisp:error ":policy-type is required") :type
    (common-lisp:or policy-type common-lisp:null))
   (step-scaling-policy-configuration common-lisp:nil :type
    (common-lisp:or step-scaling-policy-configuration common-lisp:null))
   (target-tracking-scaling-policy-configuration common-lisp:nil :type
    (common-lisp:or target-tracking-scaling-policy-configuration
                    common-lisp:null))
   (alarms common-lisp:nil :type (common-lisp:or alarms common-lisp:null))
   (creation-time (common-lisp:error ":creation-time is required") :type
    (common-lisp:or timestamp-type common-lisp:null)))
 (common-lisp:export (common-lisp:list 'scaling-policy 'make-scaling-policy))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input scaling-policy))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input scaling-policy))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'policy-arn))
      (common-lisp:list
       (common-lisp:cons "PolicyARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'policy-name))
      (common-lisp:list
       (common-lisp:cons "PolicyName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'service-namespace))
      (common-lisp:list
       (common-lisp:cons "ServiceNamespace"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-id))
      (common-lisp:list
       (common-lisp:cons "ResourceId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'scalable-dimension))
      (common-lisp:list
       (common-lisp:cons "ScalableDimension"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'policy-type))
      (common-lisp:list
       (common-lisp:cons "PolicyType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'step-scaling-policy-configuration))
      (common-lisp:list
       (common-lisp:cons "StepScalingPolicyConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'target-tracking-scaling-policy-configuration))
      (common-lisp:list
       (common-lisp:cons "TargetTrackingScalingPolicyConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'alarms))
      (common-lisp:list
       (common-lisp:cons "Alarms"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'creation-time))
      (common-lisp:list
       (common-lisp:cons "CreationTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input scaling-policy))
   common-lisp:nil))
(common-lisp:deftype service-namespace () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (step-adjustment (:copier common-lisp:nil)
      (:conc-name "struct-shape-step-adjustment-"))
   (metric-interval-lower-bound common-lisp:nil :type
    (common-lisp:or metric-scale common-lisp:null))
   (metric-interval-upper-bound common-lisp:nil :type
    (common-lisp:or metric-scale common-lisp:null))
   (scaling-adjustment (common-lisp:error ":scaling-adjustment is required")
    :type (common-lisp:or scaling-adjustment common-lisp:null)))
 (common-lisp:export (common-lisp:list 'step-adjustment 'make-step-adjustment))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input step-adjustment))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input step-adjustment))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'metric-interval-lower-bound))
      (common-lisp:list
       (common-lisp:cons "MetricIntervalLowerBound"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'metric-interval-upper-bound))
      (common-lisp:list
       (common-lisp:cons "MetricIntervalUpperBound"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'scaling-adjustment))
      (common-lisp:list
       (common-lisp:cons "ScalingAdjustment"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input step-adjustment))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype step-adjustments ()
   '(trivial-types:proper-list step-adjustment))
 (common-lisp:defun |make-step-adjustments|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list step-adjustment))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (step-scaling-policy-configuration (:copier common-lisp:nil)
      (:conc-name "struct-shape-step-scaling-policy-configuration-"))
   (adjustment-type common-lisp:nil :type
    (common-lisp:or adjustment-type common-lisp:null))
   (step-adjustments common-lisp:nil :type
    (common-lisp:or step-adjustments common-lisp:null))
   (min-adjustment-magnitude common-lisp:nil :type
    (common-lisp:or min-adjustment-magnitude common-lisp:null))
   (cooldown common-lisp:nil :type (common-lisp:or cooldown common-lisp:null))
   (metric-aggregation-type common-lisp:nil :type
    (common-lisp:or metric-aggregation-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'step-scaling-policy-configuration
                    'make-step-scaling-policy-configuration))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          step-scaling-policy-configuration))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          step-scaling-policy-configuration))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'adjustment-type))
      (common-lisp:list
       (common-lisp:cons "AdjustmentType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'step-adjustments))
      (common-lisp:list
       (common-lisp:cons "StepAdjustments"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'min-adjustment-magnitude))
      (common-lisp:list
       (common-lisp:cons "MinAdjustmentMagnitude"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'cooldown))
      (common-lisp:list
       (common-lisp:cons "Cooldown"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'metric-aggregation-type))
      (common-lisp:list
       (common-lisp:cons "MetricAggregationType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          step-scaling-policy-configuration))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (target-tracking-scaling-policy-configuration (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-target-tracking-scaling-policy-configuration-"))
   (target-value (common-lisp:error ":target-value is required") :type
    (common-lisp:or metric-scale common-lisp:null))
   (predefined-metric-specification common-lisp:nil :type
    (common-lisp:or predefined-metric-specification common-lisp:null))
   (customized-metric-specification common-lisp:nil :type
    (common-lisp:or customized-metric-specification common-lisp:null))
   (scale-out-cooldown common-lisp:nil :type
    (common-lisp:or cooldown common-lisp:null))
   (scale-in-cooldown common-lisp:nil :type
    (common-lisp:or cooldown common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'target-tracking-scaling-policy-configuration
                    'make-target-tracking-scaling-policy-configuration))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          target-tracking-scaling-policy-configuration))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          target-tracking-scaling-policy-configuration))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'target-value))
      (common-lisp:list
       (common-lisp:cons "TargetValue"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'predefined-metric-specification))
      (common-lisp:list
       (common-lisp:cons "PredefinedMetricSpecification"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'customized-metric-specification))
      (common-lisp:list
       (common-lisp:cons "CustomizedMetricSpecification"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'scale-out-cooldown))
      (common-lisp:list
       (common-lisp:cons "ScaleOutCooldown"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'scale-in-cooldown))
      (common-lisp:list
       (common-lisp:cons "ScaleInCooldown"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          target-tracking-scaling-policy-configuration))
   common-lisp:nil))
(common-lisp:deftype timestamp-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:define-condition validation-exception
     (application-autoscaling-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       validation-exception-message)))
 (common-lisp:export
  (common-lisp:list 'validation-exception 'validation-exception-message)))
(common-lisp:deftype xml-string () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defun delete-scaling-policy
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key policy-name service-namespace resource-id
                     scalable-dimension)
   (common-lisp:declare
    (common-lisp:ignorable policy-name service-namespace resource-id
     scalable-dimension))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-scaling-policy-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'application-autoscaling-request aws-sdk/generator/operation::input
        "POST" "/" "DeleteScalingPolicy" "2016-02-06"))
      common-lisp:nil common-lisp:nil
      '(("ConcurrentUpdateException" . concurrent-update-exception)
        ("FailedResourceAccessException" . failed-resource-access-exception)
        ("InternalServiceException" . internal-service-exception)
        ("InvalidNextTokenException" . invalid-next-token-exception)
        ("LimitExceededException" . limit-exceeded-exception)
        ("ObjectNotFoundException" . object-not-found-exception)
        ("ValidationException" . validation-exception)))))
 (common-lisp:export 'delete-scaling-policy))
(common-lisp:progn
 (common-lisp:defun deregister-scalable-target
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key service-namespace resource-id
                     scalable-dimension)
   (common-lisp:declare
    (common-lisp:ignorable service-namespace resource-id scalable-dimension))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-deregister-scalable-target-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'application-autoscaling-request aws-sdk/generator/operation::input
        "POST" "/" "DeregisterScalableTarget" "2016-02-06"))
      common-lisp:nil common-lisp:nil
      '(("ConcurrentUpdateException" . concurrent-update-exception)
        ("FailedResourceAccessException" . failed-resource-access-exception)
        ("InternalServiceException" . internal-service-exception)
        ("InvalidNextTokenException" . invalid-next-token-exception)
        ("LimitExceededException" . limit-exceeded-exception)
        ("ObjectNotFoundException" . object-not-found-exception)
        ("ValidationException" . validation-exception)))))
 (common-lisp:export 'deregister-scalable-target))
(common-lisp:progn
 (common-lisp:defun describe-scalable-targets
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key service-namespace resource-ids
                     scalable-dimension max-results next-token)
   (common-lisp:declare
    (common-lisp:ignorable service-namespace resource-ids scalable-dimension
     max-results next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-describe-scalable-targets-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'application-autoscaling-request aws-sdk/generator/operation::input
        "POST" "/" "DescribeScalableTargets" "2016-02-06"))
      common-lisp:nil common-lisp:nil
      '(("ConcurrentUpdateException" . concurrent-update-exception)
        ("FailedResourceAccessException" . failed-resource-access-exception)
        ("InternalServiceException" . internal-service-exception)
        ("InvalidNextTokenException" . invalid-next-token-exception)
        ("LimitExceededException" . limit-exceeded-exception)
        ("ObjectNotFoundException" . object-not-found-exception)
        ("ValidationException" . validation-exception)))))
 (common-lisp:export 'describe-scalable-targets))
(common-lisp:progn
 (common-lisp:defun describe-scaling-activities
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key service-namespace resource-id
                     scalable-dimension max-results next-token)
   (common-lisp:declare
    (common-lisp:ignorable service-namespace resource-id scalable-dimension
     max-results next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-describe-scaling-activities-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'application-autoscaling-request aws-sdk/generator/operation::input
        "POST" "/" "DescribeScalingActivities" "2016-02-06"))
      common-lisp:nil common-lisp:nil
      '(("ConcurrentUpdateException" . concurrent-update-exception)
        ("FailedResourceAccessException" . failed-resource-access-exception)
        ("InternalServiceException" . internal-service-exception)
        ("InvalidNextTokenException" . invalid-next-token-exception)
        ("LimitExceededException" . limit-exceeded-exception)
        ("ObjectNotFoundException" . object-not-found-exception)
        ("ValidationException" . validation-exception)))))
 (common-lisp:export 'describe-scaling-activities))
(common-lisp:progn
 (common-lisp:defun describe-scaling-policies
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key policy-names service-namespace
                     resource-id scalable-dimension max-results next-token)
   (common-lisp:declare
    (common-lisp:ignorable policy-names service-namespace resource-id
     scalable-dimension max-results next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-describe-scaling-policies-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'application-autoscaling-request aws-sdk/generator/operation::input
        "POST" "/" "DescribeScalingPolicies" "2016-02-06"))
      common-lisp:nil common-lisp:nil
      '(("ConcurrentUpdateException" . concurrent-update-exception)
        ("FailedResourceAccessException" . failed-resource-access-exception)
        ("InternalServiceException" . internal-service-exception)
        ("InvalidNextTokenException" . invalid-next-token-exception)
        ("LimitExceededException" . limit-exceeded-exception)
        ("ObjectNotFoundException" . object-not-found-exception)
        ("ValidationException" . validation-exception)))))
 (common-lisp:export 'describe-scaling-policies))
(common-lisp:progn
 (common-lisp:defun put-scaling-policy
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key policy-name service-namespace resource-id
                     scalable-dimension policy-type
                     step-scaling-policy-configuration
                     target-tracking-scaling-policy-configuration)
   (common-lisp:declare
    (common-lisp:ignorable policy-name service-namespace resource-id
     scalable-dimension policy-type step-scaling-policy-configuration
     target-tracking-scaling-policy-configuration))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-put-scaling-policy-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'application-autoscaling-request aws-sdk/generator/operation::input
        "POST" "/" "PutScalingPolicy" "2016-02-06"))
      common-lisp:nil common-lisp:nil
      '(("ConcurrentUpdateException" . concurrent-update-exception)
        ("FailedResourceAccessException" . failed-resource-access-exception)
        ("InternalServiceException" . internal-service-exception)
        ("InvalidNextTokenException" . invalid-next-token-exception)
        ("LimitExceededException" . limit-exceeded-exception)
        ("ObjectNotFoundException" . object-not-found-exception)
        ("ValidationException" . validation-exception)))))
 (common-lisp:export 'put-scaling-policy))
(common-lisp:progn
 (common-lisp:defun register-scalable-target
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key service-namespace resource-id
                     scalable-dimension min-capacity max-capacity role-arn)
   (common-lisp:declare
    (common-lisp:ignorable service-namespace resource-id scalable-dimension
     min-capacity max-capacity role-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-register-scalable-target-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'application-autoscaling-request aws-sdk/generator/operation::input
        "POST" "/" "RegisterScalableTarget" "2016-02-06"))
      common-lisp:nil common-lisp:nil
      '(("ConcurrentUpdateException" . concurrent-update-exception)
        ("FailedResourceAccessException" . failed-resource-access-exception)
        ("InternalServiceException" . internal-service-exception)
        ("InvalidNextTokenException" . invalid-next-token-exception)
        ("LimitExceededException" . limit-exceeded-exception)
        ("ObjectNotFoundException" . object-not-found-exception)
        ("ValidationException" . validation-exception)))))
 (common-lisp:export 'register-scalable-target))
