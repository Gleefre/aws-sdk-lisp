;; DO NOT EDIT: File is generated by AWS-SDK/GENERATOR.

(common-lisp:defpackage #:aws-sdk/services/elasticache/api
  (:use)
  (:nicknames #:aws/elasticache)
  (:import-from #:aws-sdk/generator/shape)
  (:import-from #:aws-sdk/generator/operation)
  (:import-from #:aws-sdk/api)
  (:import-from #:aws-sdk/request))
(common-lisp:in-package #:aws-sdk/services/elasticache/api)
(common-lisp:progn
 (common-lisp:defclass elasticache-request (aws-sdk/request:request)
                       common-lisp:nil
                       (:default-initargs :service "elasticache"))
 (common-lisp:export 'elasticache-request))
(common-lisp:progn
 (common-lisp:defstruct
     (apicall-rate-for-customer-exceeded-fault (:copier common-lisp:nil)
      (:conc-name "struct-shape-apicall-rate-for-customer-exceeded-fault-")))
 (common-lisp:export
  (common-lisp:list 'apicall-rate-for-customer-exceeded-fault
                    'make-apicall-rate-for-customer-exceeded-fault))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          apicall-rate-for-customer-exceeded-fault))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          apicall-rate-for-customer-exceeded-fault))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          apicall-rate-for-customer-exceeded-fault))
   common-lisp:nil))
(common-lisp:deftype azmode () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (add-tags-to-resource-message (:copier common-lisp:nil)
      (:conc-name "struct-shape-add-tags-to-resource-message-"))
   (resource-name (common-lisp:error ":resource-name is required") :type
    (common-lisp:or string common-lisp:null))
   (tags (common-lisp:error ":tags is required") :type
    (common-lisp:or tag-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'add-tags-to-resource-message
                    'make-add-tags-to-resource-message))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          add-tags-to-resource-message))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          add-tags-to-resource-message))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-name))
      (common-lisp:list
       (common-lisp:cons "ResourceName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          add-tags-to-resource-message))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (allowed-node-type-modifications-message (:copier common-lisp:nil)
      (:conc-name "struct-shape-allowed-node-type-modifications-message-"))
   (scale-up-modifications common-lisp:nil :type
    (common-lisp:or node-type-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'allowed-node-type-modifications-message
                    'make-allowed-node-type-modifications-message))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          allowed-node-type-modifications-message))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          allowed-node-type-modifications-message))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'scale-up-modifications))
      (common-lisp:list
       (common-lisp:cons "ScaleUpModifications"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          allowed-node-type-modifications-message))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (authorization-already-exists-fault (:copier common-lisp:nil)
      (:conc-name "struct-shape-authorization-already-exists-fault-")))
 (common-lisp:export
  (common-lisp:list 'authorization-already-exists-fault
                    'make-authorization-already-exists-fault))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          authorization-already-exists-fault))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          authorization-already-exists-fault))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          authorization-already-exists-fault))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (authorization-not-found-fault (:copier common-lisp:nil)
      (:conc-name "struct-shape-authorization-not-found-fault-")))
 (common-lisp:export
  (common-lisp:list 'authorization-not-found-fault
                    'make-authorization-not-found-fault))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          authorization-not-found-fault))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          authorization-not-found-fault))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          authorization-not-found-fault))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (authorize-cache-security-group-ingress-message (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-authorize-cache-security-group-ingress-message-"))
   (cache-security-group-name
    (common-lisp:error ":cache-security-group-name is required") :type
    (common-lisp:or string common-lisp:null))
   (ec2security-group-name
    (common-lisp:error ":ec2security-group-name is required") :type
    (common-lisp:or string common-lisp:null))
   (ec2security-group-owner-id
    (common-lisp:error ":ec2security-group-owner-id is required") :type
    (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'authorize-cache-security-group-ingress-message
                    'make-authorize-cache-security-group-ingress-message))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          authorize-cache-security-group-ingress-message))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          authorize-cache-security-group-ingress-message))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'cache-security-group-name))
      (common-lisp:list
       (common-lisp:cons "CacheSecurityGroupName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'ec2security-group-name))
      (common-lisp:list
       (common-lisp:cons "EC2SecurityGroupName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'ec2security-group-owner-id))
      (common-lisp:list
       (common-lisp:cons "EC2SecurityGroupOwnerId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          authorize-cache-security-group-ingress-message))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (authorize-cache-security-group-ingress-result (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-authorize-cache-security-group-ingress-result-"))
   (cache-security-group common-lisp:nil :type
    (common-lisp:or cache-security-group common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'authorize-cache-security-group-ingress-result
                    'make-authorize-cache-security-group-ingress-result))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          authorize-cache-security-group-ingress-result))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          authorize-cache-security-group-ingress-result))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'cache-security-group))
      (common-lisp:list
       (common-lisp:cons "CacheSecurityGroup"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          authorize-cache-security-group-ingress-result))
   common-lisp:nil))
(common-lisp:deftype automatic-failover-status () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (availability-zone (:copier common-lisp:nil)
      (:conc-name "struct-shape-availability-zone-"))
   (name common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'availability-zone 'make-availability-zone))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input availability-zone))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input availability-zone))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input availability-zone))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype availability-zones-list ()
   '(trivial-types:proper-list string))
 (common-lisp:defun |make-availability-zones-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list string))
   aws-sdk/generator/shape::members))
(common-lisp:deftype aws-query-error-message () 'common-lisp:string)
(common-lisp:deftype boolean () 'common-lisp:boolean)
(common-lisp:deftype boolean-optional () 'common-lisp:boolean)
(common-lisp:progn
 (common-lisp:defstruct
     (cache-cluster (:copier common-lisp:nil)
      (:conc-name "struct-shape-cache-cluster-"))
   (cache-cluster-id common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (configuration-endpoint common-lisp:nil :type
    (common-lisp:or endpoint common-lisp:null))
   (client-download-landing-page common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (cache-node-type common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (engine common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (engine-version common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (cache-cluster-status common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (num-cache-nodes common-lisp:nil :type
    (common-lisp:or integer-optional common-lisp:null))
   (preferred-availability-zone common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (cache-cluster-create-time common-lisp:nil :type
    (common-lisp:or tstamp common-lisp:null))
   (preferred-maintenance-window common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (pending-modified-values common-lisp:nil :type
    (common-lisp:or pending-modified-values common-lisp:null))
   (notification-configuration common-lisp:nil :type
    (common-lisp:or notification-configuration common-lisp:null))
   (cache-security-groups common-lisp:nil :type
    (common-lisp:or cache-security-group-membership-list common-lisp:null))
   (cache-parameter-group common-lisp:nil :type
    (common-lisp:or cache-parameter-group-status common-lisp:null))
   (cache-subnet-group-name common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (cache-nodes common-lisp:nil :type
    (common-lisp:or cache-node-list common-lisp:null))
   (auto-minor-version-upgrade common-lisp:nil :type
    (common-lisp:or boolean common-lisp:null))
   (security-groups common-lisp:nil :type
    (common-lisp:or security-group-membership-list common-lisp:null))
   (replication-group-id common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (snapshot-retention-limit common-lisp:nil :type
    (common-lisp:or integer-optional common-lisp:null))
   (snapshot-window common-lisp:nil :type
    (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'cache-cluster 'make-cache-cluster))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input cache-cluster))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input cache-cluster))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'cache-cluster-id))
      (common-lisp:list
       (common-lisp:cons "CacheClusterId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'configuration-endpoint))
      (common-lisp:list
       (common-lisp:cons "ConfigurationEndpoint"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'client-download-landing-page))
      (common-lisp:list
       (common-lisp:cons "ClientDownloadLandingPage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'cache-node-type))
      (common-lisp:list
       (common-lisp:cons "CacheNodeType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'engine))
      (common-lisp:list
       (common-lisp:cons "Engine"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'engine-version))
      (common-lisp:list
       (common-lisp:cons "EngineVersion"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'cache-cluster-status))
      (common-lisp:list
       (common-lisp:cons "CacheClusterStatus"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'num-cache-nodes))
      (common-lisp:list
       (common-lisp:cons "NumCacheNodes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'preferred-availability-zone))
      (common-lisp:list
       (common-lisp:cons "PreferredAvailabilityZone"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'cache-cluster-create-time))
      (common-lisp:list
       (common-lisp:cons "CacheClusterCreateTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'preferred-maintenance-window))
      (common-lisp:list
       (common-lisp:cons "PreferredMaintenanceWindow"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'pending-modified-values))
      (common-lisp:list
       (common-lisp:cons "PendingModifiedValues"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'notification-configuration))
      (common-lisp:list
       (common-lisp:cons "NotificationConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'cache-security-groups))
      (common-lisp:list
       (common-lisp:cons "CacheSecurityGroups"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'cache-parameter-group))
      (common-lisp:list
       (common-lisp:cons "CacheParameterGroup"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'cache-subnet-group-name))
      (common-lisp:list
       (common-lisp:cons "CacheSubnetGroupName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'cache-nodes))
      (common-lisp:list
       (common-lisp:cons "CacheNodes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'auto-minor-version-upgrade))
      (common-lisp:list
       (common-lisp:cons "AutoMinorVersionUpgrade"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'security-groups))
      (common-lisp:list
       (common-lisp:cons "SecurityGroups"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'replication-group-id))
      (common-lisp:list
       (common-lisp:cons "ReplicationGroupId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'snapshot-retention-limit))
      (common-lisp:list
       (common-lisp:cons "SnapshotRetentionLimit"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'snapshot-window))
      (common-lisp:list
       (common-lisp:cons "SnapshotWindow"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input cache-cluster))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (cache-cluster-already-exists-fault (:copier common-lisp:nil)
      (:conc-name "struct-shape-cache-cluster-already-exists-fault-")))
 (common-lisp:export
  (common-lisp:list 'cache-cluster-already-exists-fault
                    'make-cache-cluster-already-exists-fault))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          cache-cluster-already-exists-fault))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          cache-cluster-already-exists-fault))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          cache-cluster-already-exists-fault))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype cache-cluster-list ()
   '(trivial-types:proper-list cache-cluster))
 (common-lisp:defun |make-cache-cluster-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list cache-cluster))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (cache-cluster-message (:copier common-lisp:nil)
      (:conc-name "struct-shape-cache-cluster-message-"))
   (marker common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (cache-clusters common-lisp:nil :type
    (common-lisp:or cache-cluster-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'cache-cluster-message 'make-cache-cluster-message))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          cache-cluster-message))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          cache-cluster-message))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'marker))
      (common-lisp:list
       (common-lisp:cons "Marker"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'cache-clusters))
      (common-lisp:list
       (common-lisp:cons "CacheClusters"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          cache-cluster-message))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (cache-cluster-not-found-fault (:copier common-lisp:nil)
      (:conc-name "struct-shape-cache-cluster-not-found-fault-")))
 (common-lisp:export
  (common-lisp:list 'cache-cluster-not-found-fault
                    'make-cache-cluster-not-found-fault))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          cache-cluster-not-found-fault))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          cache-cluster-not-found-fault))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          cache-cluster-not-found-fault))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (cache-engine-version (:copier common-lisp:nil)
      (:conc-name "struct-shape-cache-engine-version-"))
   (engine common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (engine-version common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (cache-parameter-group-family common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (cache-engine-description common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (cache-engine-version-description common-lisp:nil :type
    (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'cache-engine-version 'make-cache-engine-version))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input cache-engine-version))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input cache-engine-version))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'engine))
      (common-lisp:list
       (common-lisp:cons "Engine"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'engine-version))
      (common-lisp:list
       (common-lisp:cons "EngineVersion"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'cache-parameter-group-family))
      (common-lisp:list
       (common-lisp:cons "CacheParameterGroupFamily"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'cache-engine-description))
      (common-lisp:list
       (common-lisp:cons "CacheEngineDescription"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'cache-engine-version-description))
      (common-lisp:list
       (common-lisp:cons "CacheEngineVersionDescription"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input cache-engine-version))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype cache-engine-version-list ()
   '(trivial-types:proper-list cache-engine-version))
 (common-lisp:defun |make-cache-engine-version-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list cache-engine-version))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (cache-engine-version-message (:copier common-lisp:nil)
      (:conc-name "struct-shape-cache-engine-version-message-"))
   (marker common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (cache-engine-versions common-lisp:nil :type
    (common-lisp:or cache-engine-version-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'cache-engine-version-message
                    'make-cache-engine-version-message))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          cache-engine-version-message))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          cache-engine-version-message))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'marker))
      (common-lisp:list
       (common-lisp:cons "Marker"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'cache-engine-versions))
      (common-lisp:list
       (common-lisp:cons "CacheEngineVersions"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          cache-engine-version-message))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (cache-node (:copier common-lisp:nil)
      (:conc-name "struct-shape-cache-node-"))
   (cache-node-id common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (cache-node-status common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (cache-node-create-time common-lisp:nil :type
    (common-lisp:or tstamp common-lisp:null))
   (endpoint common-lisp:nil :type (common-lisp:or endpoint common-lisp:null))
   (parameter-group-status common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (source-cache-node-id common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (customer-availability-zone common-lisp:nil :type
    (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'cache-node 'make-cache-node))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input cache-node))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input cache-node))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'cache-node-id))
      (common-lisp:list
       (common-lisp:cons "CacheNodeId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'cache-node-status))
      (common-lisp:list
       (common-lisp:cons "CacheNodeStatus"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'cache-node-create-time))
      (common-lisp:list
       (common-lisp:cons "CacheNodeCreateTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'endpoint))
      (common-lisp:list
       (common-lisp:cons "Endpoint"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'parameter-group-status))
      (common-lisp:list
       (common-lisp:cons "ParameterGroupStatus"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'source-cache-node-id))
      (common-lisp:list
       (common-lisp:cons "SourceCacheNodeId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'customer-availability-zone))
      (common-lisp:list
       (common-lisp:cons "CustomerAvailabilityZone"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input cache-node))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype cache-node-ids-list ()
   '(trivial-types:proper-list string))
 (common-lisp:defun |make-cache-node-ids-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list string))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype cache-node-list ()
   '(trivial-types:proper-list cache-node))
 (common-lisp:defun |make-cache-node-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list cache-node))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (cache-node-type-specific-parameter (:copier common-lisp:nil)
      (:conc-name "struct-shape-cache-node-type-specific-parameter-"))
   (parameter-name common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (description common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (source common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (data-type common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (allowed-values common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (is-modifiable common-lisp:nil :type
    (common-lisp:or boolean common-lisp:null))
   (minimum-engine-version common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (cache-node-type-specific-values common-lisp:nil :type
    (common-lisp:or cache-node-type-specific-value-list common-lisp:null))
   (change-type common-lisp:nil :type
    (common-lisp:or change-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'cache-node-type-specific-parameter
                    'make-cache-node-type-specific-parameter))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          cache-node-type-specific-parameter))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          cache-node-type-specific-parameter))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'parameter-name))
      (common-lisp:list
       (common-lisp:cons "ParameterName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'source))
      (common-lisp:list
       (common-lisp:cons "Source"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'data-type))
      (common-lisp:list
       (common-lisp:cons "DataType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'allowed-values))
      (common-lisp:list
       (common-lisp:cons "AllowedValues"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'is-modifiable))
      (common-lisp:list
       (common-lisp:cons "IsModifiable"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'minimum-engine-version))
      (common-lisp:list
       (common-lisp:cons "MinimumEngineVersion"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'cache-node-type-specific-values))
      (common-lisp:list
       (common-lisp:cons "CacheNodeTypeSpecificValues"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'change-type))
      (common-lisp:list
       (common-lisp:cons "ChangeType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          cache-node-type-specific-parameter))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype cache-node-type-specific-parameters-list ()
   '(trivial-types:proper-list cache-node-type-specific-parameter))
 (common-lisp:defun |make-cache-node-type-specific-parameters-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            cache-node-type-specific-parameter))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (cache-node-type-specific-value (:copier common-lisp:nil)
      (:conc-name "struct-shape-cache-node-type-specific-value-"))
   (cache-node-type common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (value common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'cache-node-type-specific-value
                    'make-cache-node-type-specific-value))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          cache-node-type-specific-value))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          cache-node-type-specific-value))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'cache-node-type))
      (common-lisp:list
       (common-lisp:cons "CacheNodeType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'value))
      (common-lisp:list
       (common-lisp:cons "Value"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          cache-node-type-specific-value))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype cache-node-type-specific-value-list ()
   '(trivial-types:proper-list cache-node-type-specific-value))
 (common-lisp:defun |make-cache-node-type-specific-value-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            cache-node-type-specific-value))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (cache-parameter-group (:copier common-lisp:nil)
      (:conc-name "struct-shape-cache-parameter-group-"))
   (cache-parameter-group-name common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (cache-parameter-group-family common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (description common-lisp:nil :type
    (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'cache-parameter-group 'make-cache-parameter-group))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          cache-parameter-group))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          cache-parameter-group))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'cache-parameter-group-name))
      (common-lisp:list
       (common-lisp:cons "CacheParameterGroupName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'cache-parameter-group-family))
      (common-lisp:list
       (common-lisp:cons "CacheParameterGroupFamily"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          cache-parameter-group))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (cache-parameter-group-already-exists-fault (:copier common-lisp:nil)
      (:conc-name "struct-shape-cache-parameter-group-already-exists-fault-")))
 (common-lisp:export
  (common-lisp:list 'cache-parameter-group-already-exists-fault
                    'make-cache-parameter-group-already-exists-fault))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          cache-parameter-group-already-exists-fault))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          cache-parameter-group-already-exists-fault))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          cache-parameter-group-already-exists-fault))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (cache-parameter-group-details (:copier common-lisp:nil)
      (:conc-name "struct-shape-cache-parameter-group-details-"))
   (marker common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (parameters common-lisp:nil :type
    (common-lisp:or parameters-list common-lisp:null))
   (cache-node-type-specific-parameters common-lisp:nil :type
    (common-lisp:or cache-node-type-specific-parameters-list
                    common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'cache-parameter-group-details
                    'make-cache-parameter-group-details))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          cache-parameter-group-details))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          cache-parameter-group-details))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'marker))
      (common-lisp:list
       (common-lisp:cons "Marker"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'parameters))
      (common-lisp:list
       (common-lisp:cons "Parameters"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'cache-node-type-specific-parameters))
      (common-lisp:list
       (common-lisp:cons "CacheNodeTypeSpecificParameters"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          cache-parameter-group-details))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype cache-parameter-group-list ()
   '(trivial-types:proper-list cache-parameter-group))
 (common-lisp:defun |make-cache-parameter-group-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list cache-parameter-group))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (cache-parameter-group-name-message (:copier common-lisp:nil)
      (:conc-name "struct-shape-cache-parameter-group-name-message-"))
   (cache-parameter-group-name common-lisp:nil :type
    (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'cache-parameter-group-name-message
                    'make-cache-parameter-group-name-message))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          cache-parameter-group-name-message))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          cache-parameter-group-name-message))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'cache-parameter-group-name))
      (common-lisp:list
       (common-lisp:cons "CacheParameterGroupName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          cache-parameter-group-name-message))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (cache-parameter-group-not-found-fault (:copier common-lisp:nil)
      (:conc-name "struct-shape-cache-parameter-group-not-found-fault-")))
 (common-lisp:export
  (common-lisp:list 'cache-parameter-group-not-found-fault
                    'make-cache-parameter-group-not-found-fault))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          cache-parameter-group-not-found-fault))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          cache-parameter-group-not-found-fault))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          cache-parameter-group-not-found-fault))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (cache-parameter-group-quota-exceeded-fault (:copier common-lisp:nil)
      (:conc-name "struct-shape-cache-parameter-group-quota-exceeded-fault-")))
 (common-lisp:export
  (common-lisp:list 'cache-parameter-group-quota-exceeded-fault
                    'make-cache-parameter-group-quota-exceeded-fault))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          cache-parameter-group-quota-exceeded-fault))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          cache-parameter-group-quota-exceeded-fault))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          cache-parameter-group-quota-exceeded-fault))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (cache-parameter-group-status (:copier common-lisp:nil)
      (:conc-name "struct-shape-cache-parameter-group-status-"))
   (cache-parameter-group-name common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (parameter-apply-status common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (cache-node-ids-to-reboot common-lisp:nil :type
    (common-lisp:or cache-node-ids-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'cache-parameter-group-status
                    'make-cache-parameter-group-status))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          cache-parameter-group-status))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          cache-parameter-group-status))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'cache-parameter-group-name))
      (common-lisp:list
       (common-lisp:cons "CacheParameterGroupName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'parameter-apply-status))
      (common-lisp:list
       (common-lisp:cons "ParameterApplyStatus"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'cache-node-ids-to-reboot))
      (common-lisp:list
       (common-lisp:cons "CacheNodeIdsToReboot"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          cache-parameter-group-status))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (cache-parameter-groups-message (:copier common-lisp:nil)
      (:conc-name "struct-shape-cache-parameter-groups-message-"))
   (marker common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (cache-parameter-groups common-lisp:nil :type
    (common-lisp:or cache-parameter-group-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'cache-parameter-groups-message
                    'make-cache-parameter-groups-message))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          cache-parameter-groups-message))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          cache-parameter-groups-message))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'marker))
      (common-lisp:list
       (common-lisp:cons "Marker"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'cache-parameter-groups))
      (common-lisp:list
       (common-lisp:cons "CacheParameterGroups"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          cache-parameter-groups-message))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (cache-security-group (:copier common-lisp:nil)
      (:conc-name "struct-shape-cache-security-group-"))
   (owner-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (cache-security-group-name common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (description common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (ec2security-groups common-lisp:nil :type
    (common-lisp:or ec2security-group-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'cache-security-group 'make-cache-security-group))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input cache-security-group))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input cache-security-group))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'owner-id))
      (common-lisp:list
       (common-lisp:cons "OwnerId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'cache-security-group-name))
      (common-lisp:list
       (common-lisp:cons "CacheSecurityGroupName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'ec2security-groups))
      (common-lisp:list
       (common-lisp:cons "EC2SecurityGroups"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input cache-security-group))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (cache-security-group-already-exists-fault (:copier common-lisp:nil)
      (:conc-name "struct-shape-cache-security-group-already-exists-fault-")))
 (common-lisp:export
  (common-lisp:list 'cache-security-group-already-exists-fault
                    'make-cache-security-group-already-exists-fault))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          cache-security-group-already-exists-fault))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          cache-security-group-already-exists-fault))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          cache-security-group-already-exists-fault))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (cache-security-group-membership (:copier common-lisp:nil)
      (:conc-name "struct-shape-cache-security-group-membership-"))
   (cache-security-group-name common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (status common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'cache-security-group-membership
                    'make-cache-security-group-membership))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          cache-security-group-membership))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          cache-security-group-membership))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'cache-security-group-name))
      (common-lisp:list
       (common-lisp:cons "CacheSecurityGroupName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "Status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          cache-security-group-membership))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype cache-security-group-membership-list ()
   '(trivial-types:proper-list cache-security-group-membership))
 (common-lisp:defun |make-cache-security-group-membership-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            cache-security-group-membership))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (cache-security-group-message (:copier common-lisp:nil)
      (:conc-name "struct-shape-cache-security-group-message-"))
   (marker common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (cache-security-groups common-lisp:nil :type
    (common-lisp:or cache-security-groups common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'cache-security-group-message
                    'make-cache-security-group-message))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          cache-security-group-message))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          cache-security-group-message))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'marker))
      (common-lisp:list
       (common-lisp:cons "Marker"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'cache-security-groups))
      (common-lisp:list
       (common-lisp:cons "CacheSecurityGroups"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          cache-security-group-message))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype cache-security-group-name-list ()
   '(trivial-types:proper-list string))
 (common-lisp:defun |make-cache-security-group-name-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list string))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (cache-security-group-not-found-fault (:copier common-lisp:nil)
      (:conc-name "struct-shape-cache-security-group-not-found-fault-")))
 (common-lisp:export
  (common-lisp:list 'cache-security-group-not-found-fault
                    'make-cache-security-group-not-found-fault))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          cache-security-group-not-found-fault))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          cache-security-group-not-found-fault))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          cache-security-group-not-found-fault))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (cache-security-group-quota-exceeded-fault (:copier common-lisp:nil)
      (:conc-name "struct-shape-cache-security-group-quota-exceeded-fault-")))
 (common-lisp:export
  (common-lisp:list 'cache-security-group-quota-exceeded-fault
                    'make-cache-security-group-quota-exceeded-fault))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          cache-security-group-quota-exceeded-fault))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          cache-security-group-quota-exceeded-fault))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          cache-security-group-quota-exceeded-fault))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype cache-security-groups ()
   '(trivial-types:proper-list cache-security-group))
 (common-lisp:defun |make-cache-security-groups|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list cache-security-group))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (cache-subnet-group (:copier common-lisp:nil)
      (:conc-name "struct-shape-cache-subnet-group-"))
   (cache-subnet-group-name common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (cache-subnet-group-description common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (vpc-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (subnets common-lisp:nil :type
    (common-lisp:or subnet-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'cache-subnet-group 'make-cache-subnet-group))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input cache-subnet-group))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input cache-subnet-group))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'cache-subnet-group-name))
      (common-lisp:list
       (common-lisp:cons "CacheSubnetGroupName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'cache-subnet-group-description))
      (common-lisp:list
       (common-lisp:cons "CacheSubnetGroupDescription"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'vpc-id))
      (common-lisp:list
       (common-lisp:cons "VpcId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'subnets))
      (common-lisp:list
       (common-lisp:cons "Subnets"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input cache-subnet-group))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (cache-subnet-group-already-exists-fault (:copier common-lisp:nil)
      (:conc-name "struct-shape-cache-subnet-group-already-exists-fault-")))
 (common-lisp:export
  (common-lisp:list 'cache-subnet-group-already-exists-fault
                    'make-cache-subnet-group-already-exists-fault))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          cache-subnet-group-already-exists-fault))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          cache-subnet-group-already-exists-fault))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          cache-subnet-group-already-exists-fault))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (cache-subnet-group-in-use (:copier common-lisp:nil)
      (:conc-name "struct-shape-cache-subnet-group-in-use-")))
 (common-lisp:export
  (common-lisp:list 'cache-subnet-group-in-use
                    'make-cache-subnet-group-in-use))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          cache-subnet-group-in-use))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          cache-subnet-group-in-use))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          cache-subnet-group-in-use))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (cache-subnet-group-message (:copier common-lisp:nil)
      (:conc-name "struct-shape-cache-subnet-group-message-"))
   (marker common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (cache-subnet-groups common-lisp:nil :type
    (common-lisp:or cache-subnet-groups common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'cache-subnet-group-message
                    'make-cache-subnet-group-message))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          cache-subnet-group-message))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          cache-subnet-group-message))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'marker))
      (common-lisp:list
       (common-lisp:cons "Marker"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'cache-subnet-groups))
      (common-lisp:list
       (common-lisp:cons "CacheSubnetGroups"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          cache-subnet-group-message))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (cache-subnet-group-not-found-fault (:copier common-lisp:nil)
      (:conc-name "struct-shape-cache-subnet-group-not-found-fault-")))
 (common-lisp:export
  (common-lisp:list 'cache-subnet-group-not-found-fault
                    'make-cache-subnet-group-not-found-fault))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          cache-subnet-group-not-found-fault))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          cache-subnet-group-not-found-fault))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          cache-subnet-group-not-found-fault))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (cache-subnet-group-quota-exceeded-fault (:copier common-lisp:nil)
      (:conc-name "struct-shape-cache-subnet-group-quota-exceeded-fault-")))
 (common-lisp:export
  (common-lisp:list 'cache-subnet-group-quota-exceeded-fault
                    'make-cache-subnet-group-quota-exceeded-fault))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          cache-subnet-group-quota-exceeded-fault))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          cache-subnet-group-quota-exceeded-fault))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          cache-subnet-group-quota-exceeded-fault))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype cache-subnet-groups ()
   '(trivial-types:proper-list cache-subnet-group))
 (common-lisp:defun |make-cache-subnet-groups|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list cache-subnet-group))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (cache-subnet-quota-exceeded-fault (:copier common-lisp:nil)
      (:conc-name "struct-shape-cache-subnet-quota-exceeded-fault-")))
 (common-lisp:export
  (common-lisp:list 'cache-subnet-quota-exceeded-fault
                    'make-cache-subnet-quota-exceeded-fault))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          cache-subnet-quota-exceeded-fault))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          cache-subnet-quota-exceeded-fault))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          cache-subnet-quota-exceeded-fault))
   common-lisp:nil))
(common-lisp:deftype change-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype cluster-id-list () '(trivial-types:proper-list string))
 (common-lisp:defun |make-cluster-id-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list string))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (cluster-quota-for-customer-exceeded-fault (:copier common-lisp:nil)
      (:conc-name "struct-shape-cluster-quota-for-customer-exceeded-fault-")))
 (common-lisp:export
  (common-lisp:list 'cluster-quota-for-customer-exceeded-fault
                    'make-cluster-quota-for-customer-exceeded-fault))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          cluster-quota-for-customer-exceeded-fault))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          cluster-quota-for-customer-exceeded-fault))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          cluster-quota-for-customer-exceeded-fault))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (copy-snapshot-message (:copier common-lisp:nil)
      (:conc-name "struct-shape-copy-snapshot-message-"))
   (source-snapshot-name
    (common-lisp:error ":source-snapshot-name is required") :type
    (common-lisp:or string common-lisp:null))
   (target-snapshot-name
    (common-lisp:error ":target-snapshot-name is required") :type
    (common-lisp:or string common-lisp:null))
   (target-bucket common-lisp:nil :type
    (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'copy-snapshot-message 'make-copy-snapshot-message))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          copy-snapshot-message))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          copy-snapshot-message))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'source-snapshot-name))
      (common-lisp:list
       (common-lisp:cons "SourceSnapshotName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'target-snapshot-name))
      (common-lisp:list
       (common-lisp:cons "TargetSnapshotName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'target-bucket))
      (common-lisp:list
       (common-lisp:cons "TargetBucket"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          copy-snapshot-message))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (copy-snapshot-result (:copier common-lisp:nil)
      (:conc-name "struct-shape-copy-snapshot-result-"))
   (snapshot common-lisp:nil :type (common-lisp:or snapshot common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'copy-snapshot-result 'make-copy-snapshot-result))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input copy-snapshot-result))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input copy-snapshot-result))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'snapshot))
      (common-lisp:list
       (common-lisp:cons "Snapshot"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input copy-snapshot-result))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-cache-cluster-message (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-cache-cluster-message-"))
   (cache-cluster-id (common-lisp:error ":cache-cluster-id is required") :type
    (common-lisp:or string common-lisp:null))
   (replication-group-id common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (azmode common-lisp:nil :type (common-lisp:or azmode common-lisp:null))
   (preferred-availability-zone common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (preferred-availability-zones common-lisp:nil :type
    (common-lisp:or preferred-availability-zone-list common-lisp:null))
   (num-cache-nodes common-lisp:nil :type
    (common-lisp:or integer-optional common-lisp:null))
   (cache-node-type common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (engine common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (engine-version common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (cache-parameter-group-name common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (cache-subnet-group-name common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (cache-security-group-names common-lisp:nil :type
    (common-lisp:or cache-security-group-name-list common-lisp:null))
   (security-group-ids common-lisp:nil :type
    (common-lisp:or security-group-ids-list common-lisp:null))
   (tags common-lisp:nil :type (common-lisp:or tag-list common-lisp:null))
   (snapshot-arns common-lisp:nil :type
    (common-lisp:or snapshot-arns-list common-lisp:null))
   (snapshot-name common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (preferred-maintenance-window common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (port common-lisp:nil :type
    (common-lisp:or integer-optional common-lisp:null))
   (notification-topic-arn common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (auto-minor-version-upgrade common-lisp:nil :type
    (common-lisp:or boolean-optional common-lisp:null))
   (snapshot-retention-limit common-lisp:nil :type
    (common-lisp:or integer-optional common-lisp:null))
   (snapshot-window common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (auth-token common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-cache-cluster-message
                    'make-create-cache-cluster-message))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-cache-cluster-message))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-cache-cluster-message))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'cache-cluster-id))
      (common-lisp:list
       (common-lisp:cons "CacheClusterId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'replication-group-id))
      (common-lisp:list
       (common-lisp:cons "ReplicationGroupId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'azmode))
      (common-lisp:list
       (common-lisp:cons "AZMode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'preferred-availability-zone))
      (common-lisp:list
       (common-lisp:cons "PreferredAvailabilityZone"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'preferred-availability-zones))
      (common-lisp:list
       (common-lisp:cons "PreferredAvailabilityZones"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'num-cache-nodes))
      (common-lisp:list
       (common-lisp:cons "NumCacheNodes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'cache-node-type))
      (common-lisp:list
       (common-lisp:cons "CacheNodeType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'engine))
      (common-lisp:list
       (common-lisp:cons "Engine"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'engine-version))
      (common-lisp:list
       (common-lisp:cons "EngineVersion"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'cache-parameter-group-name))
      (common-lisp:list
       (common-lisp:cons "CacheParameterGroupName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'cache-subnet-group-name))
      (common-lisp:list
       (common-lisp:cons "CacheSubnetGroupName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'cache-security-group-names))
      (common-lisp:list
       (common-lisp:cons "CacheSecurityGroupNames"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'security-group-ids))
      (common-lisp:list
       (common-lisp:cons "SecurityGroupIds"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'snapshot-arns))
      (common-lisp:list
       (common-lisp:cons "SnapshotArns"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'snapshot-name))
      (common-lisp:list
       (common-lisp:cons "SnapshotName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'preferred-maintenance-window))
      (common-lisp:list
       (common-lisp:cons "PreferredMaintenanceWindow"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'port))
      (common-lisp:list
       (common-lisp:cons "Port"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'notification-topic-arn))
      (common-lisp:list
       (common-lisp:cons "NotificationTopicArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'auto-minor-version-upgrade))
      (common-lisp:list
       (common-lisp:cons "AutoMinorVersionUpgrade"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'snapshot-retention-limit))
      (common-lisp:list
       (common-lisp:cons "SnapshotRetentionLimit"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'snapshot-window))
      (common-lisp:list
       (common-lisp:cons "SnapshotWindow"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'auth-token))
      (common-lisp:list
       (common-lisp:cons "AuthToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-cache-cluster-message))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-cache-cluster-result (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-cache-cluster-result-"))
   (cache-cluster common-lisp:nil :type
    (common-lisp:or cache-cluster common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-cache-cluster-result
                    'make-create-cache-cluster-result))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-cache-cluster-result))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-cache-cluster-result))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'cache-cluster))
      (common-lisp:list
       (common-lisp:cons "CacheCluster"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-cache-cluster-result))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-cache-parameter-group-message (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-cache-parameter-group-message-"))
   (cache-parameter-group-name
    (common-lisp:error ":cache-parameter-group-name is required") :type
    (common-lisp:or string common-lisp:null))
   (cache-parameter-group-family
    (common-lisp:error ":cache-parameter-group-family is required") :type
    (common-lisp:or string common-lisp:null))
   (description (common-lisp:error ":description is required") :type
    (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-cache-parameter-group-message
                    'make-create-cache-parameter-group-message))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-cache-parameter-group-message))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-cache-parameter-group-message))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'cache-parameter-group-name))
      (common-lisp:list
       (common-lisp:cons "CacheParameterGroupName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'cache-parameter-group-family))
      (common-lisp:list
       (common-lisp:cons "CacheParameterGroupFamily"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-cache-parameter-group-message))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-cache-parameter-group-result (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-cache-parameter-group-result-"))
   (cache-parameter-group common-lisp:nil :type
    (common-lisp:or cache-parameter-group common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-cache-parameter-group-result
                    'make-create-cache-parameter-group-result))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-cache-parameter-group-result))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-cache-parameter-group-result))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'cache-parameter-group))
      (common-lisp:list
       (common-lisp:cons "CacheParameterGroup"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-cache-parameter-group-result))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-cache-security-group-message (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-cache-security-group-message-"))
   (cache-security-group-name
    (common-lisp:error ":cache-security-group-name is required") :type
    (common-lisp:or string common-lisp:null))
   (description (common-lisp:error ":description is required") :type
    (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-cache-security-group-message
                    'make-create-cache-security-group-message))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-cache-security-group-message))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-cache-security-group-message))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'cache-security-group-name))
      (common-lisp:list
       (common-lisp:cons "CacheSecurityGroupName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-cache-security-group-message))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-cache-security-group-result (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-cache-security-group-result-"))
   (cache-security-group common-lisp:nil :type
    (common-lisp:or cache-security-group common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-cache-security-group-result
                    'make-create-cache-security-group-result))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-cache-security-group-result))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-cache-security-group-result))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'cache-security-group))
      (common-lisp:list
       (common-lisp:cons "CacheSecurityGroup"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-cache-security-group-result))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-cache-subnet-group-message (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-cache-subnet-group-message-"))
   (cache-subnet-group-name
    (common-lisp:error ":cache-subnet-group-name is required") :type
    (common-lisp:or string common-lisp:null))
   (cache-subnet-group-description
    (common-lisp:error ":cache-subnet-group-description is required") :type
    (common-lisp:or string common-lisp:null))
   (subnet-ids (common-lisp:error ":subnet-ids is required") :type
    (common-lisp:or subnet-identifier-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-cache-subnet-group-message
                    'make-create-cache-subnet-group-message))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-cache-subnet-group-message))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-cache-subnet-group-message))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'cache-subnet-group-name))
      (common-lisp:list
       (common-lisp:cons "CacheSubnetGroupName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'cache-subnet-group-description))
      (common-lisp:list
       (common-lisp:cons "CacheSubnetGroupDescription"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'subnet-ids))
      (common-lisp:list
       (common-lisp:cons "SubnetIds"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-cache-subnet-group-message))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-cache-subnet-group-result (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-cache-subnet-group-result-"))
   (cache-subnet-group common-lisp:nil :type
    (common-lisp:or cache-subnet-group common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-cache-subnet-group-result
                    'make-create-cache-subnet-group-result))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-cache-subnet-group-result))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-cache-subnet-group-result))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'cache-subnet-group))
      (common-lisp:list
       (common-lisp:cons "CacheSubnetGroup"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-cache-subnet-group-result))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-replication-group-message (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-replication-group-message-"))
   (replication-group-id
    (common-lisp:error ":replication-group-id is required") :type
    (common-lisp:or string common-lisp:null))
   (replication-group-description
    (common-lisp:error ":replication-group-description is required") :type
    (common-lisp:or string common-lisp:null))
   (primary-cluster-id common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (automatic-failover-enabled common-lisp:nil :type
    (common-lisp:or boolean-optional common-lisp:null))
   (num-cache-clusters common-lisp:nil :type
    (common-lisp:or integer-optional common-lisp:null))
   (preferred-cache-cluster-azs common-lisp:nil :type
    (common-lisp:or availability-zones-list common-lisp:null))
   (num-node-groups common-lisp:nil :type
    (common-lisp:or integer-optional common-lisp:null))
   (replicas-per-node-group common-lisp:nil :type
    (common-lisp:or integer-optional common-lisp:null))
   (node-group-configuration common-lisp:nil :type
    (common-lisp:or node-group-configuration-list common-lisp:null))
   (cache-node-type common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (engine common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (engine-version common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (cache-parameter-group-name common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (cache-subnet-group-name common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (cache-security-group-names common-lisp:nil :type
    (common-lisp:or cache-security-group-name-list common-lisp:null))
   (security-group-ids common-lisp:nil :type
    (common-lisp:or security-group-ids-list common-lisp:null))
   (tags common-lisp:nil :type (common-lisp:or tag-list common-lisp:null))
   (snapshot-arns common-lisp:nil :type
    (common-lisp:or snapshot-arns-list common-lisp:null))
   (snapshot-name common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (preferred-maintenance-window common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (port common-lisp:nil :type
    (common-lisp:or integer-optional common-lisp:null))
   (notification-topic-arn common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (auto-minor-version-upgrade common-lisp:nil :type
    (common-lisp:or boolean-optional common-lisp:null))
   (snapshot-retention-limit common-lisp:nil :type
    (common-lisp:or integer-optional common-lisp:null))
   (snapshot-window common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (auth-token common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-replication-group-message
                    'make-create-replication-group-message))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-replication-group-message))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-replication-group-message))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'replication-group-id))
      (common-lisp:list
       (common-lisp:cons "ReplicationGroupId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'replication-group-description))
      (common-lisp:list
       (common-lisp:cons "ReplicationGroupDescription"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'primary-cluster-id))
      (common-lisp:list
       (common-lisp:cons "PrimaryClusterId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'automatic-failover-enabled))
      (common-lisp:list
       (common-lisp:cons "AutomaticFailoverEnabled"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'num-cache-clusters))
      (common-lisp:list
       (common-lisp:cons "NumCacheClusters"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'preferred-cache-cluster-azs))
      (common-lisp:list
       (common-lisp:cons "PreferredCacheClusterAZs"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'num-node-groups))
      (common-lisp:list
       (common-lisp:cons "NumNodeGroups"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'replicas-per-node-group))
      (common-lisp:list
       (common-lisp:cons "ReplicasPerNodeGroup"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'node-group-configuration))
      (common-lisp:list
       (common-lisp:cons "NodeGroupConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'cache-node-type))
      (common-lisp:list
       (common-lisp:cons "CacheNodeType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'engine))
      (common-lisp:list
       (common-lisp:cons "Engine"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'engine-version))
      (common-lisp:list
       (common-lisp:cons "EngineVersion"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'cache-parameter-group-name))
      (common-lisp:list
       (common-lisp:cons "CacheParameterGroupName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'cache-subnet-group-name))
      (common-lisp:list
       (common-lisp:cons "CacheSubnetGroupName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'cache-security-group-names))
      (common-lisp:list
       (common-lisp:cons "CacheSecurityGroupNames"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'security-group-ids))
      (common-lisp:list
       (common-lisp:cons "SecurityGroupIds"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'snapshot-arns))
      (common-lisp:list
       (common-lisp:cons "SnapshotArns"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'snapshot-name))
      (common-lisp:list
       (common-lisp:cons "SnapshotName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'preferred-maintenance-window))
      (common-lisp:list
       (common-lisp:cons "PreferredMaintenanceWindow"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'port))
      (common-lisp:list
       (common-lisp:cons "Port"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'notification-topic-arn))
      (common-lisp:list
       (common-lisp:cons "NotificationTopicArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'auto-minor-version-upgrade))
      (common-lisp:list
       (common-lisp:cons "AutoMinorVersionUpgrade"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'snapshot-retention-limit))
      (common-lisp:list
       (common-lisp:cons "SnapshotRetentionLimit"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'snapshot-window))
      (common-lisp:list
       (common-lisp:cons "SnapshotWindow"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'auth-token))
      (common-lisp:list
       (common-lisp:cons "AuthToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-replication-group-message))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-replication-group-result (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-replication-group-result-"))
   (replication-group common-lisp:nil :type
    (common-lisp:or replication-group common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-replication-group-result
                    'make-create-replication-group-result))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-replication-group-result))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-replication-group-result))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'replication-group))
      (common-lisp:list
       (common-lisp:cons "ReplicationGroup"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-replication-group-result))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-snapshot-message (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-snapshot-message-"))
   (replication-group-id common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (cache-cluster-id common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (snapshot-name (common-lisp:error ":snapshot-name is required") :type
    (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-snapshot-message 'make-create-snapshot-message))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-snapshot-message))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-snapshot-message))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'replication-group-id))
      (common-lisp:list
       (common-lisp:cons "ReplicationGroupId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'cache-cluster-id))
      (common-lisp:list
       (common-lisp:cons "CacheClusterId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'snapshot-name))
      (common-lisp:list
       (common-lisp:cons "SnapshotName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-snapshot-message))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (create-snapshot-result (:copier common-lisp:nil)
      (:conc-name "struct-shape-create-snapshot-result-"))
   (snapshot common-lisp:nil :type (common-lisp:or snapshot common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-snapshot-result 'make-create-snapshot-result))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-snapshot-result))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-snapshot-result))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'snapshot))
      (common-lisp:list
       (common-lisp:cons "Snapshot"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-snapshot-result))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-cache-cluster-message (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-cache-cluster-message-"))
   (cache-cluster-id (common-lisp:error ":cache-cluster-id is required") :type
    (common-lisp:or string common-lisp:null))
   (final-snapshot-identifier common-lisp:nil :type
    (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-cache-cluster-message
                    'make-delete-cache-cluster-message))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-cache-cluster-message))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-cache-cluster-message))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'cache-cluster-id))
      (common-lisp:list
       (common-lisp:cons "CacheClusterId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'final-snapshot-identifier))
      (common-lisp:list
       (common-lisp:cons "FinalSnapshotIdentifier"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-cache-cluster-message))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-cache-cluster-result (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-cache-cluster-result-"))
   (cache-cluster common-lisp:nil :type
    (common-lisp:or cache-cluster common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-cache-cluster-result
                    'make-delete-cache-cluster-result))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-cache-cluster-result))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-cache-cluster-result))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'cache-cluster))
      (common-lisp:list
       (common-lisp:cons "CacheCluster"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-cache-cluster-result))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-cache-parameter-group-message (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-cache-parameter-group-message-"))
   (cache-parameter-group-name
    (common-lisp:error ":cache-parameter-group-name is required") :type
    (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-cache-parameter-group-message
                    'make-delete-cache-parameter-group-message))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-cache-parameter-group-message))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-cache-parameter-group-message))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'cache-parameter-group-name))
      (common-lisp:list
       (common-lisp:cons "CacheParameterGroupName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-cache-parameter-group-message))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-cache-security-group-message (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-cache-security-group-message-"))
   (cache-security-group-name
    (common-lisp:error ":cache-security-group-name is required") :type
    (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-cache-security-group-message
                    'make-delete-cache-security-group-message))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-cache-security-group-message))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-cache-security-group-message))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'cache-security-group-name))
      (common-lisp:list
       (common-lisp:cons "CacheSecurityGroupName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-cache-security-group-message))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-cache-subnet-group-message (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-cache-subnet-group-message-"))
   (cache-subnet-group-name
    (common-lisp:error ":cache-subnet-group-name is required") :type
    (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-cache-subnet-group-message
                    'make-delete-cache-subnet-group-message))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-cache-subnet-group-message))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-cache-subnet-group-message))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'cache-subnet-group-name))
      (common-lisp:list
       (common-lisp:cons "CacheSubnetGroupName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-cache-subnet-group-message))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-replication-group-message (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-replication-group-message-"))
   (replication-group-id
    (common-lisp:error ":replication-group-id is required") :type
    (common-lisp:or string common-lisp:null))
   (retain-primary-cluster common-lisp:nil :type
    (common-lisp:or boolean-optional common-lisp:null))
   (final-snapshot-identifier common-lisp:nil :type
    (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-replication-group-message
                    'make-delete-replication-group-message))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-replication-group-message))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-replication-group-message))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'replication-group-id))
      (common-lisp:list
       (common-lisp:cons "ReplicationGroupId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'retain-primary-cluster))
      (common-lisp:list
       (common-lisp:cons "RetainPrimaryCluster"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'final-snapshot-identifier))
      (common-lisp:list
       (common-lisp:cons "FinalSnapshotIdentifier"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-replication-group-message))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-replication-group-result (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-replication-group-result-"))
   (replication-group common-lisp:nil :type
    (common-lisp:or replication-group common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-replication-group-result
                    'make-delete-replication-group-result))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-replication-group-result))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-replication-group-result))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'replication-group))
      (common-lisp:list
       (common-lisp:cons "ReplicationGroup"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-replication-group-result))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-snapshot-message (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-snapshot-message-"))
   (snapshot-name (common-lisp:error ":snapshot-name is required") :type
    (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-snapshot-message 'make-delete-snapshot-message))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-snapshot-message))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-snapshot-message))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'snapshot-name))
      (common-lisp:list
       (common-lisp:cons "SnapshotName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-snapshot-message))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-snapshot-result (:copier common-lisp:nil)
      (:conc-name "struct-shape-delete-snapshot-result-"))
   (snapshot common-lisp:nil :type (common-lisp:or snapshot common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-snapshot-result 'make-delete-snapshot-result))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-snapshot-result))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-snapshot-result))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'snapshot))
      (common-lisp:list
       (common-lisp:cons "Snapshot"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-snapshot-result))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-cache-clusters-message (:copier common-lisp:nil)
      (:conc-name "struct-shape-describe-cache-clusters-message-"))
   (cache-cluster-id common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (max-records common-lisp:nil :type
    (common-lisp:or integer-optional common-lisp:null))
   (marker common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (show-cache-node-info common-lisp:nil :type
    (common-lisp:or boolean-optional common-lisp:null))
   (show-cache-clusters-not-in-replication-groups common-lisp:nil :type
    (common-lisp:or boolean-optional common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-cache-clusters-message
                    'make-describe-cache-clusters-message))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-cache-clusters-message))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-cache-clusters-message))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'cache-cluster-id))
      (common-lisp:list
       (common-lisp:cons "CacheClusterId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-records))
      (common-lisp:list
       (common-lisp:cons "MaxRecords"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'marker))
      (common-lisp:list
       (common-lisp:cons "Marker"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'show-cache-node-info))
      (common-lisp:list
       (common-lisp:cons "ShowCacheNodeInfo"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'show-cache-clusters-not-in-replication-groups))
      (common-lisp:list
       (common-lisp:cons "ShowCacheClustersNotInReplicationGroups"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-cache-clusters-message))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-cache-engine-versions-message (:copier common-lisp:nil)
      (:conc-name "struct-shape-describe-cache-engine-versions-message-"))
   (engine common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (engine-version common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (cache-parameter-group-family common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (max-records common-lisp:nil :type
    (common-lisp:or integer-optional common-lisp:null))
   (marker common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (default-only common-lisp:nil :type
    (common-lisp:or boolean common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-cache-engine-versions-message
                    'make-describe-cache-engine-versions-message))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-cache-engine-versions-message))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-cache-engine-versions-message))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'engine))
      (common-lisp:list
       (common-lisp:cons "Engine"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'engine-version))
      (common-lisp:list
       (common-lisp:cons "EngineVersion"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'cache-parameter-group-family))
      (common-lisp:list
       (common-lisp:cons "CacheParameterGroupFamily"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-records))
      (common-lisp:list
       (common-lisp:cons "MaxRecords"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'marker))
      (common-lisp:list
       (common-lisp:cons "Marker"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'default-only))
      (common-lisp:list
       (common-lisp:cons "DefaultOnly"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-cache-engine-versions-message))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-cache-parameter-groups-message (:copier common-lisp:nil)
      (:conc-name "struct-shape-describe-cache-parameter-groups-message-"))
   (cache-parameter-group-name common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (max-records common-lisp:nil :type
    (common-lisp:or integer-optional common-lisp:null))
   (marker common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-cache-parameter-groups-message
                    'make-describe-cache-parameter-groups-message))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-cache-parameter-groups-message))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-cache-parameter-groups-message))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'cache-parameter-group-name))
      (common-lisp:list
       (common-lisp:cons "CacheParameterGroupName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-records))
      (common-lisp:list
       (common-lisp:cons "MaxRecords"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'marker))
      (common-lisp:list
       (common-lisp:cons "Marker"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-cache-parameter-groups-message))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-cache-parameters-message (:copier common-lisp:nil)
      (:conc-name "struct-shape-describe-cache-parameters-message-"))
   (cache-parameter-group-name
    (common-lisp:error ":cache-parameter-group-name is required") :type
    (common-lisp:or string common-lisp:null))
   (source common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (max-records common-lisp:nil :type
    (common-lisp:or integer-optional common-lisp:null))
   (marker common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-cache-parameters-message
                    'make-describe-cache-parameters-message))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-cache-parameters-message))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-cache-parameters-message))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'cache-parameter-group-name))
      (common-lisp:list
       (common-lisp:cons "CacheParameterGroupName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'source))
      (common-lisp:list
       (common-lisp:cons "Source"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-records))
      (common-lisp:list
       (common-lisp:cons "MaxRecords"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'marker))
      (common-lisp:list
       (common-lisp:cons "Marker"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-cache-parameters-message))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-cache-security-groups-message (:copier common-lisp:nil)
      (:conc-name "struct-shape-describe-cache-security-groups-message-"))
   (cache-security-group-name common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (max-records common-lisp:nil :type
    (common-lisp:or integer-optional common-lisp:null))
   (marker common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-cache-security-groups-message
                    'make-describe-cache-security-groups-message))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-cache-security-groups-message))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-cache-security-groups-message))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'cache-security-group-name))
      (common-lisp:list
       (common-lisp:cons "CacheSecurityGroupName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-records))
      (common-lisp:list
       (common-lisp:cons "MaxRecords"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'marker))
      (common-lisp:list
       (common-lisp:cons "Marker"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-cache-security-groups-message))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-cache-subnet-groups-message (:copier common-lisp:nil)
      (:conc-name "struct-shape-describe-cache-subnet-groups-message-"))
   (cache-subnet-group-name common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (max-records common-lisp:nil :type
    (common-lisp:or integer-optional common-lisp:null))
   (marker common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-cache-subnet-groups-message
                    'make-describe-cache-subnet-groups-message))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-cache-subnet-groups-message))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-cache-subnet-groups-message))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'cache-subnet-group-name))
      (common-lisp:list
       (common-lisp:cons "CacheSubnetGroupName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-records))
      (common-lisp:list
       (common-lisp:cons "MaxRecords"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'marker))
      (common-lisp:list
       (common-lisp:cons "Marker"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-cache-subnet-groups-message))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-engine-default-parameters-message (:copier common-lisp:nil)
      (:conc-name "struct-shape-describe-engine-default-parameters-message-"))
   (cache-parameter-group-family
    (common-lisp:error ":cache-parameter-group-family is required") :type
    (common-lisp:or string common-lisp:null))
   (max-records common-lisp:nil :type
    (common-lisp:or integer-optional common-lisp:null))
   (marker common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-engine-default-parameters-message
                    'make-describe-engine-default-parameters-message))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-engine-default-parameters-message))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-engine-default-parameters-message))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'cache-parameter-group-family))
      (common-lisp:list
       (common-lisp:cons "CacheParameterGroupFamily"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-records))
      (common-lisp:list
       (common-lisp:cons "MaxRecords"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'marker))
      (common-lisp:list
       (common-lisp:cons "Marker"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-engine-default-parameters-message))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-engine-default-parameters-result (:copier common-lisp:nil)
      (:conc-name "struct-shape-describe-engine-default-parameters-result-"))
   (engine-defaults common-lisp:nil :type
    (common-lisp:or engine-defaults common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-engine-default-parameters-result
                    'make-describe-engine-default-parameters-result))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-engine-default-parameters-result))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-engine-default-parameters-result))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'engine-defaults))
      (common-lisp:list
       (common-lisp:cons "EngineDefaults"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-engine-default-parameters-result))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-events-message (:copier common-lisp:nil)
      (:conc-name "struct-shape-describe-events-message-"))
   (source-identifier common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (source-type common-lisp:nil :type
    (common-lisp:or source-type common-lisp:null))
   (start-time common-lisp:nil :type (common-lisp:or tstamp common-lisp:null))
   (end-time common-lisp:nil :type (common-lisp:or tstamp common-lisp:null))
   (duration common-lisp:nil :type
    (common-lisp:or integer-optional common-lisp:null))
   (max-records common-lisp:nil :type
    (common-lisp:or integer-optional common-lisp:null))
   (marker common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-events-message 'make-describe-events-message))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-events-message))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-events-message))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'source-identifier))
      (common-lisp:list
       (common-lisp:cons "SourceIdentifier"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'source-type))
      (common-lisp:list
       (common-lisp:cons "SourceType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'start-time))
      (common-lisp:list
       (common-lisp:cons "StartTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'end-time))
      (common-lisp:list
       (common-lisp:cons "EndTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'duration))
      (common-lisp:list
       (common-lisp:cons "Duration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-records))
      (common-lisp:list
       (common-lisp:cons "MaxRecords"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'marker))
      (common-lisp:list
       (common-lisp:cons "Marker"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-events-message))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-replication-groups-message (:copier common-lisp:nil)
      (:conc-name "struct-shape-describe-replication-groups-message-"))
   (replication-group-id common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (max-records common-lisp:nil :type
    (common-lisp:or integer-optional common-lisp:null))
   (marker common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-replication-groups-message
                    'make-describe-replication-groups-message))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-replication-groups-message))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-replication-groups-message))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'replication-group-id))
      (common-lisp:list
       (common-lisp:cons "ReplicationGroupId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-records))
      (common-lisp:list
       (common-lisp:cons "MaxRecords"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'marker))
      (common-lisp:list
       (common-lisp:cons "Marker"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-replication-groups-message))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-reserved-cache-nodes-message (:copier common-lisp:nil)
      (:conc-name "struct-shape-describe-reserved-cache-nodes-message-"))
   (reserved-cache-node-id common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (reserved-cache-nodes-offering-id common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (cache-node-type common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (duration common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (product-description common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (offering-type common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (max-records common-lisp:nil :type
    (common-lisp:or integer-optional common-lisp:null))
   (marker common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-reserved-cache-nodes-message
                    'make-describe-reserved-cache-nodes-message))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-reserved-cache-nodes-message))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-reserved-cache-nodes-message))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'reserved-cache-node-id))
      (common-lisp:list
       (common-lisp:cons "ReservedCacheNodeId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'reserved-cache-nodes-offering-id))
      (common-lisp:list
       (common-lisp:cons "ReservedCacheNodesOfferingId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'cache-node-type))
      (common-lisp:list
       (common-lisp:cons "CacheNodeType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'duration))
      (common-lisp:list
       (common-lisp:cons "Duration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'product-description))
      (common-lisp:list
       (common-lisp:cons "ProductDescription"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'offering-type))
      (common-lisp:list
       (common-lisp:cons "OfferingType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-records))
      (common-lisp:list
       (common-lisp:cons "MaxRecords"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'marker))
      (common-lisp:list
       (common-lisp:cons "Marker"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-reserved-cache-nodes-message))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-reserved-cache-nodes-offerings-message (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-describe-reserved-cache-nodes-offerings-message-"))
   (reserved-cache-nodes-offering-id common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (cache-node-type common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (duration common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (product-description common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (offering-type common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (max-records common-lisp:nil :type
    (common-lisp:or integer-optional common-lisp:null))
   (marker common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-reserved-cache-nodes-offerings-message
                    'make-describe-reserved-cache-nodes-offerings-message))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-reserved-cache-nodes-offerings-message))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-reserved-cache-nodes-offerings-message))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'reserved-cache-nodes-offering-id))
      (common-lisp:list
       (common-lisp:cons "ReservedCacheNodesOfferingId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'cache-node-type))
      (common-lisp:list
       (common-lisp:cons "CacheNodeType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'duration))
      (common-lisp:list
       (common-lisp:cons "Duration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'product-description))
      (common-lisp:list
       (common-lisp:cons "ProductDescription"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'offering-type))
      (common-lisp:list
       (common-lisp:cons "OfferingType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-records))
      (common-lisp:list
       (common-lisp:cons "MaxRecords"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'marker))
      (common-lisp:list
       (common-lisp:cons "Marker"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-reserved-cache-nodes-offerings-message))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-snapshots-list-message (:copier common-lisp:nil)
      (:conc-name "struct-shape-describe-snapshots-list-message-"))
   (marker common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (snapshots common-lisp:nil :type
    (common-lisp:or snapshot-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-snapshots-list-message
                    'make-describe-snapshots-list-message))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-snapshots-list-message))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-snapshots-list-message))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'marker))
      (common-lisp:list
       (common-lisp:cons "Marker"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'snapshots))
      (common-lisp:list
       (common-lisp:cons "Snapshots"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-snapshots-list-message))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-snapshots-message (:copier common-lisp:nil)
      (:conc-name "struct-shape-describe-snapshots-message-"))
   (replication-group-id common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (cache-cluster-id common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (snapshot-name common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (snapshot-source common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (marker common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (max-records common-lisp:nil :type
    (common-lisp:or integer-optional common-lisp:null))
   (show-node-group-config common-lisp:nil :type
    (common-lisp:or boolean-optional common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-snapshots-message
                    'make-describe-snapshots-message))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-snapshots-message))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-snapshots-message))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'replication-group-id))
      (common-lisp:list
       (common-lisp:cons "ReplicationGroupId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'cache-cluster-id))
      (common-lisp:list
       (common-lisp:cons "CacheClusterId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'snapshot-name))
      (common-lisp:list
       (common-lisp:cons "SnapshotName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'snapshot-source))
      (common-lisp:list
       (common-lisp:cons "SnapshotSource"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'marker))
      (common-lisp:list
       (common-lisp:cons "Marker"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-records))
      (common-lisp:list
       (common-lisp:cons "MaxRecords"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'show-node-group-config))
      (common-lisp:list
       (common-lisp:cons "ShowNodeGroupConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-snapshots-message))
   common-lisp:nil))
(common-lisp:deftype double () 'common-lisp:double-float)
(common-lisp:progn
 (common-lisp:defstruct
     (ec2security-group (:copier common-lisp:nil)
      (:conc-name "struct-shape-ec2security-group-"))
   (status common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (ec2security-group-name common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (ec2security-group-owner-id common-lisp:nil :type
    (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'ec2security-group 'make-ec2security-group))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input ec2security-group))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input ec2security-group))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "Status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'ec2security-group-name))
      (common-lisp:list
       (common-lisp:cons "EC2SecurityGroupName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'ec2security-group-owner-id))
      (common-lisp:list
       (common-lisp:cons "EC2SecurityGroupOwnerId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input ec2security-group))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype ec2security-group-list ()
   '(trivial-types:proper-list ec2security-group))
 (common-lisp:defun |make-ec2security-group-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list ec2security-group))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (endpoint (:copier common-lisp:nil) (:conc-name "struct-shape-endpoint-"))
   (address common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (port common-lisp:nil :type (common-lisp:or integer common-lisp:null)))
 (common-lisp:export (common-lisp:list 'endpoint 'make-endpoint))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input endpoint))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input endpoint))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'address))
      (common-lisp:list
       (common-lisp:cons "Address"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'port))
      (common-lisp:list
       (common-lisp:cons "Port"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input endpoint))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (engine-defaults (:copier common-lisp:nil)
      (:conc-name "struct-shape-engine-defaults-"))
   (cache-parameter-group-family common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (marker common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (parameters common-lisp:nil :type
    (common-lisp:or parameters-list common-lisp:null))
   (cache-node-type-specific-parameters common-lisp:nil :type
    (common-lisp:or cache-node-type-specific-parameters-list
                    common-lisp:null)))
 (common-lisp:export (common-lisp:list 'engine-defaults 'make-engine-defaults))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input engine-defaults))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input engine-defaults))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'cache-parameter-group-family))
      (common-lisp:list
       (common-lisp:cons "CacheParameterGroupFamily"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'marker))
      (common-lisp:list
       (common-lisp:cons "Marker"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'parameters))
      (common-lisp:list
       (common-lisp:cons "Parameters"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'cache-node-type-specific-parameters))
      (common-lisp:list
       (common-lisp:cons "CacheNodeTypeSpecificParameters"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input engine-defaults))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (event (:copier common-lisp:nil) (:conc-name "struct-shape-event-"))
   (source-identifier common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (source-type common-lisp:nil :type
    (common-lisp:or source-type common-lisp:null))
   (message common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (date common-lisp:nil :type (common-lisp:or tstamp common-lisp:null)))
 (common-lisp:export (common-lisp:list 'event 'make-event))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input event))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input event))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'source-identifier))
      (common-lisp:list
       (common-lisp:cons "SourceIdentifier"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'source-type))
      (common-lisp:list
       (common-lisp:cons "SourceType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'message))
      (common-lisp:list
       (common-lisp:cons "Message"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'date))
      (common-lisp:list
       (common-lisp:cons "Date"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input event))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype event-list () '(trivial-types:proper-list event))
 (common-lisp:defun |make-event-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list event))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (events-message (:copier common-lisp:nil)
      (:conc-name "struct-shape-events-message-"))
   (marker common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (events common-lisp:nil :type (common-lisp:or event-list common-lisp:null)))
 (common-lisp:export (common-lisp:list 'events-message 'make-events-message))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input events-message))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input events-message))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'marker))
      (common-lisp:list
       (common-lisp:cons "Marker"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'events))
      (common-lisp:list
       (common-lisp:cons "Events"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input events-message))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (insufficient-cache-cluster-capacity-fault (:copier common-lisp:nil)
      (:conc-name "struct-shape-insufficient-cache-cluster-capacity-fault-")))
 (common-lisp:export
  (common-lisp:list 'insufficient-cache-cluster-capacity-fault
                    'make-insufficient-cache-cluster-capacity-fault))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          insufficient-cache-cluster-capacity-fault))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          insufficient-cache-cluster-capacity-fault))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          insufficient-cache-cluster-capacity-fault))
   common-lisp:nil))
(common-lisp:deftype integer () 'common-lisp:integer)
(common-lisp:deftype integer-optional () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:defstruct
     (invalid-arnfault (:copier common-lisp:nil)
      (:conc-name "struct-shape-invalid-arnfault-")))
 (common-lisp:export
  (common-lisp:list 'invalid-arnfault 'make-invalid-arnfault))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input invalid-arnfault))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input invalid-arnfault))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input invalid-arnfault))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (invalid-cache-cluster-state-fault (:copier common-lisp:nil)
      (:conc-name "struct-shape-invalid-cache-cluster-state-fault-")))
 (common-lisp:export
  (common-lisp:list 'invalid-cache-cluster-state-fault
                    'make-invalid-cache-cluster-state-fault))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          invalid-cache-cluster-state-fault))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          invalid-cache-cluster-state-fault))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          invalid-cache-cluster-state-fault))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (invalid-cache-parameter-group-state-fault (:copier common-lisp:nil)
      (:conc-name "struct-shape-invalid-cache-parameter-group-state-fault-")))
 (common-lisp:export
  (common-lisp:list 'invalid-cache-parameter-group-state-fault
                    'make-invalid-cache-parameter-group-state-fault))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          invalid-cache-parameter-group-state-fault))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          invalid-cache-parameter-group-state-fault))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          invalid-cache-parameter-group-state-fault))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (invalid-cache-security-group-state-fault (:copier common-lisp:nil)
      (:conc-name "struct-shape-invalid-cache-security-group-state-fault-")))
 (common-lisp:export
  (common-lisp:list 'invalid-cache-security-group-state-fault
                    'make-invalid-cache-security-group-state-fault))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          invalid-cache-security-group-state-fault))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          invalid-cache-security-group-state-fault))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          invalid-cache-security-group-state-fault))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (invalid-parameter-combination-exception (:copier common-lisp:nil)
      (:conc-name "struct-shape-invalid-parameter-combination-exception-"))
   (message common-lisp:nil :type
    (common-lisp:or aws-query-error-message common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'invalid-parameter-combination-exception
                    'make-invalid-parameter-combination-exception))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          invalid-parameter-combination-exception))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          invalid-parameter-combination-exception))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'message))
      (common-lisp:list
       (common-lisp:cons "message"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          invalid-parameter-combination-exception))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (invalid-parameter-value-exception (:copier common-lisp:nil)
      (:conc-name "struct-shape-invalid-parameter-value-exception-"))
   (message common-lisp:nil :type
    (common-lisp:or aws-query-error-message common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'invalid-parameter-value-exception
                    'make-invalid-parameter-value-exception))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          invalid-parameter-value-exception))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          invalid-parameter-value-exception))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'message))
      (common-lisp:list
       (common-lisp:cons "message"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          invalid-parameter-value-exception))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (invalid-replication-group-state-fault (:copier common-lisp:nil)
      (:conc-name "struct-shape-invalid-replication-group-state-fault-")))
 (common-lisp:export
  (common-lisp:list 'invalid-replication-group-state-fault
                    'make-invalid-replication-group-state-fault))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          invalid-replication-group-state-fault))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          invalid-replication-group-state-fault))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          invalid-replication-group-state-fault))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (invalid-snapshot-state-fault (:copier common-lisp:nil)
      (:conc-name "struct-shape-invalid-snapshot-state-fault-")))
 (common-lisp:export
  (common-lisp:list 'invalid-snapshot-state-fault
                    'make-invalid-snapshot-state-fault))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          invalid-snapshot-state-fault))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          invalid-snapshot-state-fault))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          invalid-snapshot-state-fault))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (invalid-subnet (:copier common-lisp:nil)
      (:conc-name "struct-shape-invalid-subnet-")))
 (common-lisp:export (common-lisp:list 'invalid-subnet 'make-invalid-subnet))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input invalid-subnet))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input invalid-subnet))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input invalid-subnet))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (invalid-vpcnetwork-state-fault (:copier common-lisp:nil)
      (:conc-name "struct-shape-invalid-vpcnetwork-state-fault-")))
 (common-lisp:export
  (common-lisp:list 'invalid-vpcnetwork-state-fault
                    'make-invalid-vpcnetwork-state-fault))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          invalid-vpcnetwork-state-fault))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          invalid-vpcnetwork-state-fault))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          invalid-vpcnetwork-state-fault))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype key-list () '(trivial-types:proper-list string))
 (common-lisp:defun |make-key-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list string))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (list-allowed-node-type-modifications-message (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-list-allowed-node-type-modifications-message-"))
   (cache-cluster-id common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (replication-group-id common-lisp:nil :type
    (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-allowed-node-type-modifications-message
                    'make-list-allowed-node-type-modifications-message))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-allowed-node-type-modifications-message))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-allowed-node-type-modifications-message))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'cache-cluster-id))
      (common-lisp:list
       (common-lisp:cons "CacheClusterId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'replication-group-id))
      (common-lisp:list
       (common-lisp:cons "ReplicationGroupId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-allowed-node-type-modifications-message))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-tags-for-resource-message (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-tags-for-resource-message-"))
   (resource-name (common-lisp:error ":resource-name is required") :type
    (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-tags-for-resource-message
                    'make-list-tags-for-resource-message))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-message))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-message))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-name))
      (common-lisp:list
       (common-lisp:cons "ResourceName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-message))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (modify-cache-cluster-message (:copier common-lisp:nil)
      (:conc-name "struct-shape-modify-cache-cluster-message-"))
   (cache-cluster-id (common-lisp:error ":cache-cluster-id is required") :type
    (common-lisp:or string common-lisp:null))
   (num-cache-nodes common-lisp:nil :type
    (common-lisp:or integer-optional common-lisp:null))
   (cache-node-ids-to-remove common-lisp:nil :type
    (common-lisp:or cache-node-ids-list common-lisp:null))
   (azmode common-lisp:nil :type (common-lisp:or azmode common-lisp:null))
   (new-availability-zones common-lisp:nil :type
    (common-lisp:or preferred-availability-zone-list common-lisp:null))
   (cache-security-group-names common-lisp:nil :type
    (common-lisp:or cache-security-group-name-list common-lisp:null))
   (security-group-ids common-lisp:nil :type
    (common-lisp:or security-group-ids-list common-lisp:null))
   (preferred-maintenance-window common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (notification-topic-arn common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (cache-parameter-group-name common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (notification-topic-status common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (apply-immediately common-lisp:nil :type
    (common-lisp:or boolean common-lisp:null))
   (engine-version common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (auto-minor-version-upgrade common-lisp:nil :type
    (common-lisp:or boolean-optional common-lisp:null))
   (snapshot-retention-limit common-lisp:nil :type
    (common-lisp:or integer-optional common-lisp:null))
   (snapshot-window common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (cache-node-type common-lisp:nil :type
    (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'modify-cache-cluster-message
                    'make-modify-cache-cluster-message))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          modify-cache-cluster-message))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          modify-cache-cluster-message))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'cache-cluster-id))
      (common-lisp:list
       (common-lisp:cons "CacheClusterId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'num-cache-nodes))
      (common-lisp:list
       (common-lisp:cons "NumCacheNodes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'cache-node-ids-to-remove))
      (common-lisp:list
       (common-lisp:cons "CacheNodeIdsToRemove"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'azmode))
      (common-lisp:list
       (common-lisp:cons "AZMode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'new-availability-zones))
      (common-lisp:list
       (common-lisp:cons "NewAvailabilityZones"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'cache-security-group-names))
      (common-lisp:list
       (common-lisp:cons "CacheSecurityGroupNames"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'security-group-ids))
      (common-lisp:list
       (common-lisp:cons "SecurityGroupIds"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'preferred-maintenance-window))
      (common-lisp:list
       (common-lisp:cons "PreferredMaintenanceWindow"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'notification-topic-arn))
      (common-lisp:list
       (common-lisp:cons "NotificationTopicArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'cache-parameter-group-name))
      (common-lisp:list
       (common-lisp:cons "CacheParameterGroupName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'notification-topic-status))
      (common-lisp:list
       (common-lisp:cons "NotificationTopicStatus"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'apply-immediately))
      (common-lisp:list
       (common-lisp:cons "ApplyImmediately"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'engine-version))
      (common-lisp:list
       (common-lisp:cons "EngineVersion"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'auto-minor-version-upgrade))
      (common-lisp:list
       (common-lisp:cons "AutoMinorVersionUpgrade"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'snapshot-retention-limit))
      (common-lisp:list
       (common-lisp:cons "SnapshotRetentionLimit"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'snapshot-window))
      (common-lisp:list
       (common-lisp:cons "SnapshotWindow"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'cache-node-type))
      (common-lisp:list
       (common-lisp:cons "CacheNodeType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          modify-cache-cluster-message))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (modify-cache-cluster-result (:copier common-lisp:nil)
      (:conc-name "struct-shape-modify-cache-cluster-result-"))
   (cache-cluster common-lisp:nil :type
    (common-lisp:or cache-cluster common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'modify-cache-cluster-result
                    'make-modify-cache-cluster-result))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          modify-cache-cluster-result))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          modify-cache-cluster-result))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'cache-cluster))
      (common-lisp:list
       (common-lisp:cons "CacheCluster"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          modify-cache-cluster-result))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (modify-cache-parameter-group-message (:copier common-lisp:nil)
      (:conc-name "struct-shape-modify-cache-parameter-group-message-"))
   (cache-parameter-group-name
    (common-lisp:error ":cache-parameter-group-name is required") :type
    (common-lisp:or string common-lisp:null))
   (parameter-name-values
    (common-lisp:error ":parameter-name-values is required") :type
    (common-lisp:or parameter-name-value-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'modify-cache-parameter-group-message
                    'make-modify-cache-parameter-group-message))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          modify-cache-parameter-group-message))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          modify-cache-parameter-group-message))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'cache-parameter-group-name))
      (common-lisp:list
       (common-lisp:cons "CacheParameterGroupName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'parameter-name-values))
      (common-lisp:list
       (common-lisp:cons "ParameterNameValues"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          modify-cache-parameter-group-message))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (modify-cache-subnet-group-message (:copier common-lisp:nil)
      (:conc-name "struct-shape-modify-cache-subnet-group-message-"))
   (cache-subnet-group-name
    (common-lisp:error ":cache-subnet-group-name is required") :type
    (common-lisp:or string common-lisp:null))
   (cache-subnet-group-description common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (subnet-ids common-lisp:nil :type
    (common-lisp:or subnet-identifier-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'modify-cache-subnet-group-message
                    'make-modify-cache-subnet-group-message))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          modify-cache-subnet-group-message))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          modify-cache-subnet-group-message))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'cache-subnet-group-name))
      (common-lisp:list
       (common-lisp:cons "CacheSubnetGroupName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'cache-subnet-group-description))
      (common-lisp:list
       (common-lisp:cons "CacheSubnetGroupDescription"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'subnet-ids))
      (common-lisp:list
       (common-lisp:cons "SubnetIds"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          modify-cache-subnet-group-message))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (modify-cache-subnet-group-result (:copier common-lisp:nil)
      (:conc-name "struct-shape-modify-cache-subnet-group-result-"))
   (cache-subnet-group common-lisp:nil :type
    (common-lisp:or cache-subnet-group common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'modify-cache-subnet-group-result
                    'make-modify-cache-subnet-group-result))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          modify-cache-subnet-group-result))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          modify-cache-subnet-group-result))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'cache-subnet-group))
      (common-lisp:list
       (common-lisp:cons "CacheSubnetGroup"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          modify-cache-subnet-group-result))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (modify-replication-group-message (:copier common-lisp:nil)
      (:conc-name "struct-shape-modify-replication-group-message-"))
   (replication-group-id
    (common-lisp:error ":replication-group-id is required") :type
    (common-lisp:or string common-lisp:null))
   (replication-group-description common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (primary-cluster-id common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (snapshotting-cluster-id common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (automatic-failover-enabled common-lisp:nil :type
    (common-lisp:or boolean-optional common-lisp:null))
   (cache-security-group-names common-lisp:nil :type
    (common-lisp:or cache-security-group-name-list common-lisp:null))
   (security-group-ids common-lisp:nil :type
    (common-lisp:or security-group-ids-list common-lisp:null))
   (preferred-maintenance-window common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (notification-topic-arn common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (cache-parameter-group-name common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (notification-topic-status common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (apply-immediately common-lisp:nil :type
    (common-lisp:or boolean common-lisp:null))
   (engine-version common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (auto-minor-version-upgrade common-lisp:nil :type
    (common-lisp:or boolean-optional common-lisp:null))
   (snapshot-retention-limit common-lisp:nil :type
    (common-lisp:or integer-optional common-lisp:null))
   (snapshot-window common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (cache-node-type common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (node-group-id common-lisp:nil :type
    (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'modify-replication-group-message
                    'make-modify-replication-group-message))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          modify-replication-group-message))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          modify-replication-group-message))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'replication-group-id))
      (common-lisp:list
       (common-lisp:cons "ReplicationGroupId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'replication-group-description))
      (common-lisp:list
       (common-lisp:cons "ReplicationGroupDescription"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'primary-cluster-id))
      (common-lisp:list
       (common-lisp:cons "PrimaryClusterId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'snapshotting-cluster-id))
      (common-lisp:list
       (common-lisp:cons "SnapshottingClusterId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'automatic-failover-enabled))
      (common-lisp:list
       (common-lisp:cons "AutomaticFailoverEnabled"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'cache-security-group-names))
      (common-lisp:list
       (common-lisp:cons "CacheSecurityGroupNames"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'security-group-ids))
      (common-lisp:list
       (common-lisp:cons "SecurityGroupIds"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'preferred-maintenance-window))
      (common-lisp:list
       (common-lisp:cons "PreferredMaintenanceWindow"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'notification-topic-arn))
      (common-lisp:list
       (common-lisp:cons "NotificationTopicArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'cache-parameter-group-name))
      (common-lisp:list
       (common-lisp:cons "CacheParameterGroupName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'notification-topic-status))
      (common-lisp:list
       (common-lisp:cons "NotificationTopicStatus"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'apply-immediately))
      (common-lisp:list
       (common-lisp:cons "ApplyImmediately"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'engine-version))
      (common-lisp:list
       (common-lisp:cons "EngineVersion"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'auto-minor-version-upgrade))
      (common-lisp:list
       (common-lisp:cons "AutoMinorVersionUpgrade"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'snapshot-retention-limit))
      (common-lisp:list
       (common-lisp:cons "SnapshotRetentionLimit"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'snapshot-window))
      (common-lisp:list
       (common-lisp:cons "SnapshotWindow"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'cache-node-type))
      (common-lisp:list
       (common-lisp:cons "CacheNodeType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'node-group-id))
      (common-lisp:list
       (common-lisp:cons "NodeGroupId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          modify-replication-group-message))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (modify-replication-group-result (:copier common-lisp:nil)
      (:conc-name "struct-shape-modify-replication-group-result-"))
   (replication-group common-lisp:nil :type
    (common-lisp:or replication-group common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'modify-replication-group-result
                    'make-modify-replication-group-result))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          modify-replication-group-result))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          modify-replication-group-result))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'replication-group))
      (common-lisp:list
       (common-lisp:cons "ReplicationGroup"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          modify-replication-group-result))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (node-group (:copier common-lisp:nil)
      (:conc-name "struct-shape-node-group-"))
   (node-group-id common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (status common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (primary-endpoint common-lisp:nil :type
    (common-lisp:or endpoint common-lisp:null))
   (slots common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (node-group-members common-lisp:nil :type
    (common-lisp:or node-group-member-list common-lisp:null)))
 (common-lisp:export (common-lisp:list 'node-group 'make-node-group))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input node-group))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input node-group))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'node-group-id))
      (common-lisp:list
       (common-lisp:cons "NodeGroupId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "Status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'primary-endpoint))
      (common-lisp:list
       (common-lisp:cons "PrimaryEndpoint"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'slots))
      (common-lisp:list
       (common-lisp:cons "Slots"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'node-group-members))
      (common-lisp:list
       (common-lisp:cons "NodeGroupMembers"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input node-group))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (node-group-configuration (:copier common-lisp:nil)
      (:conc-name "struct-shape-node-group-configuration-"))
   (slots common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (replica-count common-lisp:nil :type
    (common-lisp:or integer-optional common-lisp:null))
   (primary-availability-zone common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (replica-availability-zones common-lisp:nil :type
    (common-lisp:or availability-zones-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'node-group-configuration 'make-node-group-configuration))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          node-group-configuration))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          node-group-configuration))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'slots))
      (common-lisp:list
       (common-lisp:cons "Slots"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'replica-count))
      (common-lisp:list
       (common-lisp:cons "ReplicaCount"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'primary-availability-zone))
      (common-lisp:list
       (common-lisp:cons "PrimaryAvailabilityZone"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'replica-availability-zones))
      (common-lisp:list
       (common-lisp:cons "ReplicaAvailabilityZones"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          node-group-configuration))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype node-group-configuration-list ()
   '(trivial-types:proper-list node-group-configuration))
 (common-lisp:defun |make-node-group-configuration-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            node-group-configuration))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype node-group-list ()
   '(trivial-types:proper-list node-group))
 (common-lisp:defun |make-node-group-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list node-group))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (node-group-member (:copier common-lisp:nil)
      (:conc-name "struct-shape-node-group-member-"))
   (cache-cluster-id common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (cache-node-id common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (read-endpoint common-lisp:nil :type
    (common-lisp:or endpoint common-lisp:null))
   (preferred-availability-zone common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (current-role common-lisp:nil :type
    (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'node-group-member 'make-node-group-member))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input node-group-member))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input node-group-member))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'cache-cluster-id))
      (common-lisp:list
       (common-lisp:cons "CacheClusterId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'cache-node-id))
      (common-lisp:list
       (common-lisp:cons "CacheNodeId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'read-endpoint))
      (common-lisp:list
       (common-lisp:cons "ReadEndpoint"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'preferred-availability-zone))
      (common-lisp:list
       (common-lisp:cons "PreferredAvailabilityZone"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'current-role))
      (common-lisp:list
       (common-lisp:cons "CurrentRole"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input node-group-member))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype node-group-member-list ()
   '(trivial-types:proper-list node-group-member))
 (common-lisp:defun |make-node-group-member-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list node-group-member))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (node-group-not-found-fault (:copier common-lisp:nil)
      (:conc-name "struct-shape-node-group-not-found-fault-")))
 (common-lisp:export
  (common-lisp:list 'node-group-not-found-fault
                    'make-node-group-not-found-fault))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          node-group-not-found-fault))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          node-group-not-found-fault))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          node-group-not-found-fault))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (node-groups-per-replication-group-quota-exceeded-fault
      (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-node-groups-per-replication-group-quota-exceeded-fault-")))
 (common-lisp:export
  (common-lisp:list 'node-groups-per-replication-group-quota-exceeded-fault
                    'make-node-groups-per-replication-group-quota-exceeded-fault))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          node-groups-per-replication-group-quota-exceeded-fault))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          node-groups-per-replication-group-quota-exceeded-fault))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          node-groups-per-replication-group-quota-exceeded-fault))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (node-quota-for-cluster-exceeded-fault (:copier common-lisp:nil)
      (:conc-name "struct-shape-node-quota-for-cluster-exceeded-fault-")))
 (common-lisp:export
  (common-lisp:list 'node-quota-for-cluster-exceeded-fault
                    'make-node-quota-for-cluster-exceeded-fault))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          node-quota-for-cluster-exceeded-fault))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          node-quota-for-cluster-exceeded-fault))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          node-quota-for-cluster-exceeded-fault))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (node-quota-for-customer-exceeded-fault (:copier common-lisp:nil)
      (:conc-name "struct-shape-node-quota-for-customer-exceeded-fault-")))
 (common-lisp:export
  (common-lisp:list 'node-quota-for-customer-exceeded-fault
                    'make-node-quota-for-customer-exceeded-fault))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          node-quota-for-customer-exceeded-fault))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          node-quota-for-customer-exceeded-fault))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          node-quota-for-customer-exceeded-fault))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (node-snapshot (:copier common-lisp:nil)
      (:conc-name "struct-shape-node-snapshot-"))
   (cache-cluster-id common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (node-group-id common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (cache-node-id common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (node-group-configuration common-lisp:nil :type
    (common-lisp:or node-group-configuration common-lisp:null))
   (cache-size common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (cache-node-create-time common-lisp:nil :type
    (common-lisp:or tstamp common-lisp:null))
   (snapshot-create-time common-lisp:nil :type
    (common-lisp:or tstamp common-lisp:null)))
 (common-lisp:export (common-lisp:list 'node-snapshot 'make-node-snapshot))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input node-snapshot))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input node-snapshot))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'cache-cluster-id))
      (common-lisp:list
       (common-lisp:cons "CacheClusterId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'node-group-id))
      (common-lisp:list
       (common-lisp:cons "NodeGroupId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'cache-node-id))
      (common-lisp:list
       (common-lisp:cons "CacheNodeId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'node-group-configuration))
      (common-lisp:list
       (common-lisp:cons "NodeGroupConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'cache-size))
      (common-lisp:list
       (common-lisp:cons "CacheSize"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'cache-node-create-time))
      (common-lisp:list
       (common-lisp:cons "CacheNodeCreateTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'snapshot-create-time))
      (common-lisp:list
       (common-lisp:cons "SnapshotCreateTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input node-snapshot))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype node-snapshot-list ()
   '(trivial-types:proper-list node-snapshot))
 (common-lisp:defun |make-node-snapshot-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list node-snapshot))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype node-type-list () '(trivial-types:proper-list string))
 (common-lisp:defun |make-node-type-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list string))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (notification-configuration (:copier common-lisp:nil)
      (:conc-name "struct-shape-notification-configuration-"))
   (topic-arn common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (topic-status common-lisp:nil :type
    (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'notification-configuration
                    'make-notification-configuration))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          notification-configuration))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          notification-configuration))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'topic-arn))
      (common-lisp:list
       (common-lisp:cons "TopicArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'topic-status))
      (common-lisp:list
       (common-lisp:cons "TopicStatus"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          notification-configuration))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (parameter (:copier common-lisp:nil)
      (:conc-name "struct-shape-parameter-"))
   (parameter-name common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (parameter-value common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (description common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (source common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (data-type common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (allowed-values common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (is-modifiable common-lisp:nil :type
    (common-lisp:or boolean common-lisp:null))
   (minimum-engine-version common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (change-type common-lisp:nil :type
    (common-lisp:or change-type common-lisp:null)))
 (common-lisp:export (common-lisp:list 'parameter 'make-parameter))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input parameter))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input parameter))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'parameter-name))
      (common-lisp:list
       (common-lisp:cons "ParameterName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'parameter-value))
      (common-lisp:list
       (common-lisp:cons "ParameterValue"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'source))
      (common-lisp:list
       (common-lisp:cons "Source"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'data-type))
      (common-lisp:list
       (common-lisp:cons "DataType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'allowed-values))
      (common-lisp:list
       (common-lisp:cons "AllowedValues"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'is-modifiable))
      (common-lisp:list
       (common-lisp:cons "IsModifiable"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'minimum-engine-version))
      (common-lisp:list
       (common-lisp:cons "MinimumEngineVersion"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'change-type))
      (common-lisp:list
       (common-lisp:cons "ChangeType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input parameter))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (parameter-name-value (:copier common-lisp:nil)
      (:conc-name "struct-shape-parameter-name-value-"))
   (parameter-name common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (parameter-value common-lisp:nil :type
    (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'parameter-name-value 'make-parameter-name-value))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input parameter-name-value))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input parameter-name-value))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'parameter-name))
      (common-lisp:list
       (common-lisp:cons "ParameterName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'parameter-value))
      (common-lisp:list
       (common-lisp:cons "ParameterValue"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input parameter-name-value))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype parameter-name-value-list ()
   '(trivial-types:proper-list parameter-name-value))
 (common-lisp:defun |make-parameter-name-value-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list parameter-name-value))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype parameters-list ()
   '(trivial-types:proper-list parameter))
 (common-lisp:defun |make-parameters-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list parameter))
   aws-sdk/generator/shape::members))
(common-lisp:deftype pending-automatic-failover-status () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (pending-modified-values (:copier common-lisp:nil)
      (:conc-name "struct-shape-pending-modified-values-"))
   (num-cache-nodes common-lisp:nil :type
    (common-lisp:or integer-optional common-lisp:null))
   (cache-node-ids-to-remove common-lisp:nil :type
    (common-lisp:or cache-node-ids-list common-lisp:null))
   (engine-version common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (cache-node-type common-lisp:nil :type
    (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'pending-modified-values 'make-pending-modified-values))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          pending-modified-values))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          pending-modified-values))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'num-cache-nodes))
      (common-lisp:list
       (common-lisp:cons "NumCacheNodes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'cache-node-ids-to-remove))
      (common-lisp:list
       (common-lisp:cons "CacheNodeIdsToRemove"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'engine-version))
      (common-lisp:list
       (common-lisp:cons "EngineVersion"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'cache-node-type))
      (common-lisp:list
       (common-lisp:cons "CacheNodeType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          pending-modified-values))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype preferred-availability-zone-list ()
   '(trivial-types:proper-list string))
 (common-lisp:defun |make-preferred-availability-zone-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list string))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (purchase-reserved-cache-nodes-offering-message (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-purchase-reserved-cache-nodes-offering-message-"))
   (reserved-cache-nodes-offering-id
    (common-lisp:error ":reserved-cache-nodes-offering-id is required") :type
    (common-lisp:or string common-lisp:null))
   (reserved-cache-node-id common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (cache-node-count common-lisp:nil :type
    (common-lisp:or integer-optional common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'purchase-reserved-cache-nodes-offering-message
                    'make-purchase-reserved-cache-nodes-offering-message))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          purchase-reserved-cache-nodes-offering-message))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          purchase-reserved-cache-nodes-offering-message))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'reserved-cache-nodes-offering-id))
      (common-lisp:list
       (common-lisp:cons "ReservedCacheNodesOfferingId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'reserved-cache-node-id))
      (common-lisp:list
       (common-lisp:cons "ReservedCacheNodeId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'cache-node-count))
      (common-lisp:list
       (common-lisp:cons "CacheNodeCount"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          purchase-reserved-cache-nodes-offering-message))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (purchase-reserved-cache-nodes-offering-result (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-purchase-reserved-cache-nodes-offering-result-"))
   (reserved-cache-node common-lisp:nil :type
    (common-lisp:or reserved-cache-node common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'purchase-reserved-cache-nodes-offering-result
                    'make-purchase-reserved-cache-nodes-offering-result))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          purchase-reserved-cache-nodes-offering-result))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          purchase-reserved-cache-nodes-offering-result))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'reserved-cache-node))
      (common-lisp:list
       (common-lisp:cons "ReservedCacheNode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          purchase-reserved-cache-nodes-offering-result))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (reboot-cache-cluster-message (:copier common-lisp:nil)
      (:conc-name "struct-shape-reboot-cache-cluster-message-"))
   (cache-cluster-id (common-lisp:error ":cache-cluster-id is required") :type
    (common-lisp:or string common-lisp:null))
   (cache-node-ids-to-reboot
    (common-lisp:error ":cache-node-ids-to-reboot is required") :type
    (common-lisp:or cache-node-ids-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'reboot-cache-cluster-message
                    'make-reboot-cache-cluster-message))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          reboot-cache-cluster-message))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          reboot-cache-cluster-message))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'cache-cluster-id))
      (common-lisp:list
       (common-lisp:cons "CacheClusterId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'cache-node-ids-to-reboot))
      (common-lisp:list
       (common-lisp:cons "CacheNodeIdsToReboot"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          reboot-cache-cluster-message))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (reboot-cache-cluster-result (:copier common-lisp:nil)
      (:conc-name "struct-shape-reboot-cache-cluster-result-"))
   (cache-cluster common-lisp:nil :type
    (common-lisp:or cache-cluster common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'reboot-cache-cluster-result
                    'make-reboot-cache-cluster-result))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          reboot-cache-cluster-result))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          reboot-cache-cluster-result))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'cache-cluster))
      (common-lisp:list
       (common-lisp:cons "CacheCluster"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          reboot-cache-cluster-result))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (recurring-charge (:copier common-lisp:nil)
      (:conc-name "struct-shape-recurring-charge-"))
   (recurring-charge-amount common-lisp:nil :type
    (common-lisp:or double common-lisp:null))
   (recurring-charge-frequency common-lisp:nil :type
    (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'recurring-charge 'make-recurring-charge))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input recurring-charge))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input recurring-charge))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'recurring-charge-amount))
      (common-lisp:list
       (common-lisp:cons "RecurringChargeAmount"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'recurring-charge-frequency))
      (common-lisp:list
       (common-lisp:cons "RecurringChargeFrequency"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input recurring-charge))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype recurring-charge-list ()
   '(trivial-types:proper-list recurring-charge))
 (common-lisp:defun |make-recurring-charge-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list recurring-charge))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (remove-tags-from-resource-message (:copier common-lisp:nil)
      (:conc-name "struct-shape-remove-tags-from-resource-message-"))
   (resource-name (common-lisp:error ":resource-name is required") :type
    (common-lisp:or string common-lisp:null))
   (tag-keys (common-lisp:error ":tag-keys is required") :type
    (common-lisp:or key-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'remove-tags-from-resource-message
                    'make-remove-tags-from-resource-message))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          remove-tags-from-resource-message))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          remove-tags-from-resource-message))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-name))
      (common-lisp:list
       (common-lisp:cons "ResourceName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tag-keys))
      (common-lisp:list
       (common-lisp:cons "TagKeys"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          remove-tags-from-resource-message))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (replication-group (:copier common-lisp:nil)
      (:conc-name "struct-shape-replication-group-"))
   (replication-group-id common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (description common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (status common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (pending-modified-values common-lisp:nil :type
    (common-lisp:or replication-group-pending-modified-values
                    common-lisp:null))
   (member-clusters common-lisp:nil :type
    (common-lisp:or cluster-id-list common-lisp:null))
   (node-groups common-lisp:nil :type
    (common-lisp:or node-group-list common-lisp:null))
   (snapshotting-cluster-id common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (automatic-failover common-lisp:nil :type
    (common-lisp:or automatic-failover-status common-lisp:null))
   (configuration-endpoint common-lisp:nil :type
    (common-lisp:or endpoint common-lisp:null))
   (snapshot-retention-limit common-lisp:nil :type
    (common-lisp:or integer-optional common-lisp:null))
   (snapshot-window common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (cluster-enabled common-lisp:nil :type
    (common-lisp:or boolean-optional common-lisp:null))
   (cache-node-type common-lisp:nil :type
    (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'replication-group 'make-replication-group))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input replication-group))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input replication-group))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'replication-group-id))
      (common-lisp:list
       (common-lisp:cons "ReplicationGroupId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "Status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'pending-modified-values))
      (common-lisp:list
       (common-lisp:cons "PendingModifiedValues"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'member-clusters))
      (common-lisp:list
       (common-lisp:cons "MemberClusters"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'node-groups))
      (common-lisp:list
       (common-lisp:cons "NodeGroups"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'snapshotting-cluster-id))
      (common-lisp:list
       (common-lisp:cons "SnapshottingClusterId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'automatic-failover))
      (common-lisp:list
       (common-lisp:cons "AutomaticFailover"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'configuration-endpoint))
      (common-lisp:list
       (common-lisp:cons "ConfigurationEndpoint"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'snapshot-retention-limit))
      (common-lisp:list
       (common-lisp:cons "SnapshotRetentionLimit"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'snapshot-window))
      (common-lisp:list
       (common-lisp:cons "SnapshotWindow"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'cluster-enabled))
      (common-lisp:list
       (common-lisp:cons "ClusterEnabled"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'cache-node-type))
      (common-lisp:list
       (common-lisp:cons "CacheNodeType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input replication-group))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (replication-group-already-exists-fault (:copier common-lisp:nil)
      (:conc-name "struct-shape-replication-group-already-exists-fault-")))
 (common-lisp:export
  (common-lisp:list 'replication-group-already-exists-fault
                    'make-replication-group-already-exists-fault))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          replication-group-already-exists-fault))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          replication-group-already-exists-fault))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          replication-group-already-exists-fault))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype replication-group-list ()
   '(trivial-types:proper-list replication-group))
 (common-lisp:defun |make-replication-group-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list replication-group))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (replication-group-message (:copier common-lisp:nil)
      (:conc-name "struct-shape-replication-group-message-"))
   (marker common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (replication-groups common-lisp:nil :type
    (common-lisp:or replication-group-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'replication-group-message
                    'make-replication-group-message))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          replication-group-message))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          replication-group-message))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'marker))
      (common-lisp:list
       (common-lisp:cons "Marker"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'replication-groups))
      (common-lisp:list
       (common-lisp:cons "ReplicationGroups"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          replication-group-message))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (replication-group-not-found-fault (:copier common-lisp:nil)
      (:conc-name "struct-shape-replication-group-not-found-fault-")))
 (common-lisp:export
  (common-lisp:list 'replication-group-not-found-fault
                    'make-replication-group-not-found-fault))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          replication-group-not-found-fault))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          replication-group-not-found-fault))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          replication-group-not-found-fault))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (replication-group-pending-modified-values (:copier common-lisp:nil)
      (:conc-name "struct-shape-replication-group-pending-modified-values-"))
   (primary-cluster-id common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (automatic-failover-status common-lisp:nil :type
    (common-lisp:or pending-automatic-failover-status common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'replication-group-pending-modified-values
                    'make-replication-group-pending-modified-values))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          replication-group-pending-modified-values))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          replication-group-pending-modified-values))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'primary-cluster-id))
      (common-lisp:list
       (common-lisp:cons "PrimaryClusterId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'automatic-failover-status))
      (common-lisp:list
       (common-lisp:cons "AutomaticFailoverStatus"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          replication-group-pending-modified-values))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (reserved-cache-node (:copier common-lisp:nil)
      (:conc-name "struct-shape-reserved-cache-node-"))
   (reserved-cache-node-id common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (reserved-cache-nodes-offering-id common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (cache-node-type common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (start-time common-lisp:nil :type (common-lisp:or tstamp common-lisp:null))
   (duration common-lisp:nil :type (common-lisp:or integer common-lisp:null))
   (fixed-price common-lisp:nil :type (common-lisp:or double common-lisp:null))
   (usage-price common-lisp:nil :type (common-lisp:or double common-lisp:null))
   (cache-node-count common-lisp:nil :type
    (common-lisp:or integer common-lisp:null))
   (product-description common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (offering-type common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (state common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (recurring-charges common-lisp:nil :type
    (common-lisp:or recurring-charge-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'reserved-cache-node 'make-reserved-cache-node))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input reserved-cache-node))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input reserved-cache-node))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'reserved-cache-node-id))
      (common-lisp:list
       (common-lisp:cons "ReservedCacheNodeId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'reserved-cache-nodes-offering-id))
      (common-lisp:list
       (common-lisp:cons "ReservedCacheNodesOfferingId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'cache-node-type))
      (common-lisp:list
       (common-lisp:cons "CacheNodeType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'start-time))
      (common-lisp:list
       (common-lisp:cons "StartTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'duration))
      (common-lisp:list
       (common-lisp:cons "Duration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'fixed-price))
      (common-lisp:list
       (common-lisp:cons "FixedPrice"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'usage-price))
      (common-lisp:list
       (common-lisp:cons "UsagePrice"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'cache-node-count))
      (common-lisp:list
       (common-lisp:cons "CacheNodeCount"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'product-description))
      (common-lisp:list
       (common-lisp:cons "ProductDescription"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'offering-type))
      (common-lisp:list
       (common-lisp:cons "OfferingType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'state))
      (common-lisp:list
       (common-lisp:cons "State"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'recurring-charges))
      (common-lisp:list
       (common-lisp:cons "RecurringCharges"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input reserved-cache-node))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (reserved-cache-node-already-exists-fault (:copier common-lisp:nil)
      (:conc-name "struct-shape-reserved-cache-node-already-exists-fault-")))
 (common-lisp:export
  (common-lisp:list 'reserved-cache-node-already-exists-fault
                    'make-reserved-cache-node-already-exists-fault))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          reserved-cache-node-already-exists-fault))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          reserved-cache-node-already-exists-fault))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          reserved-cache-node-already-exists-fault))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype reserved-cache-node-list ()
   '(trivial-types:proper-list reserved-cache-node))
 (common-lisp:defun |make-reserved-cache-node-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list reserved-cache-node))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (reserved-cache-node-message (:copier common-lisp:nil)
      (:conc-name "struct-shape-reserved-cache-node-message-"))
   (marker common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (reserved-cache-nodes common-lisp:nil :type
    (common-lisp:or reserved-cache-node-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'reserved-cache-node-message
                    'make-reserved-cache-node-message))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          reserved-cache-node-message))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          reserved-cache-node-message))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'marker))
      (common-lisp:list
       (common-lisp:cons "Marker"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'reserved-cache-nodes))
      (common-lisp:list
       (common-lisp:cons "ReservedCacheNodes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          reserved-cache-node-message))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (reserved-cache-node-not-found-fault (:copier common-lisp:nil)
      (:conc-name "struct-shape-reserved-cache-node-not-found-fault-")))
 (common-lisp:export
  (common-lisp:list 'reserved-cache-node-not-found-fault
                    'make-reserved-cache-node-not-found-fault))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          reserved-cache-node-not-found-fault))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          reserved-cache-node-not-found-fault))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          reserved-cache-node-not-found-fault))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (reserved-cache-node-quota-exceeded-fault (:copier common-lisp:nil)
      (:conc-name "struct-shape-reserved-cache-node-quota-exceeded-fault-")))
 (common-lisp:export
  (common-lisp:list 'reserved-cache-node-quota-exceeded-fault
                    'make-reserved-cache-node-quota-exceeded-fault))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          reserved-cache-node-quota-exceeded-fault))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          reserved-cache-node-quota-exceeded-fault))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          reserved-cache-node-quota-exceeded-fault))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (reserved-cache-nodes-offering (:copier common-lisp:nil)
      (:conc-name "struct-shape-reserved-cache-nodes-offering-"))
   (reserved-cache-nodes-offering-id common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (cache-node-type common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (duration common-lisp:nil :type (common-lisp:or integer common-lisp:null))
   (fixed-price common-lisp:nil :type (common-lisp:or double common-lisp:null))
   (usage-price common-lisp:nil :type (common-lisp:or double common-lisp:null))
   (product-description common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (offering-type common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (recurring-charges common-lisp:nil :type
    (common-lisp:or recurring-charge-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'reserved-cache-nodes-offering
                    'make-reserved-cache-nodes-offering))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          reserved-cache-nodes-offering))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          reserved-cache-nodes-offering))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'reserved-cache-nodes-offering-id))
      (common-lisp:list
       (common-lisp:cons "ReservedCacheNodesOfferingId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'cache-node-type))
      (common-lisp:list
       (common-lisp:cons "CacheNodeType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'duration))
      (common-lisp:list
       (common-lisp:cons "Duration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'fixed-price))
      (common-lisp:list
       (common-lisp:cons "FixedPrice"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'usage-price))
      (common-lisp:list
       (common-lisp:cons "UsagePrice"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'product-description))
      (common-lisp:list
       (common-lisp:cons "ProductDescription"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'offering-type))
      (common-lisp:list
       (common-lisp:cons "OfferingType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'recurring-charges))
      (common-lisp:list
       (common-lisp:cons "RecurringCharges"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          reserved-cache-nodes-offering))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype reserved-cache-nodes-offering-list ()
   '(trivial-types:proper-list reserved-cache-nodes-offering))
 (common-lisp:defun |make-reserved-cache-nodes-offering-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            reserved-cache-nodes-offering))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (reserved-cache-nodes-offering-message (:copier common-lisp:nil)
      (:conc-name "struct-shape-reserved-cache-nodes-offering-message-"))
   (marker common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (reserved-cache-nodes-offerings common-lisp:nil :type
    (common-lisp:or reserved-cache-nodes-offering-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'reserved-cache-nodes-offering-message
                    'make-reserved-cache-nodes-offering-message))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          reserved-cache-nodes-offering-message))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          reserved-cache-nodes-offering-message))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'marker))
      (common-lisp:list
       (common-lisp:cons "Marker"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'reserved-cache-nodes-offerings))
      (common-lisp:list
       (common-lisp:cons "ReservedCacheNodesOfferings"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          reserved-cache-nodes-offering-message))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (reserved-cache-nodes-offering-not-found-fault (:copier common-lisp:nil)
      (:conc-name
       "struct-shape-reserved-cache-nodes-offering-not-found-fault-")))
 (common-lisp:export
  (common-lisp:list 'reserved-cache-nodes-offering-not-found-fault
                    'make-reserved-cache-nodes-offering-not-found-fault))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          reserved-cache-nodes-offering-not-found-fault))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          reserved-cache-nodes-offering-not-found-fault))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          reserved-cache-nodes-offering-not-found-fault))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (reset-cache-parameter-group-message (:copier common-lisp:nil)
      (:conc-name "struct-shape-reset-cache-parameter-group-message-"))
   (cache-parameter-group-name
    (common-lisp:error ":cache-parameter-group-name is required") :type
    (common-lisp:or string common-lisp:null))
   (reset-all-parameters common-lisp:nil :type
    (common-lisp:or boolean common-lisp:null))
   (parameter-name-values common-lisp:nil :type
    (common-lisp:or parameter-name-value-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'reset-cache-parameter-group-message
                    'make-reset-cache-parameter-group-message))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          reset-cache-parameter-group-message))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          reset-cache-parameter-group-message))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'cache-parameter-group-name))
      (common-lisp:list
       (common-lisp:cons "CacheParameterGroupName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'reset-all-parameters))
      (common-lisp:list
       (common-lisp:cons "ResetAllParameters"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'parameter-name-values))
      (common-lisp:list
       (common-lisp:cons "ParameterNameValues"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          reset-cache-parameter-group-message))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (revoke-cache-security-group-ingress-message (:copier common-lisp:nil)
      (:conc-name "struct-shape-revoke-cache-security-group-ingress-message-"))
   (cache-security-group-name
    (common-lisp:error ":cache-security-group-name is required") :type
    (common-lisp:or string common-lisp:null))
   (ec2security-group-name
    (common-lisp:error ":ec2security-group-name is required") :type
    (common-lisp:or string common-lisp:null))
   (ec2security-group-owner-id
    (common-lisp:error ":ec2security-group-owner-id is required") :type
    (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'revoke-cache-security-group-ingress-message
                    'make-revoke-cache-security-group-ingress-message))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          revoke-cache-security-group-ingress-message))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          revoke-cache-security-group-ingress-message))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'cache-security-group-name))
      (common-lisp:list
       (common-lisp:cons "CacheSecurityGroupName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'ec2security-group-name))
      (common-lisp:list
       (common-lisp:cons "EC2SecurityGroupName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'ec2security-group-owner-id))
      (common-lisp:list
       (common-lisp:cons "EC2SecurityGroupOwnerId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          revoke-cache-security-group-ingress-message))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (revoke-cache-security-group-ingress-result (:copier common-lisp:nil)
      (:conc-name "struct-shape-revoke-cache-security-group-ingress-result-"))
   (cache-security-group common-lisp:nil :type
    (common-lisp:or cache-security-group common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'revoke-cache-security-group-ingress-result
                    'make-revoke-cache-security-group-ingress-result))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          revoke-cache-security-group-ingress-result))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          revoke-cache-security-group-ingress-result))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'cache-security-group))
      (common-lisp:list
       (common-lisp:cons "CacheSecurityGroup"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          revoke-cache-security-group-ingress-result))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype security-group-ids-list ()
   '(trivial-types:proper-list string))
 (common-lisp:defun |make-security-group-ids-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list string))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (security-group-membership (:copier common-lisp:nil)
      (:conc-name "struct-shape-security-group-membership-"))
   (security-group-id common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (status common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'security-group-membership
                    'make-security-group-membership))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          security-group-membership))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          security-group-membership))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'security-group-id))
      (common-lisp:list
       (common-lisp:cons "SecurityGroupId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "Status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          security-group-membership))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype security-group-membership-list ()
   '(trivial-types:proper-list security-group-membership))
 (common-lisp:defun |make-security-group-membership-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            security-group-membership))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (snapshot (:copier common-lisp:nil) (:conc-name "struct-shape-snapshot-"))
   (snapshot-name common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (replication-group-id common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (replication-group-description common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (cache-cluster-id common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (snapshot-status common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (snapshot-source common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (cache-node-type common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (engine common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (engine-version common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (num-cache-nodes common-lisp:nil :type
    (common-lisp:or integer-optional common-lisp:null))
   (preferred-availability-zone common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (cache-cluster-create-time common-lisp:nil :type
    (common-lisp:or tstamp common-lisp:null))
   (preferred-maintenance-window common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (topic-arn common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (port common-lisp:nil :type
    (common-lisp:or integer-optional common-lisp:null))
   (cache-parameter-group-name common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (cache-subnet-group-name common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (vpc-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (auto-minor-version-upgrade common-lisp:nil :type
    (common-lisp:or boolean common-lisp:null))
   (snapshot-retention-limit common-lisp:nil :type
    (common-lisp:or integer-optional common-lisp:null))
   (snapshot-window common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (num-node-groups common-lisp:nil :type
    (common-lisp:or integer-optional common-lisp:null))
   (automatic-failover common-lisp:nil :type
    (common-lisp:or automatic-failover-status common-lisp:null))
   (node-snapshots common-lisp:nil :type
    (common-lisp:or node-snapshot-list common-lisp:null)))
 (common-lisp:export (common-lisp:list 'snapshot 'make-snapshot))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input snapshot))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input snapshot))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'snapshot-name))
      (common-lisp:list
       (common-lisp:cons "SnapshotName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'replication-group-id))
      (common-lisp:list
       (common-lisp:cons "ReplicationGroupId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'replication-group-description))
      (common-lisp:list
       (common-lisp:cons "ReplicationGroupDescription"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'cache-cluster-id))
      (common-lisp:list
       (common-lisp:cons "CacheClusterId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'snapshot-status))
      (common-lisp:list
       (common-lisp:cons "SnapshotStatus"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'snapshot-source))
      (common-lisp:list
       (common-lisp:cons "SnapshotSource"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'cache-node-type))
      (common-lisp:list
       (common-lisp:cons "CacheNodeType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'engine))
      (common-lisp:list
       (common-lisp:cons "Engine"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'engine-version))
      (common-lisp:list
       (common-lisp:cons "EngineVersion"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'num-cache-nodes))
      (common-lisp:list
       (common-lisp:cons "NumCacheNodes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'preferred-availability-zone))
      (common-lisp:list
       (common-lisp:cons "PreferredAvailabilityZone"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'cache-cluster-create-time))
      (common-lisp:list
       (common-lisp:cons "CacheClusterCreateTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'preferred-maintenance-window))
      (common-lisp:list
       (common-lisp:cons "PreferredMaintenanceWindow"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'topic-arn))
      (common-lisp:list
       (common-lisp:cons "TopicArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'port))
      (common-lisp:list
       (common-lisp:cons "Port"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'cache-parameter-group-name))
      (common-lisp:list
       (common-lisp:cons "CacheParameterGroupName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'cache-subnet-group-name))
      (common-lisp:list
       (common-lisp:cons "CacheSubnetGroupName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'vpc-id))
      (common-lisp:list
       (common-lisp:cons "VpcId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'auto-minor-version-upgrade))
      (common-lisp:list
       (common-lisp:cons "AutoMinorVersionUpgrade"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'snapshot-retention-limit))
      (common-lisp:list
       (common-lisp:cons "SnapshotRetentionLimit"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'snapshot-window))
      (common-lisp:list
       (common-lisp:cons "SnapshotWindow"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'num-node-groups))
      (common-lisp:list
       (common-lisp:cons "NumNodeGroups"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'automatic-failover))
      (common-lisp:list
       (common-lisp:cons "AutomaticFailover"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'node-snapshots))
      (common-lisp:list
       (common-lisp:cons "NodeSnapshots"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input snapshot))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (snapshot-already-exists-fault (:copier common-lisp:nil)
      (:conc-name "struct-shape-snapshot-already-exists-fault-")))
 (common-lisp:export
  (common-lisp:list 'snapshot-already-exists-fault
                    'make-snapshot-already-exists-fault))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          snapshot-already-exists-fault))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          snapshot-already-exists-fault))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          snapshot-already-exists-fault))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype snapshot-arns-list ()
   '(trivial-types:proper-list string))
 (common-lisp:defun |make-snapshot-arns-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list string))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (snapshot-feature-not-supported-fault (:copier common-lisp:nil)
      (:conc-name "struct-shape-snapshot-feature-not-supported-fault-")))
 (common-lisp:export
  (common-lisp:list 'snapshot-feature-not-supported-fault
                    'make-snapshot-feature-not-supported-fault))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          snapshot-feature-not-supported-fault))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          snapshot-feature-not-supported-fault))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          snapshot-feature-not-supported-fault))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype snapshot-list () '(trivial-types:proper-list snapshot))
 (common-lisp:defun |make-snapshot-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list snapshot))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (snapshot-not-found-fault (:copier common-lisp:nil)
      (:conc-name "struct-shape-snapshot-not-found-fault-")))
 (common-lisp:export
  (common-lisp:list 'snapshot-not-found-fault 'make-snapshot-not-found-fault))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          snapshot-not-found-fault))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          snapshot-not-found-fault))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          snapshot-not-found-fault))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (snapshot-quota-exceeded-fault (:copier common-lisp:nil)
      (:conc-name "struct-shape-snapshot-quota-exceeded-fault-")))
 (common-lisp:export
  (common-lisp:list 'snapshot-quota-exceeded-fault
                    'make-snapshot-quota-exceeded-fault))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          snapshot-quota-exceeded-fault))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          snapshot-quota-exceeded-fault))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          snapshot-quota-exceeded-fault))
   common-lisp:nil))
(common-lisp:deftype source-type () 'common-lisp:string)
(common-lisp:deftype string () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (subnet (:copier common-lisp:nil) (:conc-name "struct-shape-subnet-"))
   (subnet-identifier common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (subnet-availability-zone common-lisp:nil :type
    (common-lisp:or availability-zone common-lisp:null)))
 (common-lisp:export (common-lisp:list 'subnet 'make-subnet))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input subnet))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input subnet))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'subnet-identifier))
      (common-lisp:list
       (common-lisp:cons "SubnetIdentifier"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'subnet-availability-zone))
      (common-lisp:list
       (common-lisp:cons "SubnetAvailabilityZone"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input subnet))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype subnet-identifier-list ()
   '(trivial-types:proper-list string))
 (common-lisp:defun |make-subnet-identifier-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list string))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (subnet-in-use (:copier common-lisp:nil)
      (:conc-name "struct-shape-subnet-in-use-")))
 (common-lisp:export (common-lisp:list 'subnet-in-use 'make-subnet-in-use))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input subnet-in-use))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input subnet-in-use))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input subnet-in-use))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype subnet-list () '(trivial-types:proper-list subnet))
 (common-lisp:defun |make-subnet-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list subnet))
   aws-sdk/generator/shape::members))
(common-lisp:deftype tstamp () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (tag (:copier common-lisp:nil) (:conc-name "struct-shape-tag-"))
   (key common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (value common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'tag 'make-tag))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input tag))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input tag))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'key))
      (common-lisp:list
       (common-lisp:cons "Key"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'value))
      (common-lisp:list
       (common-lisp:cons "Value"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input tag))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype tag-list () '(trivial-types:proper-list tag))
 (common-lisp:defun |make-tag-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list tag))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (tag-list-message (:copier common-lisp:nil)
      (:conc-name "struct-shape-tag-list-message-"))
   (tag-list common-lisp:nil :type (common-lisp:or tag-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'tag-list-message 'make-tag-list-message))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input tag-list-message))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input tag-list-message))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tag-list))
      (common-lisp:list
       (common-lisp:cons "TagList"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input tag-list-message))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (tag-not-found-fault (:copier common-lisp:nil)
      (:conc-name "struct-shape-tag-not-found-fault-")))
 (common-lisp:export
  (common-lisp:list 'tag-not-found-fault 'make-tag-not-found-fault))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input tag-not-found-fault))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input tag-not-found-fault))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input tag-not-found-fault))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (tag-quota-per-resource-exceeded (:copier common-lisp:nil)
      (:conc-name "struct-shape-tag-quota-per-resource-exceeded-")))
 (common-lisp:export
  (common-lisp:list 'tag-quota-per-resource-exceeded
                    'make-tag-quota-per-resource-exceeded))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          tag-quota-per-resource-exceeded))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          tag-quota-per-resource-exceeded))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          tag-quota-per-resource-exceeded))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (test-failover-message (:copier common-lisp:nil)
      (:conc-name "struct-shape-test-failover-message-"))
   (replication-group-id
    (common-lisp:error ":replication-group-id is required") :type
    (common-lisp:or string common-lisp:null))
   (node-group-id (common-lisp:error ":node-group-id is required") :type
    (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'test-failover-message 'make-test-failover-message))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          test-failover-message))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          test-failover-message))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'replication-group-id))
      (common-lisp:list
       (common-lisp:cons "ReplicationGroupId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'node-group-id))
      (common-lisp:list
       (common-lisp:cons "NodeGroupId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          test-failover-message))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (test-failover-not-available-fault (:copier common-lisp:nil)
      (:conc-name "struct-shape-test-failover-not-available-fault-")))
 (common-lisp:export
  (common-lisp:list 'test-failover-not-available-fault
                    'make-test-failover-not-available-fault))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          test-failover-not-available-fault))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          test-failover-not-available-fault))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          test-failover-not-available-fault))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (test-failover-result (:copier common-lisp:nil)
      (:conc-name "struct-shape-test-failover-result-"))
   (replication-group common-lisp:nil :type
    (common-lisp:or replication-group common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'test-failover-result 'make-test-failover-result))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input test-failover-result))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input test-failover-result))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'replication-group))
      (common-lisp:list
       (common-lisp:cons "ReplicationGroup"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input test-failover-result))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defun add-tags-to-resource
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key resource-name tags)
   (common-lisp:declare (common-lisp:ignorable resource-name tags))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-add-tags-to-resource-message
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'elasticache-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "AddTagsToResource"
                                                        "2015-02-02"))
      common-lisp:nil "AddTagsToResourceResult")))
 (common-lisp:export 'add-tags-to-resource))
(common-lisp:progn
 (common-lisp:defun authorize-cache-security-group-ingress
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key cache-security-group-name
                     ec2security-group-name ec2security-group-owner-id)
   (common-lisp:declare
    (common-lisp:ignorable cache-security-group-name ec2security-group-name
     ec2security-group-owner-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-authorize-cache-security-group-ingress-message
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'elasticache-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "AuthorizeCacheSecurityGroupIngress"
                                                        "2015-02-02"))
      common-lisp:nil "AuthorizeCacheSecurityGroupIngressResult")))
 (common-lisp:export 'authorize-cache-security-group-ingress))
(common-lisp:progn
 (common-lisp:defun copy-snapshot
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key source-snapshot-name target-snapshot-name
                     target-bucket)
   (common-lisp:declare
    (common-lisp:ignorable source-snapshot-name target-snapshot-name
     target-bucket))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-copy-snapshot-message
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'elasticache-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "CopySnapshot"
                                                        "2015-02-02"))
      common-lisp:nil "CopySnapshotResult")))
 (common-lisp:export 'copy-snapshot))
(common-lisp:progn
 (common-lisp:defun create-cache-cluster
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key cache-cluster-id replication-group-id
                     azmode preferred-availability-zone
                     preferred-availability-zones num-cache-nodes
                     cache-node-type engine engine-version
                     cache-parameter-group-name cache-subnet-group-name
                     cache-security-group-names security-group-ids tags
                     snapshot-arns snapshot-name preferred-maintenance-window
                     port notification-topic-arn auto-minor-version-upgrade
                     snapshot-retention-limit snapshot-window auth-token)
   (common-lisp:declare
    (common-lisp:ignorable cache-cluster-id replication-group-id azmode
     preferred-availability-zone preferred-availability-zones num-cache-nodes
     cache-node-type engine engine-version cache-parameter-group-name
     cache-subnet-group-name cache-security-group-names security-group-ids tags
     snapshot-arns snapshot-name preferred-maintenance-window port
     notification-topic-arn auto-minor-version-upgrade snapshot-retention-limit
     snapshot-window auth-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-cache-cluster-message
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'elasticache-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "CreateCacheCluster"
                                                        "2015-02-02"))
      common-lisp:nil "CreateCacheClusterResult")))
 (common-lisp:export 'create-cache-cluster))
(common-lisp:progn
 (common-lisp:defun create-cache-parameter-group
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key cache-parameter-group-name
                     cache-parameter-group-family description)
   (common-lisp:declare
    (common-lisp:ignorable cache-parameter-group-name
     cache-parameter-group-family description))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-create-cache-parameter-group-message
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'elasticache-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "CreateCacheParameterGroup"
                                                        "2015-02-02"))
      common-lisp:nil "CreateCacheParameterGroupResult")))
 (common-lisp:export 'create-cache-parameter-group))
(common-lisp:progn
 (common-lisp:defun create-cache-security-group
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key cache-security-group-name description)
   (common-lisp:declare
    (common-lisp:ignorable cache-security-group-name description))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-create-cache-security-group-message
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'elasticache-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "CreateCacheSecurityGroup"
                                                        "2015-02-02"))
      common-lisp:nil "CreateCacheSecurityGroupResult")))
 (common-lisp:export 'create-cache-security-group))
(common-lisp:progn
 (common-lisp:defun create-cache-subnet-group
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key cache-subnet-group-name
                     cache-subnet-group-description subnet-ids)
   (common-lisp:declare
    (common-lisp:ignorable cache-subnet-group-name
     cache-subnet-group-description subnet-ids))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-create-cache-subnet-group-message
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'elasticache-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "CreateCacheSubnetGroup"
                                                        "2015-02-02"))
      common-lisp:nil "CreateCacheSubnetGroupResult")))
 (common-lisp:export 'create-cache-subnet-group))
(common-lisp:progn
 (common-lisp:defun create-replication-group
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key replication-group-id
                     replication-group-description primary-cluster-id
                     automatic-failover-enabled num-cache-clusters
                     preferred-cache-cluster-azs num-node-groups
                     replicas-per-node-group node-group-configuration
                     cache-node-type engine engine-version
                     cache-parameter-group-name cache-subnet-group-name
                     cache-security-group-names security-group-ids tags
                     snapshot-arns snapshot-name preferred-maintenance-window
                     port notification-topic-arn auto-minor-version-upgrade
                     snapshot-retention-limit snapshot-window auth-token)
   (common-lisp:declare
    (common-lisp:ignorable replication-group-id replication-group-description
     primary-cluster-id automatic-failover-enabled num-cache-clusters
     preferred-cache-cluster-azs num-node-groups replicas-per-node-group
     node-group-configuration cache-node-type engine engine-version
     cache-parameter-group-name cache-subnet-group-name
     cache-security-group-names security-group-ids tags snapshot-arns
     snapshot-name preferred-maintenance-window port notification-topic-arn
     auto-minor-version-upgrade snapshot-retention-limit snapshot-window
     auth-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-replication-group-message
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'elasticache-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "CreateReplicationGroup"
                                                        "2015-02-02"))
      common-lisp:nil "CreateReplicationGroupResult")))
 (common-lisp:export 'create-replication-group))
(common-lisp:progn
 (common-lisp:defun create-snapshot
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key replication-group-id cache-cluster-id
                     snapshot-name)
   (common-lisp:declare
    (common-lisp:ignorable replication-group-id cache-cluster-id
     snapshot-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-snapshot-message
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'elasticache-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "CreateSnapshot"
                                                        "2015-02-02"))
      common-lisp:nil "CreateSnapshotResult")))
 (common-lisp:export 'create-snapshot))
(common-lisp:progn
 (common-lisp:defun delete-cache-cluster
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key cache-cluster-id
                     final-snapshot-identifier)
   (common-lisp:declare
    (common-lisp:ignorable cache-cluster-id final-snapshot-identifier))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-cache-cluster-message
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'elasticache-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "DeleteCacheCluster"
                                                        "2015-02-02"))
      common-lisp:nil "DeleteCacheClusterResult")))
 (common-lisp:export 'delete-cache-cluster))
(common-lisp:progn
 (common-lisp:defun delete-cache-parameter-group
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key cache-parameter-group-name)
   (common-lisp:declare (common-lisp:ignorable cache-parameter-group-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-delete-cache-parameter-group-message
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'elasticache-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "DeleteCacheParameterGroup"
                                                        "2015-02-02"))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'delete-cache-parameter-group))
(common-lisp:progn
 (common-lisp:defun delete-cache-security-group
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key cache-security-group-name)
   (common-lisp:declare (common-lisp:ignorable cache-security-group-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-delete-cache-security-group-message
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'elasticache-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "DeleteCacheSecurityGroup"
                                                        "2015-02-02"))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'delete-cache-security-group))
(common-lisp:progn
 (common-lisp:defun delete-cache-subnet-group
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key cache-subnet-group-name)
   (common-lisp:declare (common-lisp:ignorable cache-subnet-group-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-delete-cache-subnet-group-message
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'elasticache-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "DeleteCacheSubnetGroup"
                                                        "2015-02-02"))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'delete-cache-subnet-group))
(common-lisp:progn
 (common-lisp:defun delete-replication-group
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key replication-group-id
                     retain-primary-cluster final-snapshot-identifier)
   (common-lisp:declare
    (common-lisp:ignorable replication-group-id retain-primary-cluster
     final-snapshot-identifier))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-replication-group-message
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'elasticache-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "DeleteReplicationGroup"
                                                        "2015-02-02"))
      common-lisp:nil "DeleteReplicationGroupResult")))
 (common-lisp:export 'delete-replication-group))
(common-lisp:progn
 (common-lisp:defun delete-snapshot
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key snapshot-name)
   (common-lisp:declare (common-lisp:ignorable snapshot-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-snapshot-message
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'elasticache-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "DeleteSnapshot"
                                                        "2015-02-02"))
      common-lisp:nil "DeleteSnapshotResult")))
 (common-lisp:export 'delete-snapshot))
(common-lisp:progn
 (common-lisp:defun describe-cache-clusters
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key cache-cluster-id max-records marker
                     show-cache-node-info
                     show-cache-clusters-not-in-replication-groups)
   (common-lisp:declare
    (common-lisp:ignorable cache-cluster-id max-records marker
     show-cache-node-info show-cache-clusters-not-in-replication-groups))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-describe-cache-clusters-message
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'elasticache-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "DescribeCacheClusters"
                                                        "2015-02-02"))
      common-lisp:nil "DescribeCacheClustersResult")))
 (common-lisp:export 'describe-cache-clusters))
(common-lisp:progn
 (common-lisp:defun describe-cache-engine-versions
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key engine engine-version
                     cache-parameter-group-family max-records marker
                     default-only)
   (common-lisp:declare
    (common-lisp:ignorable engine engine-version cache-parameter-group-family
     max-records marker default-only))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-describe-cache-engine-versions-message
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'elasticache-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "DescribeCacheEngineVersions"
                                                        "2015-02-02"))
      common-lisp:nil "DescribeCacheEngineVersionsResult")))
 (common-lisp:export 'describe-cache-engine-versions))
(common-lisp:progn
 (common-lisp:defun describe-cache-parameter-groups
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key cache-parameter-group-name max-records
                     marker)
   (common-lisp:declare
    (common-lisp:ignorable cache-parameter-group-name max-records marker))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-describe-cache-parameter-groups-message
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'elasticache-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "DescribeCacheParameterGroups"
                                                        "2015-02-02"))
      common-lisp:nil "DescribeCacheParameterGroupsResult")))
 (common-lisp:export 'describe-cache-parameter-groups))
(common-lisp:progn
 (common-lisp:defun describe-cache-parameters
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key cache-parameter-group-name source
                     max-records marker)
   (common-lisp:declare
    (common-lisp:ignorable cache-parameter-group-name source max-records
     marker))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-describe-cache-parameters-message
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'elasticache-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "DescribeCacheParameters"
                                                        "2015-02-02"))
      common-lisp:nil "DescribeCacheParametersResult")))
 (common-lisp:export 'describe-cache-parameters))
(common-lisp:progn
 (common-lisp:defun describe-cache-security-groups
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key cache-security-group-name max-records
                     marker)
   (common-lisp:declare
    (common-lisp:ignorable cache-security-group-name max-records marker))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-describe-cache-security-groups-message
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'elasticache-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "DescribeCacheSecurityGroups"
                                                        "2015-02-02"))
      common-lisp:nil "DescribeCacheSecurityGroupsResult")))
 (common-lisp:export 'describe-cache-security-groups))
(common-lisp:progn
 (common-lisp:defun describe-cache-subnet-groups
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key cache-subnet-group-name max-records
                     marker)
   (common-lisp:declare
    (common-lisp:ignorable cache-subnet-group-name max-records marker))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-describe-cache-subnet-groups-message
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'elasticache-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "DescribeCacheSubnetGroups"
                                                        "2015-02-02"))
      common-lisp:nil "DescribeCacheSubnetGroupsResult")))
 (common-lisp:export 'describe-cache-subnet-groups))
(common-lisp:progn
 (common-lisp:defun describe-engine-default-parameters
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key cache-parameter-group-family max-records
                     marker)
   (common-lisp:declare
    (common-lisp:ignorable cache-parameter-group-family max-records marker))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-describe-engine-default-parameters-message
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'elasticache-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "DescribeEngineDefaultParameters"
                                                        "2015-02-02"))
      common-lisp:nil "DescribeEngineDefaultParametersResult")))
 (common-lisp:export 'describe-engine-default-parameters))
(common-lisp:progn
 (common-lisp:defun describe-events
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key source-identifier source-type start-time
                     end-time duration max-records marker)
   (common-lisp:declare
    (common-lisp:ignorable source-identifier source-type start-time end-time
     duration max-records marker))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-describe-events-message
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'elasticache-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "DescribeEvents"
                                                        "2015-02-02"))
      common-lisp:nil "DescribeEventsResult")))
 (common-lisp:export 'describe-events))
(common-lisp:progn
 (common-lisp:defun describe-replication-groups
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key replication-group-id max-records marker)
   (common-lisp:declare
    (common-lisp:ignorable replication-group-id max-records marker))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-describe-replication-groups-message
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'elasticache-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "DescribeReplicationGroups"
                                                        "2015-02-02"))
      common-lisp:nil "DescribeReplicationGroupsResult")))
 (common-lisp:export 'describe-replication-groups))
(common-lisp:progn
 (common-lisp:defun describe-reserved-cache-nodes
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key reserved-cache-node-id
                     reserved-cache-nodes-offering-id cache-node-type duration
                     product-description offering-type max-records marker)
   (common-lisp:declare
    (common-lisp:ignorable reserved-cache-node-id
     reserved-cache-nodes-offering-id cache-node-type duration
     product-description offering-type max-records marker))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-describe-reserved-cache-nodes-message
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'elasticache-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "DescribeReservedCacheNodes"
                                                        "2015-02-02"))
      common-lisp:nil "DescribeReservedCacheNodesResult")))
 (common-lisp:export 'describe-reserved-cache-nodes))
(common-lisp:progn
 (common-lisp:defun describe-reserved-cache-nodes-offerings
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key reserved-cache-nodes-offering-id
                     cache-node-type duration product-description offering-type
                     max-records marker)
   (common-lisp:declare
    (common-lisp:ignorable reserved-cache-nodes-offering-id cache-node-type
     duration product-description offering-type max-records marker))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-describe-reserved-cache-nodes-offerings-message
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'elasticache-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "DescribeReservedCacheNodesOfferings"
                                                        "2015-02-02"))
      common-lisp:nil "DescribeReservedCacheNodesOfferingsResult")))
 (common-lisp:export 'describe-reserved-cache-nodes-offerings))
(common-lisp:progn
 (common-lisp:defun describe-snapshots
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key replication-group-id cache-cluster-id
                     snapshot-name snapshot-source marker max-records
                     show-node-group-config)
   (common-lisp:declare
    (common-lisp:ignorable replication-group-id cache-cluster-id snapshot-name
     snapshot-source marker max-records show-node-group-config))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-describe-snapshots-message
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'elasticache-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "DescribeSnapshots"
                                                        "2015-02-02"))
      common-lisp:nil "DescribeSnapshotsResult")))
 (common-lisp:export 'describe-snapshots))
(common-lisp:progn
 (common-lisp:defun list-allowed-node-type-modifications
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key cache-cluster-id replication-group-id)
   (common-lisp:declare
    (common-lisp:ignorable cache-cluster-id replication-group-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-list-allowed-node-type-modifications-message
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'elasticache-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "ListAllowedNodeTypeModifications"
                                                        "2015-02-02"))
      common-lisp:nil "ListAllowedNodeTypeModificationsResult")))
 (common-lisp:export 'list-allowed-node-type-modifications))
(common-lisp:progn
 (common-lisp:defun list-tags-for-resource
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key resource-name)
   (common-lisp:declare (common-lisp:ignorable resource-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-tags-for-resource-message
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'elasticache-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "ListTagsForResource"
                                                        "2015-02-02"))
      common-lisp:nil "ListTagsForResourceResult")))
 (common-lisp:export 'list-tags-for-resource))
(common-lisp:progn
 (common-lisp:defun modify-cache-cluster
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key cache-cluster-id num-cache-nodes
                     cache-node-ids-to-remove azmode new-availability-zones
                     cache-security-group-names security-group-ids
                     preferred-maintenance-window notification-topic-arn
                     cache-parameter-group-name notification-topic-status
                     apply-immediately engine-version
                     auto-minor-version-upgrade snapshot-retention-limit
                     snapshot-window cache-node-type)
   (common-lisp:declare
    (common-lisp:ignorable cache-cluster-id num-cache-nodes
     cache-node-ids-to-remove azmode new-availability-zones
     cache-security-group-names security-group-ids preferred-maintenance-window
     notification-topic-arn cache-parameter-group-name
     notification-topic-status apply-immediately engine-version
     auto-minor-version-upgrade snapshot-retention-limit snapshot-window
     cache-node-type))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-modify-cache-cluster-message
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'elasticache-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "ModifyCacheCluster"
                                                        "2015-02-02"))
      common-lisp:nil "ModifyCacheClusterResult")))
 (common-lisp:export 'modify-cache-cluster))
(common-lisp:progn
 (common-lisp:defun modify-cache-parameter-group
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key cache-parameter-group-name
                     parameter-name-values)
   (common-lisp:declare
    (common-lisp:ignorable cache-parameter-group-name parameter-name-values))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-modify-cache-parameter-group-message
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'elasticache-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "ModifyCacheParameterGroup"
                                                        "2015-02-02"))
      common-lisp:nil "ModifyCacheParameterGroupResult")))
 (common-lisp:export 'modify-cache-parameter-group))
(common-lisp:progn
 (common-lisp:defun modify-cache-subnet-group
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key cache-subnet-group-name
                     cache-subnet-group-description subnet-ids)
   (common-lisp:declare
    (common-lisp:ignorable cache-subnet-group-name
     cache-subnet-group-description subnet-ids))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-modify-cache-subnet-group-message
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'elasticache-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "ModifyCacheSubnetGroup"
                                                        "2015-02-02"))
      common-lisp:nil "ModifyCacheSubnetGroupResult")))
 (common-lisp:export 'modify-cache-subnet-group))
(common-lisp:progn
 (common-lisp:defun modify-replication-group
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key replication-group-id
                     replication-group-description primary-cluster-id
                     snapshotting-cluster-id automatic-failover-enabled
                     cache-security-group-names security-group-ids
                     preferred-maintenance-window notification-topic-arn
                     cache-parameter-group-name notification-topic-status
                     apply-immediately engine-version
                     auto-minor-version-upgrade snapshot-retention-limit
                     snapshot-window cache-node-type node-group-id)
   (common-lisp:declare
    (common-lisp:ignorable replication-group-id replication-group-description
     primary-cluster-id snapshotting-cluster-id automatic-failover-enabled
     cache-security-group-names security-group-ids preferred-maintenance-window
     notification-topic-arn cache-parameter-group-name
     notification-topic-status apply-immediately engine-version
     auto-minor-version-upgrade snapshot-retention-limit snapshot-window
     cache-node-type node-group-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-modify-replication-group-message
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'elasticache-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "ModifyReplicationGroup"
                                                        "2015-02-02"))
      common-lisp:nil "ModifyReplicationGroupResult")))
 (common-lisp:export 'modify-replication-group))
(common-lisp:progn
 (common-lisp:defun purchase-reserved-cache-nodes-offering
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key reserved-cache-nodes-offering-id
                     reserved-cache-node-id cache-node-count)
   (common-lisp:declare
    (common-lisp:ignorable reserved-cache-nodes-offering-id
     reserved-cache-node-id cache-node-count))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-purchase-reserved-cache-nodes-offering-message
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'elasticache-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "PurchaseReservedCacheNodesOffering"
                                                        "2015-02-02"))
      common-lisp:nil "PurchaseReservedCacheNodesOfferingResult")))
 (common-lisp:export 'purchase-reserved-cache-nodes-offering))
(common-lisp:progn
 (common-lisp:defun reboot-cache-cluster
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key cache-cluster-id
                     cache-node-ids-to-reboot)
   (common-lisp:declare
    (common-lisp:ignorable cache-cluster-id cache-node-ids-to-reboot))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-reboot-cache-cluster-message
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'elasticache-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "RebootCacheCluster"
                                                        "2015-02-02"))
      common-lisp:nil "RebootCacheClusterResult")))
 (common-lisp:export 'reboot-cache-cluster))
(common-lisp:progn
 (common-lisp:defun remove-tags-from-resource
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key resource-name tag-keys)
   (common-lisp:declare (common-lisp:ignorable resource-name tag-keys))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-remove-tags-from-resource-message
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'elasticache-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "RemoveTagsFromResource"
                                                        "2015-02-02"))
      common-lisp:nil "RemoveTagsFromResourceResult")))
 (common-lisp:export 'remove-tags-from-resource))
(common-lisp:progn
 (common-lisp:defun reset-cache-parameter-group
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key cache-parameter-group-name
                     reset-all-parameters parameter-name-values)
   (common-lisp:declare
    (common-lisp:ignorable cache-parameter-group-name reset-all-parameters
     parameter-name-values))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-reset-cache-parameter-group-message
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'elasticache-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "ResetCacheParameterGroup"
                                                        "2015-02-02"))
      common-lisp:nil "ResetCacheParameterGroupResult")))
 (common-lisp:export 'reset-cache-parameter-group))
(common-lisp:progn
 (common-lisp:defun revoke-cache-security-group-ingress
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key cache-security-group-name
                     ec2security-group-name ec2security-group-owner-id)
   (common-lisp:declare
    (common-lisp:ignorable cache-security-group-name ec2security-group-name
     ec2security-group-owner-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-revoke-cache-security-group-ingress-message
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'elasticache-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "RevokeCacheSecurityGroupIngress"
                                                        "2015-02-02"))
      common-lisp:nil "RevokeCacheSecurityGroupIngressResult")))
 (common-lisp:export 'revoke-cache-security-group-ingress))
(common-lisp:progn
 (common-lisp:defun test-failover
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key replication-group-id node-group-id)
   (common-lisp:declare
    (common-lisp:ignorable replication-group-id node-group-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-test-failover-message
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'elasticache-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "TestFailover"
                                                        "2015-02-02"))
      common-lisp:nil "TestFailoverResult")))
 (common-lisp:export 'test-failover))
